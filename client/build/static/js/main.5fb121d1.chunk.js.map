{"version":3,"sources":["components/common/EditableTable.js","data/CustomerData.js","components/Forms/CustomerForm.js","components/common/InputField.js","components/common/SelectField.js","data/InvoiceData.js","data/InvoiceFormData.js","api/index.js","components/Forms/InvoiceForm.js","data/ReceiptData.js","data/ItemData.js","data/CompanyData.js","data/GroupData.js","data/LedgerData.js","util/util.js","components/Reports.js","components/Homepage.js","components/Navbar.js","atoms/Heading.js","atoms/Text.js","images/cryptocurrency.png","images/login-bg.jpg","components/loginContent.js","atoms/InputLabel.js","atoms/InputField.js","atoms/Button.js","components/loginForm.js","lib/react-otp-input.jsx","components/OtpComponent.js","components/otpScreen.js","components/LoginTemplate.js","data/FundData.js","components/FundReport.js","components/Modal/InvoiceDetailModal.js","components/Modal/FilterModal.js","components/Modal/SelectedFilters.js","components/Invoices.js","components/CSVComponent/ListValidationErrors.js","atoms/Card.js","components/CSVComponent/ProcessCsvStructure.js","components/CSVComponent/CSVComponent.js","components/CSVComponent/DownloadCsv.js","molecules/IconWithHeading.js","components/UploadForm.js","components/Page.js","App.js","components/Customer.js","index.js"],"names":["EditableRow","index","props","EditableCell","title","editable","children","dataIndex","record","handleSave","items","handleTaxInput","restProps","onSave","name","value","taxRow","total","parseFloat","newValues","categoryName","itemId","rate","itemCode","code","childNode","className","onChange","e","target","placeholder","showSearch","optionFilterProp","showArrow","filterOption","input","option","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","Object","values","map","ele","Option","id","style","paddingRight","fontSize","EditableTable","setTransactions","transactions","notEditable","invoiceDetails","setParentTaxableRows","useState","dataSource","setDataSource","useEffect","numberRender","number","data","toLocaleString","defaultColumns","width","render","push","_","onConfirm","key","newData","filter","item","handleDelete","row","findIndex","splice","staticRowCount","igstRow","fieldName","igst","cgstRow","cgst","sgstRow","sgst","cess","roundOff","taxaRowsData","setTaxRowsData","_obj","components","body","cell","columns","col","onCell","__","exceptionRows","includes","colSpan","taxableAmount","reduce","taxSum","taxableRow","totalRow","totalValue","onClick","uuid","quantity","type","marginBottom","rowClassName","bordered","pagination","CustomerData","label","inputType","list","getData","a","getCompanies","res","console","log","entity","rows","company","division","CustomerForm","callback","setEditData","page","FieldData","getFieldData","initialData","previous","field","formData","setFormData","onSelectChange","selectFieldList","initialMasterData","masterData","setMasterData","fetchCompanies","setDivisions","newMasterData","length","onSubmit","close","finalData","updateApiFn","response","status","swal","createApiFn","reset","replace","eval","text","span","icon","InputField","lcol","icol","inputProps","Select","SelectField","property","selected","InvoiceData","InvoiceFormData","cookies","Cookies","getAuth","get","setAuth","authObject","set","JSON","stringify","path","removeAuth","remove","UrlParamsReplace","url","params","queryParams","urlWithPrefix","keys","forEach","queryParamsWithoutNull","undefined","urlSearchParams","URLSearchParams","toString","window","location","hostname","API","axios","create","baseURL","getHeaders","token","userLogin","mobileNumber","post","userSession","otp","createSalesInBulk","sales","headers","createReceiptsInBulk","receipts","getAllInvoices","search","offset","limit","filters","getInvoiceById","invoiceId","createInvoice","invoice","updateInvoice","put","deleteInvoice","delete","getReports","getFundsReports","reportType","date","month","year","getAllReceipts","deleteReceipt","createCompany","updateCompany","deleteCompany","getCustomers","createCustomer","customer","updateCustomer","deleteCustomer","getItems","createItem","updateItem","deleteItem","_get_","entityName","_create_","_update_","_delete_","InvoiceForm","invoiceDate","moment","format","labourCharges","claimAmount","tcs","customers","setCustomers","divisions","setItems","fetchData","customerType","companyId","resC","result","element","found","find","c","sweetalertValidate","customerId","t","additinalField","fN","setTaxableRows","taxableRows","ReceiptData","ItemData","CompanyData","GroupData","LedgerData","group","message","buttons","cancel","visible","closeModal","confirm","sweetalertMessage","sweetalertOkCancel","confirmFunction","cancelFunction","then","isConfirm","r","Math","random","getDateWithTime","h","m","s","mo","toDate","getTitle","column","getPageName","mappingData","invoiceNumber","customerName","customerCode","companyName","receiptDate","getApiFn","isUploadButton","deleteApiFn","Title","Typography","Reports","actualMonths","divisionReports","setDivisonReports","companyReports","setCompanyReports","financialYearMonths","getMonthNamesForFinancialYear","divisionMap","companyMap","monthStr","slice","taxable_amount","divisionRows","companyRows","monthCols","getColums","Text","ellipsis","showDataInTable","columnsCompany","level","color","rowKey","Date","getTime","months","currentDate","currentMonth","getMonth","currentYear","getFullYear","i","yearSuffix","Homepage","margin","Item","Navbar","collapsed","activeMenu","setActiveMenu","screenSize","setScreenSize","handleResize","innerWidth","addEventListener","removeEventListener","defaultSelectedKeys","pathname","to","MenuOutlined","theme","mode","defaultOpenKeys","subMenuOpenDelay","SubMenu","HomeOutlined","BarChartOutlined","PieChartOutlined","FileExcelOutlined","FundOutlined","MoneyCollectOutlined","StrikethroughOutlined","DatabaseOutlined","UsergroupAddOutlined","PayCircleOutlined","BankOutlined","OrderedListOutlined","Heading","properties","HeadingVariants","h1","h2","h3","h4","h5","h6","Type","whiteSpace","LoginContent","loginContentHeading","loginContentDesc","src","height","alt","bg","layout","objectFit","InputLabel","labelFor","variant","textColor","fontWeight","labelDisable","htmlFor","small","medium","large","disabled","error","isRequired","register","maxLength","borderColor","borderRadius","defaultValue","onChangeValue","inputLength","getValues","normal","outline","outlineBottom","inputValue","Button","padding","btnClass","imgClassName","imgSrc","imgWidth","imgHeight","imgAlt","form","buttonRef","primaryBtn","outlineBtn","normalBtn","secondaryBtn","ref","LoginForm","loginDetails","apierror","setDisabled","setError","preventDefault","event","isStyleObject","obj","SingleOtpInput","getClasses","classes","join","getType","isInputSecure","isInputNum","React","createRef","this","focus","shouldAutoFocus","inputEl","current","prevProps","select","separator","isLastChild","inputStyle","isDisabled","hasErrored","errorStyle","focusStyle","disabledStyle","rest","display","alignItems","autoComplete","assign","textAlign","PureComponent","OtpInput","state","activeInput","getOtpValue","split","getPlaceholderValue","numInputs","handleOtpChange","isInputValueValid","isNaN","parseInt","trim","focusInput","max","min","setState","focusNextInput","focusPrevInput","changeCodeAtFocus","handleOnPaste","nextActiveInput","pastedData","clipboardData","pos","shift","handleOnChange","handleOnKeyDown","keyCode","handleOnInput","nativeEvent","renderInputs","inputs","dataCy","dataTestId","onKeyDown","onInput","onPaste","onFocus","onBlur","containerStyle","Component","defaultProps","OtpComponent","otpValue","errorMessage","border","marginRight","lineHeight","OtpScreen","handleLogin","editMobile","resendOtp","setOtp","timer","setTimer","useCallback","currTimer","EditOutlined","LoginTemplate","apiError","setApiError","step","setLoginDetails","handleGetOTP","countryCode","reload","prevState","defaultValues","renderSwitch","FundData","FundReport","asOnReports","setAsOnReports","monthReports","setMonthReports","setDate","setMonth","dataMap","company_id","fundAvailable","obj_","toatalCollection","total_amount_for_date","total_amount_for_month_and_year","toatlPayment","getRender","InvoiceDetailsModal","setVisible","setInvoiceDetails","fetchInvoicesDetails","top","keyboard","onCancel","footer","customerData","milk","getDates","dates","fromDate","RangePicker","DatePicker","FilterModal","onOk","dateRange","setDateRange","companyIds","setComapnyIds","customerIds","setCustomerIds","handleOk","getOptions","fetchCustomers","dateRender","allowClear","SelectedFilters","onRemoveFilter","show","nameMap","checkFunction","closable","onClose","handleClose","Invoices","setReload","invoices","setInvoices","visibleID","setVisibleID","selectedInvoiceId","setSelectedInvoiceId","currentPage","setCurrentPage","pageSize","setPageSize","setTotal","setSearch","setFilter","visibleFilter","setVisibleFilter","fetchInvoices","getApi","count","onDelete","deleteApi","openInvoiceDetail","onEdit","DeleteOutlined","initpageSizeOptions","pageSizeOptions","position","onShowSizeChange","size","showSizeChanger","ListValidationErrors","tableData","invalidHeader","setHasErrors","setRecord","reason","convertToUl","idx","processReason","invalidColumn","Card","cardClass","cardWidth","cardBg","cardBorder","cardBorderColor","cardRadius","cardPadding","cardShadow","cardHeight","ProcessCsvStructure","acceptedFile","onValidate","resetUploadedCsv","setCsvArray","setCsvErrors","dataKeysMap","readString","validateButtonRef","usePapaParse","keysMap","validateFieldNames","readCsvData","alert","invalidHeaders","newCsv","acc","renameKeys","handleReadString","onSuccess","emptyUploadedCsv","worker","header","skipEmptyLines","complete","results","handleCsvEmpty","CSVComponent","validateBulkCreation","hasErrors","csvErrors","csvArray","setInvalidHeader","CSVReader","useCSVReader","buttonRefCancel","useRef","csvFileData","setCsvFileData","click","onUploadAccepted","getRootProps","getRemoveFileProps","ProgressBar","RemoveFile","FileProtectOutlined","DownloadCsv","sampleData","fileName","useCSVDownloader","CSVDownloader","filename","bom","config","delimiter","IconWithHeading","headingChildren","textChildren","getIcon","onIconClick","headingStyle","BulkUploadForm","setValidatedData","handleBulkCreation","csvData","createApi","csvErrorArray","getDataKeysMap","GlobalOutlined","Page","upload","setUpload","showAdd","setShowAdd","editData","CloseCircleOutlined","PlusCircleOutlined","UploadOutlined","setTimeout","document","getElementById","scrollIntoView","Header","Layout","Content","Sider","Footer","App","setCollapsed","collapsible","onCollapse","float","NotificationOutlined","MailOutlined","UserOutlined","AppstoreOutlined","overflowY","exact","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.5fb121d1.chunk.js","sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Button, Form, Input, Popconfirm, Select, Table } from 'antd';\nimport { uuid } from '../../util/util';\n\nconst EditableRow = ({ index, ...props }) => {\n  return (\n      <tr {...props} />\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  items,\n  handleTaxInput,\n  ...restProps\n}) => {\n  \n\n\n  const onSave = (name, value) => {\n    if(!record.taxRow){\n      let newValues = {};\n      if( dataIndex === 'categoryName'){\n          newValues = { categoryName: items[value].name, itemId: value, rate: null, itemCode: items[value].code };\n      }\n      else{\n        newValues = { [dataIndex]: value == '' ? 0 : parseFloat(value) };\n      }\n     \n    \n      handleSave({ ...record, ...newValues });\n    }\n    else{\n      handleTaxInput({ ...record, total:  value == '' ? 0 : parseFloat(value) });\n    }\n    \n  }\n\n    let childNode = children;\n    \n    let edit = false;\n    if(dataIndex == 'total' && editable){\n      edit = true;\n    }\n    else{\n      edit = editable  && !record.taxRow;\n    }\n    if (edit) {\n        //childNode = editing ? (\n        //if(dataIndex == 'total') console.log(record, record[dataIndex]);\n        childNode = record.categoryName != 'Total Amount' && record.categoryName != 'Taxable Value'?  ( \n            <>{ dataIndex !== 'categoryName' ? \n                <Input className=\"w-full\" onChange={(e) => onSave(dataIndex, e.target.value)} value={record[dataIndex]}/> :\n                <Select\n                    placeholder={'Select Items'}\n                    showSearch\n                    optionFilterProp=\"children\"\n                    showArrow={false}\n                    value={record?.itemId}\n                    onChange={(value) => onSave(dataIndex, value)}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                    filterSort={(optionA, optionB) =>\n                        optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                    }\n                    key={'itemId'}\n                    className=\"w-full\"\n                >\n                    { Object.values(items).map((ele,index) => <Option value={ele.id} key={index}>{ ele.name}</Option>) }\n                </Select>\n            }\n        </>) : (\n        <div\n            className=\"editable-cell-value-wrap font-bold\"\n            style={{\n              paddingRight: 24,\n              fontSize: '16px',\n            }}\n        >\n            {children}\n        </div>\n        );\n    }\n\n    return <td {...restProps}>{childNode}</td>;\n};\n\nconst EditableTable = ({ setTransactions, transactions, items, notEditable, invoiceDetails, setParentTaxableRows }) => {\n  const [dataSource, setDataSource] = useState([]);\n\n  useEffect(() => {\n    setDataSource(transactions || []);\n  },[transactions])\n\n  const handleDelete = (key) => {\n    const newData = dataSource.filter((item) => item.key !== key);\n    // console.log('handleDelete', newData);\n    setDataSource(newData);\n    setTransactions(newData);\n  };\n\n  const numberRender = (number, data) => {\n    return (\n        <div>\n            { number ? number.toLocaleString('en-IN') : number } \n        </div>\n    )\n  }\n\n  const defaultColumns = [\n    {\n      title: 'Item Name',\n      dataIndex: 'categoryName',\n      width: '35%',\n      editable: !notEditable\n    },\n    {\n      title: 'Item Code',\n      dataIndex: 'itemCode',\n      width: '15%'\n    },\n    // {\n    //   title: 'Taxable Value',\n    //   dataIndex: 'rate',\n    //   width: '10%',\n    //   editable: !notEditable,\n    //   render: numberRender\n    // },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      width: '10%',\n      editable: !notEditable\n    },\n    {\n      title: 'Taxable Value',\n      dataIndex: 'total',\n      width: '20%',\n      render: numberRender,\n      editable: !notEditable\n    },\n  ];\n\n  if(!notEditable){\n    defaultColumns.push({\n      title: 'Action',\n      dataIndex: 'operation',\n      width: '5%',\n      render: (_, record) =>\n       !record.taxRow && (\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n            <a>Delete</a>\n          </Popconfirm>\n        ),\n    })\n  }\n\n  const handleAdd = () => {\n    const newData = {\n      key: uuid(),\n      categoryName: `Select Item`,\n      rate: '0',\n      quantity: `0`,\n      total: 0,\n    };\n    setDataSource([...dataSource, newData]);\n  };\n\n  const handleSave = (row) => {\n    const newData = [...dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    // setDataSource(newData);\n    setTransactions(newData);\n  };\n\n  // console.log(invoiceDetails, notEditable)\n  let staticRowCount = 2;\n  const igstRow = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `IGST`,\n    taxRow: true,\n    fieldName: 'igst',\n    total: invoiceDetails.igst || 0 \n  }\n\n  const cgstRow = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `CGST`,\n    taxRow: true,\n    fieldName: 'cgst',\n    total: invoiceDetails.cgst || 0\n  }\n\n  const sgstRow = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `SGST`,\n    taxRow: true,\n    fieldName: 'sgst',\n    total: invoiceDetails.sgst || 0\n  }\n\n  const cess = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `Cess`,\n    taxRow: true,\n    fieldName: 'cess',\n    total: invoiceDetails.cess || 0\n  }\n\n  const roundOff = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `Round Off`,\n    taxRow: true,\n    fieldName: 'roundOff',\n    total: invoiceDetails.roundOff || 0\n  }\n\n  const [taxaRowsData, setTaxRowsData] = useState([igstRow, cgstRow, sgstRow, cess, roundOff]);\n  useEffect(()=> {\n    setTaxRowsData([ ...taxaRowsData.map((_obj) => ({ ..._obj,  total: invoiceDetails[_obj.fieldName] || 0 }))]);\n  }, [invoiceDetails])\n\n  const handleTaxInput = (row) => {\n    const newData = [...taxaRowsData];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    setTaxRowsData(newData);\n    setParentTaxableRows(newData);\n  };\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n  const columns = defaultColumns.map((col) => {\n\n    return {\n      ...col,\n      onCell: (record, index) => {\n        let __ = {};\n        const exceptionRows = ['Total Amount', 'Taxable Value', 'IGST', 'CGST', 'SGST', 'Cess', 'Round Off'];\n        if(exceptionRows.includes(record.categoryName) && col.dataIndex == 'categoryName' ){\n          __ = {\n            colSpan: 3\n          }\n        }\n\n        if(exceptionRows.includes(record.categoryName) &&  (col.dataIndex == 'quantity' || col.dataIndex == 'rate' || col.dataIndex == 'itemCode') ){\n          __ = {\n            colSpan: 0\n          }\n        }\n        if (!col.editable) {\n          return __;\n        }\n        \n        return ({\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave,\n            items,\n            handleTaxInput,\n            ...__\n          })\n        },\n    };\n  });\n\n  \n\n  const taxableAmount = dataSource.reduce((total, record) => total + record.total, 0 );\n  const taxSum = taxaRowsData.reduce((total, record) => total + parseFloat(record.total || 0) , 0 );\n  const taxableRow = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `Taxable Value`,\n    total: notEditable ? invoiceDetails.taxableAmount : taxableAmount,\n    render: numberRender,\n    taxRow: true,\n  }\n\n\n  const totalRow = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `Total Amount`,\n    taxRow: true,\n    total: notEditable ? invoiceDetails.totalValue  : (taxableAmount + taxSum) \n  }\n\n  // console.log(taxaRowsData);\n  return (\n    <div>\n      { !notEditable ? \n        <Button\n          onClick={handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        > \n        Add a item\n      </Button> : null }\n      <Table\n        components={components}\n        rowClassName={() => 'editable-row'}\n        bordered\n        dataSource={[...dataSource,taxableRow, ...taxaRowsData, totalRow]}\n        columns={columns}\n        pagination={false}\n      />\n    </div>\n  );\n};\n\nexport default EditableTable;","import { getCompanies } from \"../api\";\n\nconst CustomerData = [\n    {\n        label : \"Customer Code\",\n        name: 'code',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Customer Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Mobile\",\n        name: 'mobile',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Division\",\n        name: 'companyId',\n        type: 'select',\n        inputType: 'text',\n        list: \"divisions\",\n        getData: async () => {\n            const res = await getCompanies();\n            console.log(res);\n            return res.data.entity?.rows.map((company) => ({\n                value: company.id,\n                label: `${company.division} - ${company.name}`\n            }))\n        }\n    },\n    {\n        label : \"GST Number\",\n        name: 'gstNumber',\n        type: 'input',\n        inputType: 'text',\n    }\n];\n\nexport default CustomerData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createCustomer, getCompanies, updateCustomer } from '../../api'; \nimport swal from 'sweetalert';\nimport SelectField from '../common/SelectField';\nimport { PlusOutlined, RestOutlined } from '@ant-design/icons';\nimport { createApiFn, getFieldData } from '../../util/util';\n\n\nconst CustomerForm = ({ data , callback, setEditData, page }) => {\n\n    const FieldData = getFieldData(page);\n    const initialData = FieldData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const onSelectChange = (name, value) => {\n        setFormData({...formData,[name]: value});\n    }\n\n    const selectFieldList = FieldData.filter((field) => field.type == 'select');\n    const initialMasterData = selectFieldList.reduce((previous, field) => ({...previous,[field.list]: []}),{});\n    const [masterData, setMasterData] = useState(initialMasterData);\n\n    const fetchCompanies = async () => {\n        const res = await getCompanies();\n        setDivisions(\n          res.data.entity?.rows.map((company) => ({\n            value: company.id,\n            label: `${company.division} - ${company.name}`\n          }))\n        )\n      }\n\n    useEffect(async () => {\n        \n        const newMasterData = {};\n        for (let index = 0; index < selectFieldList.length; index++) {\n            const field = selectFieldList[index];\n            newMasterData[field.list] = await field.getData();;\n        }\n\n        setMasterData({ ...masterData, ...newMasterData });\n        setFormData(data);\n    },[data])\n\n\n    const onSubmit = async (close) => {\n        const finalData = {\n            ...formData,\n            type: page\n        }\n\n        console.log('finalData', finalData);\n        if(data) {\n            let response = await updateApiFn(page)(data.id, finalData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(`Succesfully updated ${page} details`, \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createApiFn(page)(finalData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully added customer details\", \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        reset();\n        callback();\n    }\n\n    const reset = () => {\n        setFormData(initialData);\n        setEditData(null);\n    }\n\n    return (\n        <>\n            <div>\n                <Row>\n                    { \n                        FieldData.map((field) => field.type == 'input' ?\n                            <InputField\n                                label={page === 'vendor'? field.label.replace('Customer', 'Vendor') : field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                            /> : \n                            <SelectField\n                                label={field.label}\n                                option={eval(masterData[field.list]).map((item) => ({ value: item.value, text: item.label}))}\n                                showSearch\n                                optionFilterProp=\"children\"\n                                value={formData ? formData[field.name] : ''}\n                                showArrow={false}\n                                onChange={(value) => onSelectChange(field.name, value)}\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                                filterSort={(optionA, optionB) =>\n                                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                }\n                                key={field.name}\n                            />\n                        )\n                    }     \n                </Row>\n                <Row>\n                    <Col span={24} className='text-right'>\n                        <Button onClick={() => reset()} className='mr-4' icon={ <RestOutlined />}>\n                            Reset\n                        </Button>\n                        <Button type=\"primary\" onClick={() => onSubmit()} icon={ <PlusOutlined />} >\n                            { data ? 'Edit' : 'Add' } \n                        </Button>\n                    </Col>\n                \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default CustomerForm;\n\n// <div style=\"text-align: center; width: 50%; margin: 0px auto; box-shadow: black 0px 0px 10px; background-color: rgb(240, 240, 240); padding: 20px; height: 30%; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);\"><input type=\"email\" placeholder=\"Email\" style=\"width: 100%; margin: 10px auto; padding: 10px; border-radius: 5px;\"><input type=\"password\" placeholder=\"Password\" style=\"width: 100%; margin: 10px auto; padding: 10px; border-radius: 5px;\"><button style=\"width: 100%; margin: 10px auto; padding: 10px; border-radius: 5px;\">Login</button></div>\n","import { Col, Row } from \"antd\";\n\nconst InputField = ({label , lcol , icol, placeholder, ...inputProps }) => {\n    return (\n        <>\n            \n                <Col span={lcol? lcol : 4} className=\"mb-3\">\n                    <label className=\"block font-semibold mt-5 text-right mr-10\">{label}</label>\n                </Col>\n                <Col span={icol ? icol : 8} className=\"mb-3\">\n                    <input {...inputProps} placeholder={placeholder? placeholder : label} className=\"w-full py-2 px-2 mt-2 border-2\"/>\n                </Col>\n            \n            \n        </>\n    )\n}\n\nexport default InputField;","import { Col, Row, Select } from \"antd\";\nconst { Option } = Select;\n\nconst SelectField = ({label, lcol , icol, option, selected, ...property}) => {\n    return (\n        <>\n                <Col span={lcol? lcol : 4} className=\"mb-3\">\n                    <label className=\"block font-semibold mt-5 text-right mr-10\">{label}</label>\n                </Col>\n                <Col span={icol? icol : 8} className=\"mb-3\">\n                    <div className=\"mt-5\">\n                        <Select className=\"w-full\" placeholder={label} {...property}>\n                            { option.map((ele,index) => <Option value={ele.value} key={index}>{ele.text}</Option>) }\n                        </Select>\n                    </div>\n                </Col> \n        </>\n    )\n}\n\nexport default SelectField","const InvoiceData = [\n    {\n        label : \"Invoice No.\",\n        name: 'invoiceNumber',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Invoice Date\",\n        name: 'invoiceDate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Customer Code\",\n        name: 'customerCode',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Customer Name\",\n        name: 'customerName',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Company\",\n        name: 'companyName',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Division\",\n        name: 'division',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Taxable Amount\",\n        name: 'taxableAmount',\n        inputType: 'number',\n        list: \"customerType\"\n    },\n    {\n        label : \"Total Amount\",\n        name: 'totalValue',\n        inputType: 'number',\n        list: \"customerType\"\n    }\n];\n\nexport default InvoiceData;","const InvoiceFormData = [\n    {\n        label : \"Invoice Number\",\n        name: 'invoiceNumber',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Invoice Date\",\n        name: 'invoiceDate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Customer\",\n        name: 'customerId',\n        type: 'select',\n        inputType: 'text',\n        list: \"customers\"\n    },\n    {\n        label : \"Division - Company\",\n        name: 'companyId',\n        type: 'select',\n        inputType: 'text',\n        list: \"divisions\"\n    }\n];\n\nexport default InvoiceFormData;","import axios from 'axios';\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nexport const getAuth = () => {\n  const auth = cookies.get(\"AUTH\");\n  return auth;\n};\n\nexport const setAuth = (authObject) => {\n  cookies.set(\"AUTH\", JSON.stringify(authObject), { path: \"/\" });\n  return authObject;\n};\n\nexport const removeAuth = () => {\n  cookies.remove(\"AUTH\", { path: \"/\" });\n  return;\n};\n\nconst UrlParamsReplace = (url, params = {}, queryParams = {}) => {\n  let urlWithPrefix = `${url}`;\n  if (params) {\n    Object.keys(params).forEach(\n      (key) => (urlWithPrefix = urlWithPrefix.replace(`:${key}`, params[key]))\n    );\n  }\n  const queryParamsWithoutNull = {};\n  if (queryParams) {\n    Object.keys(queryParams).forEach((key) => {\n      if (queryParams[key] !== undefined && queryParams[key] !== null) {\n        queryParamsWithoutNull[key] = queryParams[key];\n      }\n    });\n    const urlSearchParams = new URLSearchParams(queryParamsWithoutNull);\n    urlWithPrefix += `?${urlSearchParams.toString()}`;\n  }\n  return urlWithPrefix;\n};\n\nconst url = `http://${window.location.hostname}:8000`;\nconst API = axios.create({ baseURL : url});\nconst getHeaders = () => {\n  const auth = getAuth();\n  const headers = {\n    \"content-type\": \"application/json\",\n    \"x-access-token\": auth.token,\n  };\n  return headers;\n}\n\nexport const userLogin = (mobileNumber) => API.post('/auth/mobile/sendOTP', { mobileNumber });\nexport const userSession = (mobileNumber, otp) => API.post('/auth/mobile/user', { mobileNumber, otp });\n\nexport const createSalesInBulk = (sales, type) => API.post('/sales', { sales, type }, { headers: getHeaders() });\nexport const createReceiptsInBulk = (receipts, type) => API.post('/receipts', { receipts, type }, { headers: getHeaders() });\n\nexport const getAllInvoices = (type, search, offset, limit, filters) => API.get(UrlParamsReplace(`/invoices`, {}, { type, search, offset, limit, filters }), { headers: getHeaders() });\nexport const getInvoiceById = (invoiceId) => API.get(`/invoices/${invoiceId}`, { headers: getHeaders() });\nexport const createInvoice = (invoice) => API.post(\"/invoices\", invoice, { headers: getHeaders() });\nexport const updateInvoice = (id, invoice) => API.put(`/invoices/${id}`, invoice, { headers: getHeaders() });\nexport const deleteInvoice = (id) => API.delete(`/invoices/${id}`, { headers: getHeaders() });\n\nexport const getReports = (type) => API.get(`/reports?type=${type}`, { headers: getHeaders() });\nexport const getFundsReports = (reportType, date, month, year) => API.get(UrlParamsReplace(`/fund-reports`, {}, { reportType, date, month, year }), { headers: getHeaders() });\n\nexport const getAllReceipts = (type, search, offset, limit, filters) => API.get(UrlParamsReplace(`/receipts`, {}, { type, search, offset, limit, filters }), { headers: getHeaders() });\nexport const deleteReceipt = (id) => API.delete(`/receipts/${id}`, { headers: getHeaders() });\n\nexport const getCompanies = (search, offset, limit) => API.get(UrlParamsReplace(`/companies`, {}, { search, offset, limit }), { headers: getHeaders() });\nexport const createCompany = (company) => API.post(\"/companies\", company, { headers: getHeaders() });\nexport const updateCompany = (id, company) => API.put(`/companies/${id}`, company, { headers: getHeaders() });\nexport const deleteCompany= (id) => API.delete(`/companies/${id}`, { headers: getHeaders() });\n\nexport const getCustomers = (type, search, offset, limit) => API.get(UrlParamsReplace(`/customers`, {}, { type, search, offset, limit }), { headers: getHeaders() });\nexport const createCustomer = (customer) => API.post(\"/customers\", customer, { headers: getHeaders() });\nexport const updateCustomer = (id, customer) => API.put(`/customers/${id}`, customer, { headers: getHeaders() });\nexport const deleteCustomer= (id) => API.delete(`/customers/${id}`, { headers: getHeaders() });\n\nexport const getItems = (search, offset, limit) => API.get(UrlParamsReplace(`/items`, {}, { search, offset, limit }), { headers: getHeaders() });\nexport const createItem = (item) => API.post(\"/items\", item, { headers: getHeaders() });\nexport const updateItem = (id, item) => API.put(`/items/${id}`, item, { headers: getHeaders() });\nexport const deleteItem= (id) => API.delete(`/items/${id}`, { headers: getHeaders() });\n\nexport const _get_ = (entityName) => (search, offset, limit) => API.get(UrlParamsReplace(`/${entityName}`, {}, { search, offset, limit }), { headers: getHeaders() });\nexport const _create_ = (entityName) => (item) => API.post(`/${entityName}`, item, { headers: getHeaders() });\nexport const _update_ = (entityName) => (id, item) => API.put(`/${entityName}/${id}`, item, { headers: getHeaders() });\nexport const _delete_ = (entityName) => (id) => API.delete(`/${entityName}/${id}`, { headers: getHeaders() });\n","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography, Result } from 'antd';\nimport InputField from '../common/InputField';\nimport { createInvoice, getAllMilkCategories, getCompanies, getCustomers, getItems, updateInvoice } from '../../api'; \nimport swal from 'sweetalert';\nimport SelectField from '../common/SelectField';\nimport { EditOutlined, PlusOutlined, RestOutlined } from '@ant-design/icons';\nimport EditableTable from '../common/EditableTable';\nimport moment from 'moment';\nimport { sweetalertValidate } from '../../util/util';\nimport InvoiceFormData from '../../data/InvoiceFormData';\n\n\nconst InvoiceForm = ({ data , callback, setEditData, page}) => {\n    const initialData = InvoiceFormData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    \n\n    const [formData, setFormData] = useState({\n        ...initialData,\n        invoiceDate: moment().format('YYYY-MM-DD'),\n        transactions: [],\n        labourCharges: 0,\n        claimAmount: 0,\n        taxableAmount: 0,\n        igst: 0,\n        cgst: 0,\n        sgst: 0,\n        cess: 0,\n        roundOff: 0,\n        tcs: 0,\n        totalValue: 0\n    });\n\n    const [customers, setCustomers] = useState([]);\n    const [divisions, setDivisions] = useState([]);\n    const [items, setItems] = useState({});\n\n    const fetchData = async () => {\n        const customerType = page == 'sales' || page == 'receipts' ? 'customer' : 'vendor';\n        const res = await getCustomers(customerType);\n        // console.log('getCustomers', res);\n        setCustomers(\n            res.data.entity?.rows.map((customer) => ({\n                value: customer.id,\n                label: `${customer.code} - ${customer.name}`,\n                companyId: customer.companyId\n            }))\n        );\n\n        const resC = await getCompanies();\n        // console.log('getCompanies', res);\n        setDivisions(\n            resC.data.entity?.rows.map((company) => ({\n            value: company.id,\n            label: `${company.division} - ${company.name}`\n          }))\n        )\n\n        const response = await getItems();\n        // console.log('getItems', response);\n        setItems(response.data.entity?.rows.reduce((result, data) => ({ ...result, [data.id]: data }), {}));\n    }\n\n    useEffect(async () => {\n        await fetchData();\n        // console.log('data', data);\n        if(data){\n            const transactions =  data.transactions.map((element, index) => {\n                return ({\n                    id: element.id,\n                    key: index,\n                    itemId: element.item.id,\n                    itemCode: element.item.code,\n                    categoryName: element.item.name,\n                    rate: element.rate,\n                    quantity: element.quantity,\n                    total: element.total\n                })\n            });\n    \n            setFormData({ ...data, invoiceDate: moment(data.invoiceDate, 'DD-MM-YYYY').format('YYYY-MM-DD'), transactions});\n        }\n       \n    }, [data]);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const onSelectChange = (name, value) => {\n        // console.log('cust', value);\n        if(name == 'customerId'){\n            const found = customers.find((c) => c.value == value);\n            formData.companyId = found ? found.companyId : null;\n        }\n        setFormData({...formData,[name]: value});\n    }\n\n    const onSubmit = async (close) => {\n        // console.log('onSubmit', formData);\n        if(!formData.transactions || formData.transactions?.length == 0){\n            sweetalertValidate('Please insert atleast one item');\n            return;\n        }\n        if(formData.customerId == ''){\n            sweetalertValidate('Please select customer');\n            return;\n        }\n        formData.taxableAmount = formData.transactions.reduce((total,t) => total + (t.total), 0);\n        const additinalField = [\"igst\",\"cgst\",\"sgst\",\"cess\",\"roundOff\",\"tcs\"]\n        formData.totalValue = formData.taxableAmount +  additinalField.reduce((total, fN) => total + (formData[fN] ? formData[fN] : 0) , 0 );;\n        formData.type = page;\n        // console.log('formData', formData);\n        if(data){\n            let response = await updateInvoice(data.id, formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated invoice details\", \"success\");\n                reset();    \n                callback();\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createInvoice(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully generated invoice details\", \"success\");\n                reset();    \n                callback();\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        \n        \n    }\n\n    const reset = () => {\n        setFormData(initialData);\n        setEditData(null);\n    }\n\n    const setTransactions = (transactions) => {\n        setFormData({...formData,'transactions': transactions});\n    }\n\n    const setTaxableRows = (taxableRows) => {\n        const data = taxableRows.reduce((result, record) => ({ ...result, [record.fieldName]: record.total }), {})\n        setFormData({...formData, ...data });\n    }\n\n    return (\n        <>\n            <div>\n                <Row>\n                { \n                        InvoiceFormData.map((field) => field.type == 'input' ?\n                            <InputField\n                                label={page === 'vendor'? field.label.replace('Customer', 'Vendor') : field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                            /> : \n                            <SelectField\n                                label={field.label}\n                                option={eval(field.list).map((item) => ({ value: item.value, text: item.label}))}\n                                showSearch\n                                optionFilterProp=\"children\"\n                                value={formData ? formData[field.name] : ''}\n                                showArrow={false}\n                                onChange={(value) => onSelectChange(field.name, value)}\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                                filterSort={(optionA, optionB) =>\n                                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                }\n                                key={field.name}\n                            />\n                        )\n                    }      \n                </Row>\n                <Row>\n                    <Col  span={24}>\n                        <EditableTable \n                            setTransactions={setTransactions}\n                            transactions={formData && formData.transactions}\n                            items={items}\n                            notEditable={false}\n                            invoiceDetails={formData}\n                            setParentTaxableRows={setTaxableRows}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24} className='text-right mt-5'>\n                        <Button onClick={() => reset()} className='mr-4' icon={ <RestOutlined />}>\n                            Reset\n                        </Button>\n                        <Button type=\"primary\" onClick={() => onSubmit()} icon={ data ? <EditOutlined /> : <PlusOutlined />} >\n                            { data ? 'Update Invoice' : 'Generate Invoice' } \n                        </Button>\n                    </Col>\n                \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default InvoiceForm;\n","const ReceiptData = [\n    {\n        label : \"Customer Code\",\n        name: 'customerCode',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Customer Name\",\n        name: 'customerName',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Receipt Date\",\n        name: 'receiptDate',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Nature\",\n        name: 'nature',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Receipt VIA\",\n        name: 'via',\n        inputType: 'text',\n        list: \"customerType\"\n    },\n    {\n        label : \"Invoice No.\",\n        name: 'invoiceNumber',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Company\",\n        name: 'companyName',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Division\",\n        name: 'division',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Amount\",\n        name: 'amount',\n        inputType: 'number',\n        list: \"customerType\"\n    },\n];\n\nexport default ReceiptData;","const ItemData = [\n    {\n        label : \"Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Code\",\n        name: 'code',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"UOM\",\n        name: 'uom',\n        type: 'input',\n        inputType: 'text',\n    },\n    // {\n    //     label : \"GST Rate (%)\",\n    //     name: 'gstRate',\n    //     type: 'select',\n    //     inputType: 'number',\n    //     list: 'gstRate',\n    //     defaultValue: 0\n    // }\n];\n\nexport default ItemData;","const CompanyData = [\n    {\n        label : \"Company Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Division\",\n        name: 'division',\n        type: 'input',\n        inputType: 'text'\n    },\n];\n\nexport default CompanyData;","const GroupData = [\n    {\n        label : \"Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    }\n];\n\nexport default GroupData;","import { _get_ } from \"../api\";\n\nconst LedgerData = [\n    {\n        label : \"Ledger Code\",\n        name: 'code',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Ledger Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Group\",\n        name: 'groupId',\n        type: 'select',\n        inputType: 'text',\n        list: \"groups\",\n        getData: async () => {\n            const res = await _get_('groups')();\n            return res.data.entity?.rows.map((group) => ({\n                value: group.id,\n                label: `${group.name}`\n            }))\n        }\n    },\n    {\n        label : \"Balance As On\",\n        name: 'balanceDate',\n        type: 'input',\n        inputType: 'date',\n    },\n    {\n        label : \"Balance\",\n        name: 'balance',\n        type: 'input',\n        inputType: 'number'\n    },\n];\n\nexport default LedgerData;","import moment from 'moment';\nimport swal from 'sweetalert';\nimport { _create_, _delete_, _get_, _update_, createCompany, createCustomer, createItem, deleteCompany, deleteCustomer, deleteInvoice, deleteItem, deleteReceipt, getAllInvoices, getAllReceipts, getCompanies, getCustomers, getItems, updateCompany, updateCustomer, updateItem } from '../api';\nimport ReceiptData from '../data/ReceiptData';\nimport InvoiceData from '../data/InvoiceData';\nimport CustomerData from '../data/CustomerData';\nimport ItemData from '../data/ItemData';\nimport CompanyData from '../data/CompanyData';\nimport GroupData from '../data/GroupData';\nimport LedgerData from '../data/LedgerData';\n\nexport function sweetalertValidate(message) {\n    swal({\n        text: message,\n        icon: \"error\",\n        buttons:\n        {\n            cancel: {\n                text: \"Cancel\",\n                value: null,\n                visible: false,\n                className: \"btn-sm btn-default\",\n                closeModal: true,\n            },\n            confirm: {\n                text: \"OK\",\n                value: true,\n                visible: true,\n                className: \"btn-sm btn-primary\",\n                closeModal: true\n            }\n        }\n    });\n}\n\nexport function sweetalertMessage(message) {\n    swal({\n        text: message,\n        icon: \"info\",\n        buttons:\n        {\n            cancel: {\n                text: \"Cancel\",\n                value: null,\n                visible: false,\n                className: \"btn-sm btn-default\",\n                closeModal: true,\n            },\n            confirm: {\n                text: \"OK\",\n                value: true,\n                visible: true,\n                className: \"btn-sm btn-info\",\n                closeModal: true\n            }\n        }\n    });\n}\n\nexport function sweetalertSuccess(message) {\n    swal({\n\t\ttext: \"test message\",\n\t\ticon: \"success\",\n\t\tbuttons:\n\t\t{\n\t\t\tcancel: {\n\t\t\t\ttext: \"Cancel\",\n\t\t\t\tvalue: null,\n\t\t\t\tvisible: false,\n\t\t\t\tclassName: \"btn-sm btn-default\",\n\t\t\t\tcloseModal: true,\n\t\t\t},\n\t\t\tconfirm: {\n\t\t\t\ttext: \"OK\",\n\t\t\t\tvalue: true,\n\t\t\t\tvisible: true,\n\t\t\t\tclassName: \"btn-sm btn-info\",\n\t\t\t\tcloseModal: true\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function sweetalertOkCancel(message, confirmFunction, cancelFunction) {\n    swal(\n        {\n            text: message,\n            icon: \"warning\",\n            buttons:\n            {\n                cancel: {\n                    text: \"Cancel\",\n                    value: null,\n                    visible: true,\n                    className: \"btn-sm btn-default\",\n                    closeModal: true,\n                },\n                confirm: {\n                    text: \"OK\",\n                    value: true,\n                    visible: true,\n                    className: \"btn-sm btn-danger\",\n                    closeModal: true\n                }\n            }\n        }\n    ).then(\n        function (isConfirm) {\n            if (isConfirm) {\n                confirmFunction();\n            } else {\n                cancelFunction();\n            }\n        }\n\n    );\n}\n\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport const getDateWithTime = (date, [h, m, s]) => {\n    const mo = moment(date);\n    mo.set(\"hour\", h);\n    mo.set(\"minute\", m);\n    mo.set(\"second\", s);\n    return mo.toDate();\n  };\n\nexport const getTitle = (column, page) => {\n    if((page == 'purchase' || page == 'payments') && (column.name == 'customerName' || column.name == 'customerCode')){\n       return column.label.replace('Customer','Vendor');\n    }\n    if(page == 'payments' && (column.name == 'receiptDate' || column.name == 'via')){\n        return column.label.replace('Receipt','Payment');\n    }\n\n    if((page == 'vendor') && (column.name == 'name' || column.name == 'code')){\n        return column.label.replace('Customer','Vendor');\n     }\n\n    return  column.label;\n}\n\nexport const getPageName = (page) => {\n    if(page === 'sales') return 'Sale Invoices';\n    if(page === 'purchase') return 'Purchase Invoices';\n    if(page === 'receipts') return 'Receipts';\n    if(page === 'payments') return 'Payments';\n    if(page === 'customer') return 'Customers';\n    if(page === 'vendor') return 'Vendors';\n    if(page === 'company') return 'Divisions';\n    if(page === 'item') return 'Items';\n    if(page === 'groups') return 'Groups';\n    if(page === 'ledgers') return 'Ledgers';\n}\n\nexport const mappingData = (page, data) => {\n    const invoicePage = ['sales', 'purchase', 'receipts', 'payments']\n    if(invoicePage.includes(page)){\n        return  {\n            ...data,\n            invoiceNumber:  page == 'receipts' || page == 'payments' ? data.invoice?.invoiceNumber : data.invoiceNumber,\n            customerName: data.customer?.name,\n            customerCode: data.customer?.code,\n            companyName: data.company.name,\n            division: data.company.division,\n            receiptDate: data.receiptDate? moment(data.receiptDate).format('DD-MM-YYYY') : null,\n        }\n    }\n    else{\n        return { ...data };\n    }\n} \n\nexport const getApiFn = (page) => {\n    if(page == 'receipts' || page == 'payments'){ \n        return getAllReceipts;\n    }\n    if(page == 'purchase' || page == 'sales'){\n        return getAllInvoices;\n    }\n    if(page == 'customer' || page == 'vendor'){\n        return getCustomers;\n    }\n    if(page == 'company'){\n        return (page, search, offset, limit, filters) => getCompanies(search, offset, limit);\n    }\n\n    if(page == 'item'){\n        return (page, search, offset, limit, filters) => getItems(search, offset, limit);\n    }\n    return (page, search, offset, limit, filters) => _get_(page)(search, offset, limit);\n}\n\nexport const getFieldData = (page) => {\n    if(page == 'receipts' || page == 'payments'){ \n        return ReceiptData;\n    }\n    if(page == 'purchase' || page == 'sales'){\n        return InvoiceData;\n    }\n    if(page == 'customer' || page == 'vendor'){\n        return CustomerData;\n    }\n\n    if(page == 'company'){\n        return CompanyData;\n    }\n\n    if(page == 'item'){\n        return ItemData;\n    }\n\n    if(page == 'groups'){\n        return GroupData;\n    }\n\n    if(page == 'ledgers'){\n        return LedgerData;\n    }\n\n} \n\nexport const isUploadButton = (page) => {\n    if(page == 'receipts' || page == 'payments'){ \n        return true;\n    }\n    if(page == 'purchase' || page == 'sales'){\n        return true;\n    }\n    return false;\n}\n\nexport const deleteApiFn = (page) => {\n    if(page == 'receipts' || page == 'payments'){ \n        return deleteReceipt;\n    }\n    if(page == 'purchase' || page == 'sales'){\n        return deleteInvoice;\n    }\n    if(page == 'customer' || page == 'vendor'){\n        return deleteCustomer;\n    }\n\n    if(page == 'company'){\n        return deleteCompany;\n    }\n\n    if(page == 'item'){\n        return deleteItem;\n    }\n    return _delete_(page);\n}\n\nexport const createApiFn = (page) => {\n    if(page == 'customer' || page == 'vendor'){\n        return createCustomer;\n    }\n\n    if(page == 'company'){\n        return createCompany;\n    }\n\n    if(page == 'item'){\n        return createItem;\n    }\n    return _create_(page);\n}\n\nexport const updateApiFn = (page) => {\n    if(page == 'customer' || page == 'vendor'){\n        return updateCustomer;\n    }\n\n    if(page == 'company'){\n        return updateCompany;\n    }\n\n    if(page == 'item'){\n        return updateItem;\n    }\n    return _update_(page);\n}\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Pagination } from 'antd';\nimport { getReports } from '../api';\nimport InvoiceData from '../data/InvoiceData';\nimport moment from 'moment';\n\nconst { Title } = Typography;\n\nconst Reports = ({ page }) => {\n    const actualMonths = ['January', 'February', 'March','April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const [divisionReports, setDivisonReports] = useState(null);\n    const [companyReports, setCompanyReports] = useState(null);\n\n    const fetchData = async () => {\n        const response = await getReports(page, '');\n        \n        console.log('response', response);\n        const data = response.data?.entity;\n        const financialYearMonths = getMonthNamesForFinancialYear(2023);\n        const divisionMap = {};\n        const companyMap = {};\n        for (let index = 0; index < data.length; index++) {\n            const element = data[index];\n            const monthStr = `${actualMonths[element.month - 1].slice(0, 3)}-${element.year.toString().slice(-2)}`\n\n            if(!divisionMap[element.division]){\n                divisionMap[element.division] = {};\n            }\n            divisionMap[element.division][monthStr] = element.taxable_amount;\n\n            if(!companyMap[element.name]){\n                companyMap[element.name] = {};\n            }\n            if(!companyMap[element.name][monthStr]){\n                companyMap[element.name][monthStr] = 0;\n            }\n            companyMap[element.name][monthStr] += element.taxable_amount;;\n        }\n\n        const divisionRows = [];\n        for (const division in divisionMap) {\n            const element = divisionMap[division];\n\n            const columns = {};\n            financialYearMonths.forEach((month) => {\n                columns[month] = element[month] ? element[month] : 0;\n            });\n            divisionRows.push({\n                division,\n                ...columns\n            })\n        }\n        setDivisonReports(divisionRows);\n\n        const companyRows = [];\n        for (const company in companyMap) {\n            const element = companyMap[company];\n\n            const columns = {};\n            financialYearMonths.forEach((month) => {\n                columns[month] = element[month] ? element[month] : 0;\n            });\n            companyRows.push({\n                company,\n                ...columns\n            })\n        }\n        setCompanyReports(companyRows);\n    }\n\n    useEffect(() => {\n        fetchData();\n    },[page]);\n\n    \n    const financialYearMonths = getMonthNamesForFinancialYear(2023);\n    const monthCols = financialYearMonths.map((month) => ({ \n        label: month, name: month,\n        render: (number, data) => {\n            return (\n                <div>\n                    { number.toLocaleString('en-IN') }\n                </div>\n            )\n        } \n    }));\n\n    const getColums = (list) => list.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n               {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px',\n        render: column.render\n    }));\n\n    const showDataInTable = (value, data) => {\n        return (\n            <div>\n                { value }\n            </div>\n        )\n    } \n\n    const divisonData = [\n        {\n            label : \"Division\",\n            name: 'division',\n            render: showDataInTable\n        },\n        ...monthCols\n    ];\n    const columns = getColums(divisonData);\n\n    const CompanyData = [\n        {\n            label : \"Company\",\n            name: 'company',\n            render: showDataInTable\n        },\n        ...monthCols\n    ];\n    const columnsCompany = getColums(CompanyData);\n\n\n    return (\n        <div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                    Reports By Division\n                </Title>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={divisionReports} \n                            columns={columns}\n                            bordered\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                    Reports By Company\n                </Title>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={companyReports} \n                            columns={columnsCompany}\n                            bordered\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </div>\n    );\n};\n\nexport default Reports;\n\nconst getMonthNamesForFinancialYear = (year) => {\n    const months = ['April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December', 'January', 'February', 'March'];\n    let financialYearMonths = [];\n    const currentDate = new Date();\n    const currentMonth = currentDate.getMonth();\n    const currentYear = currentDate.getFullYear();\n    for (let i = 0; i < months.length; i++) {\n        let month = months[i];\n        let yearSuffix = (i < 9) ? (year - 1) : year; \n        financialYearMonths.push(`${month.slice(0, 3)}-${yearSuffix.toString().slice(-2)}`);\n    }\n    \n    if(currentYear === year && currentMonth < 3){\n        financialYearMonths = financialYearMonths.slice(0, 12 - (3 - currentMonth));\n    }\n    \n    if(currentYear === year - 1 && currentMonth >= 3){\n        financialYearMonths = financialYearMonths.slice(0, currentMonth - 3);\n    }\n    \n    return financialYearMonths;\n}\n","import { Breadcrumb } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport Reports from './Reports';\n\nconst Homepage = ({ page }) => {\n\n  return (\n  <>\n      <Breadcrumb style={{ margin: '16px 0'}} className=\"text-4xl font-bold\">\n        <Breadcrumb.Item>{page == 'sales'? 'Sales' : 'Purchase'} Report</Breadcrumb.Item>\n      </Breadcrumb>\n      <Reports page={page}/>\n  </>   \n  );\n};\n\nexport default Homepage;\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, FundOutlined, MenuOutlined, StrikethroughOutlined, FileExcelOutlined, BarChartOutlined, PieChartOutlined, DatabaseOutlined, CustomerServiceOutlined, PayCircleOutlined, UsergroupAddOutlined, BankOutlined, OrderedListOutlined } from '@ant-design/icons';\n\nconst Navbar = ({ collapsed }) => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  const defaultSelectedKeys = (() => {\n    if(window.location.pathname === '/'){\n      return ['fund-reports'];\n    }\n    return [window.location.pathname.replace('/', '')];\n  })();\n\n  return (\n    <div className=\"nav-container  h-screen\">\n      <div className=\"logo-container\">\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">TIMWM</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\" mode=\"inline\" defaultOpenKeys={['reports', 'master-data']} defaultSelectedKeys={defaultSelectedKeys} subMenuOpenDelay={0.2}>\n        <Menu.SubMenu key=\"reports\" title={'Reports'} icon={<HomeOutlined />}>\n          <Menu.Item  key=\"fund-reports\" icon={<BarChartOutlined />}>\n            <Link to=\"/\">Fund Reports</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"sales-reports\" icon={<BarChartOutlined />}>\n            <Link to=\"/sales-reports\">Sales Report</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"purchase-reports\" icon={<PieChartOutlined />}>\n            <Link to=\"/purchase-reports\">Purchase Report</Link>\n          </Menu.Item>\n        </Menu.SubMenu>\n        <Menu.Item icon={<FileExcelOutlined />} key='sales'>\n          <Link to=\"/sales\">Sales</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />} key='purchases'>\n          <Link to=\"/purchases\">Purchases</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />} key='receipts'>\n          <Link to=\"/receipts\">Receipts</Link>\n        </Menu.Item>\n        <Menu.Item icon={<StrikethroughOutlined />} key='payments'>\n          <Link to=\"/payments\">Payments</Link>\n        </Menu.Item>\n        <Menu.SubMenu key=\"master-data\" title={'Master Data'} icon={<DatabaseOutlined />}>\n          <Menu.Item  key=\"customers\" icon={<UsergroupAddOutlined />}>\n            <Link to=\"/customers\">Customers</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"vendors\" icon={<PayCircleOutlined />}>\n            <Link to=\"/vendors\">Vendors</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"divisions\" icon={<BankOutlined />}>\n            <Link to=\"/divisions\">Divisions</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"items\" icon={<OrderedListOutlined />}>\n            <Link to=\"/items\">Items</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"groups\" icon={<OrderedListOutlined />}>\n            <Link to=\"/groups\">Groups</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"ledgers\" icon={<OrderedListOutlined />}>\n            <Link to=\"/ledgers\">Ledgers</Link>\n          </Menu.Item>\n        </Menu.SubMenu>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Heading = ({ children, type = \"h1\", className = \"\", ...properties }) => {\r\n  const HeadingVariants = {\r\n    h1: \"h1\",\r\n    h2: \"h2\",\r\n    h3: \"h3\",\r\n    h4: \"h4\",\r\n    h5: \"h5\",\r\n    h6: \"h6\",\r\n  };\r\n  const Type = HeadingVariants[type] ? HeadingVariants[type] : \"h1\";\r\n  return (\r\n    <Type className={`${className}`} {...properties}>\r\n      {children}\r\n    </Type>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n\r\nHeading.propTypes = {\r\n  type: PropTypes.string,\r\n  ClassName: PropTypes.string,\r\n  children: PropTypes.string,\r\n};\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Text = ({ className = \"\", children, whiteSpace = \"normal\", onClick }) => {\n  return (\n    <p className={`${className}`} style={{ whiteSpace }} onClick={onClick}>\n      {children}\n    </p>\n  );\n};\n\nexport default Text;\n\nText.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.string,\n  whiteSpace: PropTypes.string,\n};\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","export default __webpack_public_path__ + \"static/media/login-bg.a6a7c455.jpg\";","import React from \"react\";\nimport Heading from \"../atoms/Heading\";\nimport Text from \"../atoms/Text\";\nimport icon from '../images/cryptocurrency.png';\nimport bg from '../images/login-bg.jpg';\n\nconst LoginContent = ({ loginContentHeading, loginContentDesc }) => {\n  return (\n    <div className=\"md:min-h-screen relative p-6 py-8 md:py-16 md:px-9 overflow-hidden bg-gradient-secondary md:bg-transparent\">\n      <div className=\"relative z-10 max-w-md\">\n        <img src={icon} width=\"170\" height=\"34\" alt=\"logo\" />\n        <Heading\n          type=\"h3\"\n          className=\"text-2xl md:text-3xl md:mt-24 mt-5 mb-4 text-white\"\n        >\n          {loginContentHeading}\n        </Heading>\n        <Text className=\"text-white\">{loginContentDesc}</Text>\n      </div>\n\n      <div className=\"hidden md:block min-h-screen absolute w-full h-full top-0 left-0 z-0 login-bg\">\n        <img\n          src={bg}\n          layout=\"fixed\"\n          objectFit=\"cover\"\n          width=\"1024\"\n          height=\"1024\"\n          alt=\"login bg\"\n        />\n      </div>\n    </div>\n  );\n};\nexport default LoginContent;\n","import PropTypes from \"prop-types\";\n\nconst InputLabel = ({\n  labelFor = \"\",\n  variant = \"medium\",\n  textColor = \"text-gray-900\",\n  fontWeight = \"font-bold\",\n  className = \"block mb-2\",\n  children,\n  labelDisable = false,\n}) => {\n  const InputLabelType = {\n    small: \"small\",\n    medium: \"medium\",\n    large: \"large\",\n  };\n\n  const InputLabelStyle = {\n    small: \"text-sm\",\n    medium: \"text-base font-bold\",\n    large: \"text-lg\",\n  };\n\n  return (\n    <label\n      htmlFor={`${labelFor}`}\n      variant={InputLabelType[variant]}\n      className={`${\n        InputLabelStyle[variant]\n      } ${textColor} ${fontWeight}  ${className} ${\n        labelDisable && \"opacity-60 pointer-events-none\"\n      }`}\n    >\n      {children}\n    </label>\n  );\n};\n\nexport default InputLabel;\n\nInputLabel.propTypes = {\n  labelFor: PropTypes.string,\n  variant: PropTypes.string,\n  textColor: PropTypes.string,\n  fontWeight: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport Text from \"./Text\";\n\nconst InputField = ({\n  disabled,\n  error,\n  isRequired,\n  register = () => {},\n  id,\n  name,\n  type,\n  maxLength = 256,\n  placeholder,\n  variant = \"outlineBottom\",\n  bg = \"bg-lightGrey\",\n  fontSize = \"text-base\",\n  borderColor = \"border-gray-200\",\n  borderRadius = \"rounded\",\n  className = \"\",\n  onClick,\n  value = \"\",\n  defaultValue,\n  onChangeValue = () => {},\n  inputLength,\n  getValues,\n\n}) => {\n  const inputStyleType = {\n    normal: \"normal\",\n    outline: \"outline\",\n    outlineBottom: \"outlineBottom\",\n    error: \"error\",\n  };\n\n  const inputStyle = {\n    normal: \"border-0\",\n    outline: \"border-gray-200\",\n    outlineBottom: \"border-b-gray-400\",\n    error: \"border-error border-b-error\",\n  };\n\n  return (\n    <div className=\"w-full mb-6\">\n      <input\n        id={id}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        variant={inputStyleType[variant]}\n        className={`${\n          inputStyle[variant]\n        } w-full border text-gray-900 h-12 px-4 outline-none placeholder:text-grey-400 ${bg} ${borderRadius} ${fontSize} ${className} ${\n          disabled && \"opacity-60 pointer-events-none\"\n        } ${error ? \" border border-error border-b-error\" : \"\"}`}\n        disabled={disabled !== undefined ? disabled : false}\n        maxLength={maxLength}\n        onChange={(e) => {\n          onChangeValue(e);\n        }}\n        defaultValue={defaultValue}\n      />\n      {error && (\n        <div className=\"text-sm text-error pt-1\">\n          {error.length != 0 && error.message}\n        </div>\n      )}\n      {inputLength && (\n        <Text className=\"text-xs text-gray-400 absolute bottom-2 right-2\">\n          {inputValue.length}/{inputLength}\n        </Text>\n      )}\n    </div>\n  );\n};\n\nexport default InputField;\n\nInputField.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.string,\n  variant: PropTypes.string,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n  isRequired: PropTypes.bool,\n  register: PropTypes.func,\n  maxLength: PropTypes.number,\n  bg: PropTypes.string,\n  fontSize: PropTypes.string,\n  borderColor: PropTypes.string,\n  borderRadius: PropTypes.string,\n};\n","import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({\r\n  type = \"\",\r\n  children,\r\n  variant,\r\n  fontWeight = \"font-medium\",\r\n  padding = \"py-2 px-3\",\r\n  btnClass = \"\",\r\n  imgClassName = \"\",\r\n  imgSrc,\r\n  imgWidth,\r\n  imgHeight,\r\n  imgAlt = \"\",\r\n  onClick = () => {},\r\n  disabled,\r\n  form,\r\n  buttonRef\r\n}) => {\r\n  const buttonType = {\r\n    primaryBtn: \"primaryBtn\",\r\n    outlineBtn: \"outlineBtn\",\r\n    normalBtn: \"normalBtn\",\r\n    secondaryBtn: 'secondaryBtn'\r\n  };\r\n\r\n  const buttonStyle = {\r\n    primaryBtn:\r\n      \"flex items-center justify-center bg-yellow-500 rounded text-white text-base disabled:bg-primary-100 disabled:text-primary-300\",\r\n    secondaryBtn:\r\n      \"flex items-center justify-center bg-blue-500 rounded text-white text-base disabled:bg-primary-100 disabled:text-primary-300\",\r\n    outlineBtn:\r\n      \"flex items-center justify-center bg-transparent border border-gray-200 rounded text-gray-500 text-base drop-shadow-btn disabled:bg-primary-100 disabled:text-primary-300\",\r\n    normalBtn: \"flex items-center justify-center text-base\",\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      variant={buttonType[variant]}\r\n      className={`${\r\n        buttonStyle[variant]\r\n      } ${fontWeight} ${padding} ${btnClass} ${imgSrc && \"pl-4 bg-red\"} `}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      form={form}\r\n      ref={buttonRef}\r\n    >\r\n      {imgSrc ? (\r\n        <span\r\n          className={`mx-2 flex items-center flex-shrink-0 ${imgClassName}`}\r\n        >\r\n          <img\r\n            src={imgSrc}\r\n            width={imgWidth}\r\n            height={imgHeight}\r\n            alt={imgAlt}\r\n          />\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  fontWeight: PropTypes.string,\r\n  padding: PropTypes.string,\r\n  btnClass: PropTypes.string,\r\n  imgClassName: PropTypes.string,\r\n  imgSrc: PropTypes.string,\r\n  imgWidth: PropTypes.number,\r\n  imgHeight: PropTypes.number,\r\n  imgAlt: PropTypes.string,\r\n  children: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport Heading from \"../atoms/Heading\";\nimport Text from \"../atoms/Text\";\nimport InputLabel from \"../atoms/InputLabel\";\nimport InputField from \"../atoms/InputField\";\nimport Button from \"../atoms/Button\";\n\nconst LoginForm = ({\n  loginDetails,\n  onSubmit,\n  apierror\n}) => {\n  const [disabled, setDisabled] = useState(\n    loginDetails.mobileNumber.length != 10\n  );\n\n  const [error, setError] = useState(apierror);\n  const handleMobileNumberChange = (event) => {\n    const val = event.target.value.toString();\n    if (val.length == 10) {\n      setDisabled(false);\n      return;\n    }\n    setDisabled(true);\n    setError('');\n  };\n  useEffect(() => {\n    setError(apierror);\n  }, [apierror])\n  console.log('error', error)\n\n  return (\n    <div className=\"md:min-h-screen flex items-center px-6 py-14 bg-white lg:pl-20 lg:pr-32\">\n      <div className=\"w-full max-w-md\">\n        <Heading type=\"h4\" className=\"mb-2 md:mb-8 font-medium\">\n          Login\n        </Heading>\n        <Text className=\"mb-6\">\n          Enter your details to get sign in to your account\n        </Text>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const mobileNumber =  e.target[0].value;\n          console.log(mobileNumber.length, 'mobileNumber')\n           if (mobileNumber.length != 10) {\n            setError('Please enter valid mobile number');\n            return;\n          }\n          onSubmit({ mobileNumber })\n        }}>\n          <InputLabel textColor=\"text-gray-700\">Mobile Number</InputLabel>\n\n          <div className=\"mt-2 flex\">\n            <InputField\n              id=\"mobileNumber\"\n              name=\"mobileNumber\"\n              type=\"number\"\n              className=\"ml-1 rounded-none mb-0\"\n              placeholder=\"Mobile Number\"\n              maxLength={10}\n              isRequired={true}\n              onChangeValue={handleMobileNumberChange}\n              variant={\"outlineBottom\"}\n            />\n            \n          </div>\n          {error && error.length != 0 && (\n              <div className=\"text-sm text-red-700 -mt-5 mb-1\">\n                {error.length != 0 && error}\n              </div>\n            )}\n          <Text className=\"mb-16 md:mb-10 text-sm text-gray-500\">\n            {/* An OTP will be sent via sms to verify your phone number */}\n            Proceed To Enter PIN\n          </Text>\n          <Button\n            type=\"submit\"\n            variant=\"primaryBtn\"\n            fontWeight=\"font-bold\"\n            btnClass=\"w-full\"\n          >\n            Proceed\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { Component, PureComponent } from 'react';\n\n// keyCode constants\nconst BACKSPACE = 8;\nconst LEFT_ARROW = 37;\nconst RIGHT_ARROW = 39;\nconst DELETE = 46;\nconst SPACEBAR = 32;\n\n// Doesn't really check if it's a style Object\n// Basic implementation to check if it's not a string\n// of classNames and is an Object\n// TODO: Better implementation\nconst isStyleObject = (obj) => typeof obj === 'object';\n\nclass SingleOtpInput extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.input = React.createRef();\n  }\n\n  // Focus on first render\n  // Only when shouldAutoFocus is true\n  componentDidMount() {\n    const { focus, shouldAutoFocus } = this.props;\n    const { current: inputEl } = this.input;\n\n    if (inputEl && focus && shouldAutoFocus) {\n      inputEl.focus();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { focus } = this.props;\n    const { current: inputEl } = this.input;\n\n    // Check if focusedInput changed\n    // Prevent calling function if input already in focus\n    if (prevProps.focus !== focus && inputEl && focus) {\n      inputEl.focus();\n      inputEl.select();\n    }\n  }\n\n  getClasses = (...classes) => classes.filter((c) => !isStyleObject(c) && c !== false).join(' ');\n\n  getType = () => {\n    const { isInputSecure, isInputNum } = this.props;\n\n    if (isInputSecure) {\n      return 'password';\n    }\n\n    if (isInputNum) {\n      return 'tel';\n    }\n\n    return 'text';\n  };\n\n  render() {\n    const {\n      placeholder,\n      separator,\n      isLastChild,\n      inputStyle,\n      focus,\n      isDisabled,\n      hasErrored,\n      errorStyle,\n      focusStyle,\n      disabledStyle,\n      shouldAutoFocus,\n      isInputNum,\n      index,\n      value,\n      className,\n      isInputSecure,\n      ...rest\n    } = this.props;\n\n    return (\n      <div className={className} style={{ display: 'flex', alignItems: 'center' }}>\n        <input\n          aria-label={`${index === 0 ? 'Please enter verification code. ' : ''}${isInputNum ? 'Digit' : 'Character'} ${\n            index + 1\n          }`}\n          autoComplete=\"off\"\n          style={Object.assign(\n            { width: '1em', textAlign: 'center' },\n            isStyleObject(inputStyle) && inputStyle,\n            focus && isStyleObject(focusStyle) && focusStyle,\n            isDisabled && isStyleObject(disabledStyle) && disabledStyle,\n            hasErrored && isStyleObject(errorStyle) && errorStyle\n          )}\n          placeholder={placeholder}\n          className={this.getClasses(\n            inputStyle,\n            focus && focusStyle,\n            isDisabled && disabledStyle,\n            hasErrored && errorStyle\n          )}\n          type={this.getType()}\n          maxLength=\"1\"\n          ref={this.input}\n          disabled={isDisabled}\n          value={value ? value : ''}\n          {...rest}\n        />\n        {!isLastChild && separator}\n      </div>\n    );\n  }\n}\n\nclass OtpInput extends Component {\n  static defaultProps = {\n    numInputs: 4,\n    onChange: (otp) => console.log(otp),\n    isDisabled: false,\n    shouldAutoFocus: false,\n    value: '',\n    isInputSecure: false,\n  };\n\n  state = {\n    activeInput: 0,\n  };\n\n  getOtpValue = () => (this.props.value ? this.props.value.toString().split('') : []);\n\n  getPlaceholderValue = () => {\n    const { placeholder, numInputs } = this.props;\n\n    if (typeof placeholder === 'string') {\n      if (placeholder.length === numInputs) {\n        return placeholder;\n      }\n\n      if (placeholder.length > 0) {\n        console.error('Length of the placeholder should be equal to the number of inputs.');\n      }\n    }\n  };\n\n  // Helper to return OTP from input\n  handleOtpChange = (otp) => {\n    const { onChange } = this.props;\n    const otpValue = otp.join('');\n\n    onChange(otpValue);\n  };\n\n  isInputValueValid = (value) => {\n    const isTypeValid = this.props.isInputNum ? !isNaN(parseInt(value, 10)) : typeof value === 'string';\n\n    return isTypeValid && value.trim().length === 1;\n  };\n\n  // Focus on input by index\n  focusInput = (input) => {\n    const { numInputs } = this.props;\n    const activeInput = Math.max(Math.min(numInputs - 1, input), 0);\n\n    this.setState({ activeInput });\n  };\n\n  // Focus on next input\n  focusNextInput = () => {\n    const { activeInput } = this.state;\n    this.focusInput(activeInput + 1);\n  };\n\n  // Focus on previous input\n  focusPrevInput = () => {\n    const { activeInput } = this.state;\n    this.focusInput(activeInput - 1);\n  };\n\n  // Change OTP value at focused input\n  changeCodeAtFocus = (value) => {\n    const { activeInput } = this.state;\n    const otp = this.getOtpValue();\n    otp[activeInput] = value[0];\n\n    this.handleOtpChange(otp);\n  };\n\n  // Handle pasted OTP\n  handleOnPaste = (e) => {\n    e.preventDefault();\n\n    const { activeInput } = this.state;\n    const { numInputs, isDisabled } = this.props;\n\n    if (isDisabled) {\n      return;\n    }\n\n    const otp = this.getOtpValue();\n    let nextActiveInput = activeInput;\n\n    // Get pastedData in an array of max size (num of inputs - current position)\n    const pastedData = e.clipboardData\n      .getData('text/plain')\n      .slice(0, numInputs - activeInput)\n      .split('');\n\n    // Paste data from focused input onwards\n    for (let pos = 0; pos < numInputs; ++pos) {\n      if (pos >= activeInput && pastedData.length > 0) {\n        otp[pos] = pastedData.shift();\n        nextActiveInput++;\n      }\n    }\n\n    this.setState({ activeInput: nextActiveInput }, () => {\n      this.focusInput(nextActiveInput);\n      this.handleOtpChange(otp);\n    });\n  };\n\n  handleOnChange = (e) => {\n    const { value } = e.target;\n\n    if (this.isInputValueValid(value)) {\n      this.changeCodeAtFocus(value);\n    }\n  };\n\n  // Handle cases of backspace, delete, left arrow, right arrow, space\n  handleOnKeyDown = (e) => {\n    if (e.keyCode === BACKSPACE || e.key === 'Backspace') {\n      e.preventDefault();\n      this.changeCodeAtFocus('');\n      this.focusPrevInput();\n    } else if (e.keyCode === DELETE || e.key === 'Delete') {\n      e.preventDefault();\n      this.changeCodeAtFocus('');\n    } else if (e.keyCode === LEFT_ARROW || e.key === 'ArrowLeft') {\n      e.preventDefault();\n      this.focusPrevInput();\n    } else if (e.keyCode === RIGHT_ARROW || e.key === 'ArrowRight') {\n      e.preventDefault();\n      this.focusNextInput();\n    } else if (e.keyCode === SPACEBAR || e.key === ' ' || e.key === 'Spacebar' || e.key === 'Space') {\n      e.preventDefault();\n    }\n  };\n\n  // The content may not have changed, but some input took place hence change the focus\n  handleOnInput = (e) => {\n    if (this.isInputValueValid(e.target.value)) {\n      this.focusNextInput();\n    } else {\n      // This is a workaround for dealing with keyCode \"229 Unidentified\" on Android.\n\n      if (!this.props.isInputNum) {\n        const { nativeEvent } = e;\n\n        if (nativeEvent.data === null && nativeEvent.inputType === 'deleteContentBackward') {\n          e.preventDefault();\n          this.changeCodeAtFocus('');\n          this.focusPrevInput();\n        }\n      }\n    }\n  };\n\n  renderInputs = () => {\n    const { activeInput } = this.state;\n    const {\n      numInputs,\n      inputStyle,\n      focusStyle,\n      separator,\n      isDisabled,\n      disabledStyle,\n      hasErrored,\n      errorStyle,\n      shouldAutoFocus,\n      isInputNum,\n      isInputSecure,\n      className,\n    } = this.props;\n\n    const inputs = [];\n    const otp = this.getOtpValue();\n    const placeholder = this.getPlaceholderValue();\n    const dataCy = this.props['data-cy'];\n    const dataTestId = this.props['data-testid'];\n\n    for (let i = 0; i < numInputs; i++) {\n      inputs.push(\n        <SingleOtpInput\n          placeholder={placeholder && placeholder[i]}\n          key={i}\n          index={i}\n          focus={activeInput === i}\n          value={otp && otp[i]}\n          onChange={this.handleOnChange}\n          onKeyDown={this.handleOnKeyDown}\n          onInput={this.handleOnInput}\n          onPaste={this.handleOnPaste}\n          onFocus={(e) => {\n            this.setState({ activeInput: i });\n            e.target.select();\n          }}\n          onBlur={() => this.setState({ activeInput: -1 })}\n          separator={separator}\n          inputStyle={inputStyle}\n          focusStyle={focusStyle}\n          isLastChild={i === numInputs - 1}\n          isDisabled={isDisabled}\n          disabledStyle={disabledStyle}\n          hasErrored={hasErrored}\n          errorStyle={errorStyle}\n          shouldAutoFocus={shouldAutoFocus}\n          isInputNum={isInputNum}\n          isInputSecure={isInputSecure}\n          className={className}\n          data-cy={dataCy && `${dataCy}-${i}`}\n          data-testid={dataTestId && `${dataTestId}-${i}`}\n        />\n      );\n    }\n\n    return inputs;\n  };\n\n  render() {\n    const { containerStyle } = this.props;\n\n    return (\n      <div\n        style={Object.assign({ display: 'flex' }, isStyleObject(containerStyle) && containerStyle)}\n        className={!isStyleObject(containerStyle) ? containerStyle : ''}\n      >\n        {this.renderInputs()}\n      </div>\n    );\n  }\n}\n\nexport default OtpInput;","import React from \"react\";\nimport OtpInput from \"../lib/react-otp-input\";\nimport Text from \"../atoms/Text\";\n\nconst OtpComponent = ({ onChange, otpValue, length, errorMessage }) => {\n  return (\n    <div className=\"otp\">\n      <OtpInput\n        isInputNum={true}\n        value={otpValue}\n        onChange={(otp) => {\n          onChange(otp);\n        }}\n        numInputs={length}\n        hasErrored={errorMessage?.length > 0}\n        placeholder={false}\n        containerStyle={{\n          fontSize: \"16px\",\n          color: \"black\",\n        }}\n        inputStyle={{\n          width: 42,\n          height: 48,\n          border: \"1px solid #E5E5EB\",\n          marginRight: 16,\n          borderRadius: \"7px\",\n          fontWeight: 400,\n          fontSize: \"18px\",\n          lineHeight: \"28px\",\n        }}\n        focusStyle={{\n          outline: \"none\",\n          border: \"1px solid #9C9CAF\",\n          color: \"#14142B\",\n        }}\n        errorStyle={{\n          border: \"1px solid #E64C4C\",\n          color: \"#E64C4C\",\n        }}\n        shouldAutoFocus={true}\n      />\n      {errorMessage && (\n        <Text className=\"text-xs font-light text-error mt-1\">\n          {errorMessage}\n        </Text>\n      )}\n    </div>\n  );\n};\n\nexport default OtpComponent;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport Heading from \"../atoms/Heading\";\nimport Text from \"../atoms/Text\";\nimport Button from \"../atoms/Button\";\nimport OtpComponent from \"./OtpComponent\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nconst OtpScreen = ({\n  handleLogin,\n  loginDetails,\n  editMobile,\n  resendOtp,\n  error,\n}) => {\n  const [otp, setOtp] = useState(\"\");\n\n  //timer logic\n  const [timer, setTimer] = useState(30);\n  const timeOutCallback = useCallback(\n    () => setTimer((currTimer) => currTimer - 1),\n    []\n  );\n  // useEffect(() => {\n  //   timer > 0 && setTimeout(timeOutCallback, 1000);\n  // }, [timer, timeOutCallback]);\n\n  const resetTimer = function () {\n    if (!timer) {\n      setTimer(30);\n    }\n  };\n\n  //events\n  const onClickLogin = (event) => {\n    event.preventDefault();\n    handleLogin(otp);\n  };\n  const handelResendOtp = () => {\n    resetTimer();\n    resendOtp();\n  };\n  return (\n    <div className=\"md:min-h-screen bg-white flex items-center px-6 py-14 lg:pl-20 lg:pr-30\">\n      <form onSubmit={onClickLogin}>\n        <Heading type=\"h4\" className=\"mb-2 md:mb-8 font-medium\">\n          Enter Your PIN {\" \"}\n          <span className=\"font-bold\">{`${loginDetails.mobileNumber}`}</span>\n          <span className=\"ml-1\">\n            <EditOutlined onClick={editMobile} />\n          </span>\n        </Heading>\n        {/* <div className=\"mb-8 md:mb-9\">\n          <Text>\n            We have just sent verification code to{\" \"}\n            <span className=\"font-bold\">{`${loginDetails.mobileNumber}`}</span>\n            <span className=\"ml-1\">\n              <EditOutlined onClick={editMobile} />\n            </span>\n          </Text>\n        </div> */}\n        <OtpComponent\n          onChange={setOtp}\n          otpValue={otp}\n          length={4}\n          errorMessage={error}\n        />\n        {timer > 0 && (\n          <Text className=\"my-8 md:my-11 text-sm text-gray-600 font-light\">\n            {/* Resend OTP in{\" \"}\n            <span className=\"text-gray-900 font-bold\">{timer}s</span> */}\n          </Text>\n        )}\n        {timer == 0 && (\n          <div onClick={handelResendOtp}>\n            <Text className=\"text-primary-900 my-8 md:my-11 cursor-pointer\">\n              Send the code again\n            </Text>\n          </div>\n        )}\n\n        <Button\n          variant=\"primaryBtn\"\n          fontWeight=\"font-bold\"\n          btnClass=\"w-full\"\n          disabled={otp.length != 4}\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\nexport default OtpScreen;\n\n","import React, { useState } from \"react\";\nimport { setAuth, userLogin, userSession } from \"../api\";\nimport LoginContent from \"./loginContent\";\nimport LoginForm from \"./loginForm\";\nimport OtpScreen from \"./otpScreen\";\n\nconst LoginTemplate = ({}) => {\n\n  const [apiError, setApiError] = useState(null);\n  const [loginDetails, setLoginDetails] = useState({\n    step: 1,\n    mobileNumber: \"\"\n  });\n  \n  const handleGetOTP = async (data) => {\n    const res = await userLogin(data.mobileNumber);\n    if (res.data.status) {\n      setLoginDetails({\n        step: 2,\n        mobileNumber: data.mobileNumber\n      });\n      setApiError([]);\n    } else {\n      setApiError(res.data.message);\n    }\n  };\n\n  const handleLogin = async (otp) => {\n    if (otp.length == 4) {\n      const res = await userSession(\n        loginDetails.mobileNumber,\n        otp,\n        loginDetails.countryCode\n      );\n      console.log(res)\n      if (res.data.status) {\n        setAuth({\n          id: res.data.entity.id,\n          token: res.data.entity.token\n        });\n        window.location.reload(false);\n      } else {\n        setApiError(res.data.message);\n      }\n    }\n  };\n\n  const resendOtp = async () => {\n    await userLogin(loginDetails.mobileNumber);\n  };\n\n  const editMobile = () => {\n    setApiError([]);\n    setLoginDetails((prevState) => {\n      return { ...prevState, step: 1 };\n    });\n  };\n\n  const renderSwitch = () => {\n    switch (loginDetails.step) {\n      case 1:\n        return (\n          <LoginForm\n            onSubmit={handleGetOTP}\n            loginDetails={loginDetails}\n            apierror={apiError}\n            defaultValues={{ mobileNumber: loginDetails.mobileNumber }}\n          />\n        );\n      case 2:\n        return (\n          <OtpScreen\n            handleLogin={handleLogin}\n            loginDetails={loginDetails}\n            editMobile={editMobile}\n            resendOtp={resendOtp}\n            error={apiError}\n          />\n        );\n    }\n  };\n  return (\n    <div className=\"flex flex-wrap md:flex-nowrap\">\n      <div className=\"w-full md:w-55/100 shrink-0\">\n        <LoginContent />\n      </div>\n      <div className=\"w-full md:w-45/100\">{renderSwitch()}</div>\n    </div>\n  );\n};\nexport default LoginTemplate;\n","const FundData = [\n    {\n        label : \"Company\",\n        name: 'companyName',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Division\",\n        name: 'division',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Total Collection\",\n        name: 'toatalCollection',\n        inputType: 'number',\n        list: \"customerType\"\n    },\n    {\n        label : \"Total Payment\",\n        name: 'toatlPayment',\n        inputType: 'number',\n        list: \"customerType\"\n    },\n    {\n        label : \"Fund Available\",\n        name: 'fundAvailable',\n        inputType: 'number',\n        list: \"customerType\"\n    }\n];\n\nexport default FundData;","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Pagination } from 'antd';\nimport { getFundsReports } from '../api';\nimport moment from 'moment';\nimport FundData from '../data/FundData';\n\nconst { Title } = Typography;\n\nconst FundReport = ({ page }) => {\n    const [asOnReports, setAsOnReports] = useState(null);\n    const [monthReports, setMonthReports] = useState(null);\n    const [date, setDate] = useState(moment().format('YYYY-MM-DD'));\n    const [month, setMonth] = useState(moment().format('YYYY-MM'));\n\n    const getData = (data, reportType) => {\n        const  dataMap = {};\n        for (let index = 0; index < data.length; index++) {\n            const element = data[index];\n            \n            if(!dataMap[element.company_id]){\n                dataMap[element.company_id] = {\n                    id: element.company_id,\n                    companyName: element.name,\n                    division: element.division,\n                    fundAvailable: 0\n                };\n            }\n            const obj_ = dataMap[element.company_id];\n            if(element.type == 'receipts'){\n                obj_.toatalCollection = reportType == 'date' ? element.total_amount_for_date : element.total_amount_for_month_and_year;\n            }\n            if(element.type == 'payments'){\n                obj_.toatlPayment = reportType == 'date' ? element.total_amount_for_date : element.total_amount_for_month_and_year;\n            }\n        }\n\n        return Object.values(dataMap);\n    }\n\n    const fetchData = async (reportType) => {\n        const response = await getFundsReports(reportType, date, month.split('-')[1], month.split('-')[0]);\n        \n        console.log(response)\n        const data = response.data?.entity;\n        if(reportType == 'date'){\n            setAsOnReports(Object.values(getData(data, reportType)));\n        }\n        else{\n            setMonthReports(Object.values(getData(data, reportType)));\n        }\n        \n    }\n\n    useEffect(() => {\n        fetchData('date');\n    },[date]);\n\n    useEffect(() => {\n        fetchData('month');\n    },[month]);\n\n\n    const getRender = (column) => {\n        if(column.inputType === 'number'){\n            return {\n                render: (number, data) => {\n                    return (\n                        <div>\n                            { number ? number.toLocaleString('en-IN') : number } \n                        </div>\n                    )\n                } \n            }\n        }\n        return {};\n    }\n\n    const fieldData = FundData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px',\n        ...getRender(column)\n    }));\n\n\n    return (\n        <div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                    As on {<input type='date' onChange={(e) => setDate(e.target.value)} value={date}/>}\n                </Title>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={asOnReports} \n                            columns={columns}\n                            bordered\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                    Month Report {<input type='month' onChange={(e) => setMonth(e.target.value)} value={month}/>} \n                </Title>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={monthReports} \n                            columns={columns}\n                            bordered\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </div>\n    );\n};\n\nexport default FundReport;\n\n","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport { getAllMilkCategories, getInvoiceById } from '../../api'; \nimport moment from 'moment';\nimport EditableTable from '../common/EditableTable';\n\nconst { Title } = Typography;\n\n\nconst InvoiceDetailsModal = ({ visible , setVisible , invoiceId }) => {\n    const [invoiceDetails, setInvoiceDetails] = useState({\n        transactions: []\n    });\n    const [milk, setMilks] = useState({});\n\n    const fetchInvoicesDetails = async (invoiceId) => {\n        const response = await getInvoiceById(invoiceId);\n        console.log(response);\n\n        const transactions = response?.data?.entity.transactions.map((element) => {\n            const total  = element.rate * element.quantity;\n            return ({\n                itemCode: element.item.code,\n                categoryName: element.item.name,\n                rate: element.rate,\n                quantity: element.quantity,\n                total: element.total\n            })\n        })\n\n        setInvoiceDetails({ ...response?.data?.entity, transactions});\n    }\n\n    useEffect(async () => {\n        console.log('calling', invoiceId);\n        if(invoiceId){\n            await fetchInvoicesDetails(invoiceId);\n        }\n    }, [invoiceId]);\n\n    return (\n        <>\n        <Modal\n            title={`Invoice Details`}\n            visible={visible}\n            width={\"50%\"}\n            style={{ top: 75 }}\n            keyboard={false}\n            onCancel={() => setVisible(false)}\n            footer={[]}\n        >\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Row>\n                    <Col span={18}>\n                        <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                            Customer Name : {invoiceDetails?.customer?.name}\n                        </Title>\n                    </Col>\n                    <Col span={6}>\n                        <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                            Dated : { moment(invoiceDetails?.invoiceDate).format('DD-MM-YYYY') }\n                        </Title>\n                    </Col>\n                    <Col span={12}>\n                        <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                            Invoice Number : {invoiceDetails?.invoiceNumber}\n                        </Title>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col  span={24}>\n                        <EditableTable\n                            customerData={invoiceDetails && invoiceDetails.customerId && invoiceDetails?.customer}\n                            transactions={invoiceDetails && invoiceDetails?.transactions }\n                            milk={{}}\n                            notEditable={true}\n                            invoiceDetails={invoiceDetails}\n                        />\n                    </Col>\n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default InvoiceDetailsModal;","import { Modal, Input, Select, DatePicker, Button } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { getCompanies, getCustomers } from '../../api';\nimport { getDateWithTime } from '../../util/util';\nimport moment from 'moment';\n\nconst getDates = (dates) => {\n  let fromDate = null;\n  let toDate = null;\n  if (dates.length > 0) {\n    fromDate = getDateWithTime(dates[0], [0, 0, 0]);\n    toDate = getDateWithTime(dates[1], [23, 59, 59]);\n  }\n\n  return {\n    fromDate,\n    toDate\n  };\n};\n\nconst { RangePicker } = DatePicker;\nconst FilterModal = ({ visible, onOk, onCancel, page, filters }) => {\n  const [dateRange, setDateRange] = useState( filters.dateRange?.fromDate ? [moment( filters.dateRange.fromDate), moment( filters.dateRange.toDate)] : []);\n  const [companyIds, setComapnyIds] = useState(filters.companyIds ? filters.companyIds : []);\n  const [customerIds, setCustomerIds] = useState(filters.customerIds ? filters.customerIds : []);\n\n  const handleOk = () => {\n    onOk({ \n      dateRange: getDates(dateRange),\n      companyIds,\n      customerIds\n    });\n  };\n\n  const [divisions, setDivisions] = useState([]);\n  const [customers, setCustomers] = useState([]);\n\n  const getOptions = (list) => list.map((option, index) => <Option key={index} value={option.value}>{option.label}</Option>);\n\n  const fetchCompanies = async () => {\n    const res = await getCompanies();\n    // console.log('getCompanies', res);\n    setDivisions(\n      res.data.entity?.rows.map((company) => ({\n        value: company.id,\n        label: `${company.division} - ${company.name}`\n      }))\n    )\n  }\n  const fetchCustomers = async () => {\n    const customerType = page == 'sales' || page == 'receipts' ? 'customer' : 'vendor';\n    const res = await getCustomers(customerType);\n    // console.log('getCustomers', res);\n    setCustomers(\n      res.data.entity?.rows.map((customer) => ({\n        value: customer.id,\n        label: `${customer.name}`\n      }))\n    )\n  }\n  useEffect(()=> {\n    if(visible){\n      fetchCompanies();\n      fetchCustomers();\n    }\n    \n  } , [visible]);\n\n  const onClear = () => {\n    setDateRange([]);\n    setComapnyIds([]);\n    setCustomerIds([]);\n    // onCancel();\n  }\n\n  return (\n    <Modal\n      title=\"Filter\"\n      visible={visible}\n      onOk={handleOk}\n      onCancel={onCancel}\n      footer={[\n        <Button key=\"cancel\" onClick={() => onClear()}>\n            Clear Filter\n        </Button>,\n        <Button key=\"save\" type=\"primary\" onClick={() => handleOk()}>\n            Apply Filter\n        </Button>,\n        ]}\n    >\n      <label>{page == 'receipts' ? 'Receipt' : page == 'payments' ? 'Payment' : 'Invoice'} Date Range</label>\n      <RangePicker\n        style={{ width: '100%'}}\n        dateRender={(current) => {\n            const style = {};\n\n            if (current.date() === 1) {\n                style.border = '1px solid #1890ff';\n                style.borderRadius = '50%';\n            }\n\n            return (\n                <div className=\"ant-picker-cell-inner\" style={style}>\n                    {current.date()}\n                </div>\n            );\n        }}\n        onChange={(value) => setDateRange(value)}\n        value= {dateRange} \n        />\n      <br />\n      <br />\n      <label>Division</label>\n      <Select\n        placeholder=\"Divisions\"\n        allowClear\n        style={{ width: '100%'}}\n        value={companyIds}\n        onChange={setComapnyIds}\n        mode=\"multiple\"\n        filterOption={(input, option) =>\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n        filterSort={(optionA, optionB) =>\n            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n        }\n      >\n         {getOptions(divisions)}\n      </Select>\n      <br />\n      <br />\n      <label>{page == 'sales' || page == 'receipts' ? 'Customers' : 'Vendors'}</label>\n      <Select\n        placeholder=\"Customers\"\n        value={customerIds}\n        allowClear\n        style={{ width: '100%'}}\n        onChange={setCustomerIds}\n        mode=\"multiple\"\n        filterOption={(input, option) =>\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n        filterSort={(optionA, optionB) =>\n            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n        }\n      >\n        {getOptions(customers)}\n      </Select>\n    </Modal>\n  );\n};\n\nexport default FilterModal;\n","import { Tag } from 'antd';\n\n\nconst SelectedFilters = ({ filters, onRemoveFilter, page }) => {\n    let show = false;\n    if(Object.keys(filters).length > 0){\n        show = true;\n    }\n    const nameMap = {\n        dateRange: { \n            label: 'Date Range',\n            checkFunction: (data) => data.dateRange?.fromDate \n        },\n        companyIds: { \n            label: 'Divisions',\n            checkFunction: (data) => data.companyIds?.length > 0 \n        },\n        customerIds: { \n            label: 'Customers',\n            checkFunction: (data) => data.customerIds?.length > 0 \n        }\n    }\n\n    const handleClose = (key) => {\n        onRemoveFilter(key);\n    };\n    return (\n        <>\n        { show && \n            <div className='mt-5'>\n                {\n                    Object.keys(filters).filter((key) => nameMap[key].checkFunction(filters)).map((key) => (\n                        <Tag \n                            color=\"processing\"\n                            closable\n                            onClose={() => handleClose(key)} \n                        >\n                            {nameMap[key].label}\n                        </Tag>\n                    ))\n                }\n            </div>\n        }\n        </>\n    );\n};\n\nexport default SelectedFilters;","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Pagination, Input } from 'antd';\nimport InvoiceDetailsModal from './Modal/InvoiceDetailModal';\nimport Search from 'antd/lib/transfer/search';\nimport FilterModal from './Modal/FilterModal';\nimport SelectedFilters from './Modal/SelectedFilters';\nimport { deleteApiFn, getApiFn, getFieldData, getPageName, getTitle, mappingData, sweetalertMessage, sweetalertOkCancel, sweetalertValidate } from '../util/util';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nconst { Title } = Typography;\n\nconst Invoices = ({ page, reload, setEditData, setReload }) => {\n\n    const [invoices, setInvoices] = useState(null);\n    const [visibleID, setVisibleID] = useState(false);\n    const [selectedInvoiceId, setSelectedInvoiceId] = useState(null);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n    const [filter, setFilter] = useState({});\n    const [visibleFilter, setVisibleFilter] = useState(false);\n\n    const fetchInvoices = async () => {\n        const getApi = getApiFn(page); \n        const response = await getApi(page, search, (currentPage - 1) * pageSize, pageSize , JSON.stringify(filter));\n        \n        console.log('response', response);\n        setInvoices(response?.data?.entity.rows.map((data) => mappingData(page, data)));\n        setTotal(response?.data?.entity.count);\n    }\n\n    useEffect(() => {\n        fetchInvoices();\n    },[page, currentPage, pageSize, reload, search, filter]);\n\n    const openInvoiceDetail = (invoiceId) => {\n        setSelectedInvoiceId(invoiceId);\n        setVisibleID(true);  \n    }\n\n    const onEdit = (data) => {\n        setEditData({...data})\n    }\n\n    const  onDelete = async (data) => {\n        sweetalertOkCancel(\n            'Are you sure you want to delete ?',\n            async () => {\n                const deleteApi = deleteApiFn(page);\n                const response = await deleteApi(data.id);\n                if(response?.data?.status){\n                    sweetalertMessage('Succesfully Deleted')\n                }\n                else{\n                    console.log('err', response)\n                    sweetalertValidate('OOPS!! Something went wrong')\n                }\n                setReload(!reload);\n            },\n            () => {}\n        )\n    }\n\n    const getRender = (column, page) => {\n        return {\n            render: (value, data) => {\n                if(column.name == 'invoiceNumber'){\n                    const invoiceId =  page == 'receipts' || page == 'payments' ? data.invoice?.id : data.id;\n                    return (\n                        <div>\n                            <a onClick={() => openInvoiceDetail(invoiceId)} className='underline text-blue-900'>\n                            { value }\n                            </a>\n                        </div>\n                    )\n                }\n                if(column.inputType === 'number'){\n                    return (\n                        <div>\n                            { value ? value.toLocaleString('en-IN') : value } \n                        </div>\n                    )\n                        \n                }\n                if(column.inputType === 'date'){\n                    return (\n                        <div>\n                            { value ? moment(value).format('DD-MM-YYYY') : null } \n                        </div>\n                    )\n                        \n                }\n\n                if(column.name === 'companyId'){\n                    return `${data?.company?.division} - ${data?.company?.name}` \n                }\n\n                if(column.name === 'groupId'){\n                    return `${data?.group?.name}` \n                }\n                return value\n            }\n        };\n    }\n    const fieldData = getFieldData(page); \n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {getTitle(column, page)}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px',\n        ...getRender(column, page)\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: '100px',\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n      };\n    \n      const handlePageSizeChange = (current, size) => {\n        setPageSize(size);\n        setCurrentPage(1);\n      };\n\n    \n    const initpageSizeOptions = [10, 20, 50, 100];\n    const pageSizeOptions = [];\n    while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n        pageSizeOptions.push(initpageSizeOptions[0] + '');\n        initpageSizeOptions.shift();\n    }\n    if(total > 10) pageSizeOptions.push( total + '');\n\n    const onApplyFilter = (filterData) => {\n        setFilter(filterData);\n        setVisibleFilter(false);\n    }\n\n    const onRemoveFilter = (key) => {\n        setFilter({\n            ...filter,\n            [key]: null\n        })\n    }\n\n    return (\n        <div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                    {getPageName(page)}\n                </Title>\n                <div className='mb-2'>\n                    <Row className=\"w-full\">\n                        <Col span={12}>\n                            <Input\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={e => setSearch(e.target.value)}\n                            />\n                        </Col>\n                        <Col span={3} className='ml-5'>\n                            <Button onClick={() => setVisibleFilter(!visibleFilter)} >\n                                Filter\n                            </Button>\n                        </Col>\n                        <Col span={24}>\n                            <SelectedFilters filters={filter} onRemoveFilter={onRemoveFilter}/>\n                        </Col>\n                    </Row>\n                </div>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={invoices} \n                            columns={columns}\n                            bordered\n                            pagination={{ \n                                position: ['bottomRight', 'topRight'], \n                                pageSizeOptions,\n                                current: currentPage,\n                                pageSize: pageSize,\n                                onChange: handlePageChange,\n                                onShowSizeChange: handlePageSizeChange,\n                                total,\n                                showSizeChanger: true\n                             }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n                <InvoiceDetailsModal visible={visibleID} setVisible={setVisibleID} invoiceId={selectedInvoiceId} />\n                {visibleFilter &&\n                    <FilterModal\n                        visible={visibleFilter}\n                        onCancel={() => setVisibleFilter(false)}\n                        onOk={(data) => onApplyFilter(data)}\n                        page={page}\n                        filters={filter}\n                    />\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Invoices;\n","import { Table } from 'antd';\nimport { useEffect } from 'react';\n\nconst ListValidationErrors = ({\n    tableData, invalidHeader, setHasErrors, setRecord, record\n}) => {\n\n    const columns = [\n    {\n        title:  'ROW INDEX',\n        dataIndex: \"index\",\n        key: \"index\",\n        width: '150px',\n        render: (index) => (\n            <div className='flex flex-col' key={index + 2}>\n                <label className='font-semibold' key={index + 2}>{index + 2}</label>\n            </div>\n        ),\n    },\n    {\n        title:  'REASON',\n        dataIndex: \"reason\",\n        key: \"reason\",\n        render: (reason, data) => {\n            const convertToUl = (reason).map((item, idx) => <li key={idx}>{item}</li>);\n\n            return (\n                <ul key={data.index + 2} >{convertToUl}</ul>\n            );\n        }\n    }];\n    const processReason = () => {\n        let count = 0;\n        setRecord(count);\n        tableData.map((item) => {\n            if (item.reason.length) { count += 1; }\n        });\n        setRecord(count);\n        if ((!count) && !invalidHeader.length) setHasErrors(false);\n    };\n\n    useEffect(() => {\n        processReason();\n    }, [record]);\n\n    return (\n        <div >\n            <div className='flex-col pb-5'>\n                <label className=\"font text-md\">The following data is invalid. Please correct them and upload again.</label>\n                <ul className='pl-2 text-red-800' >\n                    {invalidHeader.length ? invalidHeader.map((item, idx) => <li key={idx}>Invalid Header : {item.invalidColumn}</li>) : ''}\n                </ul>\n                <label className=\"font text-md\">Correct the errors and upload again.</label>\n\n            </div>\n            <Table\n                dataSource={tableData}\n                columns={columns}\n                bordered\n                pagination={ {}}\n            />\n\n        </div>\n    );\n};\n\nexport default ListValidationErrors;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Card = ({\n  cardClass = \"\",\n  cardWidth = \"\",\n  cardBg = \"bg-white\",\n  cardBorder = \"border\",\n  cardBorderColor = \"border-gray-200\",\n  cardRadius = \"rounded-2xl\",\n  cardPadding = \"\",\n  cardShadow = \"\",\n  children,\n  cardHeight = \"\",\n  onClick,\n}) => {\n  return (\n    <div\n      className={`${cardWidth} ${cardHeight} ${cardBg} ${cardBorder} ${cardBorderColor} ${cardRadius} ${cardPadding} ${cardShadow} ${cardClass} `}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n\nCard.propTypes = {\n  cardClass: PropTypes.string,\n  cardWidth: PropTypes.string,\n  cardBg: PropTypes.string,\n  cardBorder: PropTypes.string,\n  cardBorderColor: PropTypes.string,\n  cardRadius: PropTypes.string,\n  cardPadding: PropTypes.string,\n  cardShadow: PropTypes.string,\n};\n","import { usePapaParse } from 'react-papaparse';\nimport Button from '../../atoms/Button';\n\nconst ProcessCsvStructure = ({\n    acceptedFile, onValidate, resetUploadedCsv, setCsvArray, onCancel, setCsvErrors, setHasErrors, dataKeysMap, validateButtonRef\n}) => {\n    const { readString } = usePapaParse();\n\n    const keysMap = dataKeysMap;\n\n    const emptyUploadedCsv = (onSuccess) => {\n        if (acceptedFile === null) {\n            alert('Error !! Empty Csv file upload!');\n            resetUploadedCsv();\n            return [];\n        }\n        onSuccess();\n    };\n\n    const renameKeys = (keysMap, readCsvData) => (readCsvData.map((item) => (Object.keys(item).reduce((acc, key) => ({\n        ...acc,\n        ...{ [keysMap[key] || key]: item[key] }\n    }), {}))));\n\n    const validateFieldNames = (readCsvData) => {\n        if (readCsvData.length === 0 || (readCsvData.length > 0 && Object.keys(readCsvData[0]).length === 0)) {\n            alert('Error!! Empty Csv file upload!');\n            return null;\n        }\n\n        const invalidHeaders = [];\n        let newCsv = [];\n        Object.keys(readCsvData[0]).forEach((item) => {\n            if (!keysMap[item]) invalidHeaders.push({ invalidColumn: item });\n        });\n\n        if (invalidHeaders.length) {\n            console.log('invalidHeaders', invalidHeaders)\n            // alert('Error!! Invalid Headers in Csv file!');\n        } else {\n            newCsv = renameKeys(keysMap, readCsvData);\n            setCsvArray(newCsv);\n        }\n\n        return ({ newCsv, invalidHeaders });\n    };\n\n    const handleReadString = () => {\n        setCsvArray(null);\n        setCsvErrors([]);\n        setHasErrors(false);\n\n        emptyUploadedCsv(() => {\n            console.log('acceptedFile', acceptedFile)\n            readString(acceptedFile, {\n                worker: true,\n                header: true,\n                skipEmptyLines: true,\n                complete: (results) => {\n                    const handleCsvEmpty = validateFieldNames(results.data);\n                    console.log('results.data', results.data);\n                    if (handleCsvEmpty) {\n                        const { newCsv, invalidHeaders } = { ...handleCsvEmpty };\n                        onValidate({ newCsv, invalidHeaders });\n                    } else {\n                        onCancel();\n                    }\n                }\n            });\n        });\n    };\n    \n    return (\n        <>\n            <div className=\"flex justify-end items-center mt-5\">\n                <Button\n                    type=\"button\"\n                    variant=\"outlineBtn\"\n                    btnClass=\"text-sm font-normal py-3 px-6\"\n                    onClick={() => onCancel()}\n                >\n                    Cancel\n                </Button>\n                <Button\n                    type=\"submit\"\n                    variant=\"primaryBtn\"\n                    btnClass=\"text-sm font-normal ml-2 py-3 px-8\"\n                    onClick={() => handleReadString()}\n                >\n                    Save\n                </Button>\n            </div>\n        </>\n    );\n};\nexport default ProcessCsvStructure;\n","import { DeleteOutlined, FileProtectOutlined } from '@ant-design/icons';\nimport React, { useRef, useState } from 'react';\nimport { useCSVReader } from 'react-papaparse';\nimport Text from '../../atoms/Text';\nimport ProcessCsvStructure from './ProcessCsvStructure';\n\nconst CSVComponent = ({\n    validateBulkCreation,\n    onCancel,\n    hasErrors,\n    setHasErrors,\n    csvErrors,\n    setCsvErrors,\n    csvArray,\n    setCsvArray,\n    validateButtonRef,\n    invalidHeader,\n    setInvalidHeader,\n    record,\n    setRecord,\n    dataKeysMap\n}) => {\n    const { CSVReader } = useCSVReader();\n    const buttonRefCancel = React.useRef();\n   \n    const [csvFileData, setCsvFileData] = useState(null);\n\n    const onValidate = async ({ newCsv, invalidHeaders }) => {\n        setRecord(false);\n        //setInvalidHeader(invalidHeaders);\n\n        if (!newCsv) {\n            resetUploadedCsv();\n        }\n\n        validateBulkCreation(newCsv, invalidHeaders);\n    };\n\n    const resetUploadedCsv = () => {\n        onCancel();\n        buttonRefCancel.current?.click();\n    };\n    return (\n        <>\n            <div className='' >\n                <CSVReader onUploadAccepted={(results) => {\n                    setCsvFileData(results);\n                    setHasErrors(false);\n                    setCsvArray(null);\n                }} >\n                    {({\n                        getRootProps,\n                        acceptedFile,\n                        ProgressBar,\n                        getRemoveFileProps\n                    }) => {\n                        const RemoveFile = (\n                            <div className=\"absolute group-hover:flex hidden w-53.5 h-25  top-0 left-0 items-center justify-center before:w-full before:h-full before:left-0 before:bg-black before:opacity-70\">\n                              <div ref={buttonRefCancel} className=\"absolute cursor-pointer \" {...getRemoveFileProps()}>\n                                <DeleteOutlined />\n                              </div>\n                            </div>\n                          );\n                        return (\n                        <>\n                            <div className={`relative w-53.5 h-25 mb-2 cursor-pointer`}>\n                                <div {...getRootProps()}>\n                                    <input\n                                    className=\"shadow hidden appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    />\n\n                                    <div\n                                    className={`p-2 border border-dashed bg-gray-100 border-gray-300 w-53.5 h-25 flex items-center justify-center`}\n                                    >\n                                    {!acceptedFile && (\n                                        <div className=\"text-center\">\n                                        <FileProtectOutlined />\n                                        <Text>\n                                            Drag the file or <span className=\"text-info \">Browse</span>\n                                        </Text>\n                                        </div>\n                                    )}\n                                    {acceptedFile && <div\n                                            key={acceptedFile.name}\n                                            className=\"relative w-53.5 h-25 align-middle mb-6 group flex items-center justify-center\"\n                                        >\n                                            {acceptedFile.name}\n                                            {RemoveFile}\n                                        </div>\n                                    }\n                                    </div>\n                                </div>\n                            </div>\n                            <ProcessCsvStructure\n                                csvFileData={csvFileData}\n                                acceptedFile={acceptedFile}\n                                onValidate={onValidate}\n                                getRemoveFileProps={getRemoveFileProps} \n                                resetUploadedCsv={resetUploadedCsv}\n                                setCsvArray={setCsvArray}\n                                setInvalidHeader={setInvalidHeader}\n                                onCancel={onCancel}\n                                setCsvErrors={setCsvErrors}\n                                setHasErrors={setHasErrors}\n                                dataKeysMap={dataKeysMap}\n                                validateButtonRef={validateButtonRef}\n                            />\n\n                            <div className='pb-5'>\n                                {(csvArray) && (\n                                    (hasErrors\n                                        ? (<label className=\"font text-md text-red-800 \">\n                                            {record} records needs correction. </label>)\n                                        : (<label className=\"font text-md \"> All records are valid. </label>)\n                                    ))}\n                            </div>\n                        </>\n                    )}}\n                </CSVReader>\n                </div>\n        </>\n    );\n};\n\nexport default CSVComponent;\n","import moment from \"moment\";\nimport { useCSVDownloader } from \"react-papaparse\";\n\nexport default function DownloadCsv({\n  sampleData,\n  fileName,\n  children,\n  page\n}) {\n  const { CSVDownloader, Type } = useCSVDownloader();\n  const getFileName = () => `${page}-sample-file`;\n\n  return (\n    <CSVDownloader\n      variant=\"Link\"\n      type={Type.Button}\n      filename={getFileName()}\n      bom={true}\n      config={{\n        delimiter: \",\",\n      }}\n      data={sampleData}\n    >\n      {children}\n    </CSVDownloader>\n  );\n}\n","import PropTypes from \"prop-types\";\nimport Heading from \"../atoms/Heading\";\nimport Text from \"../atoms/Text\";\n\nconst IconWithHeading = ({\n  headingChildren,\n  textChildren,\n  getIcon,\n  onIconClick,\n  headingStyle = \"\",\n}) => {\n  const myLoader = ({ src }) => src;\n  return (\n    <div\n      className={`flex items-center ${onIconClick ? \"cursor-pointer\" : \"\"}`}\n      onClick={onIconClick}\n    >\n      <div className=\"flex shrink-0 mr-2\">\n        {getIcon()}\n      </div>\n      <div>\n        <Heading type=\"h4\" className={`leading-8 ${headingStyle}`}>\n          {headingChildren}\n        </Heading>\n        {textChildren && (\n          <Text className={`text-sm font-light text-gray-500`}>\n            {textChildren}\n          </Text>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default IconWithHeading;\nIconWithHeading.propTypes = {\n  iconUrl: PropTypes.string,\n  iconAlt: PropTypes.string,\n  iconWidth: PropTypes.number,\n  iconHeight: PropTypes.number,\n  headingChildren: PropTypes.string,\n  textChildren: PropTypes.string,\n  onIconClick: PropTypes.func,\n};\n","import ListValidationErrors from \"./CSVComponent/ListValidationErrors\";\nimport Card from \"../atoms/Card\";\nimport InputLabel from \"../atoms/InputLabel\";\nimport Text from \"../atoms/Text\";\nimport CSVComponent from \"./CSVComponent/CSVComponent\";\nimport DownloadCsv from \"./CSVComponent/DownloadCsv\";\nimport IconWithHeading from \"../molecules/IconWithHeading\";\nimport { GlobalOutlined } from \"@ant-design/icons\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { createReceiptsInBulk, createSalesInBulk } from \"../api\";\nimport { sweetalertMessage, sweetalertValidate } from \"../util/util\";\n\nconst BulkUploadForm = ({ page, setReload }) => {\n\n    const [csvArray, setCsvArray] = useState(null);\n    const [csvErrors, setCsvErrors] = useState([]);\n    const [hasErrors, setHasErrors] = useState(false);\n    const [invalidHeader, setInvalidHeader] = useState([]);\n    const [record, setRecord] = useState(null);\n\n    const [validatedData, setValidatedData] = useState(false);\n\n    const validateButtonRef = useRef(null);\n\n    useEffect(() => {\n      onCancel();\n  }, [page]);\n  \n    useEffect(() => {\n        setHasErrors(true);\n    }, [csvErrors]);\n\n    const onCancel = () => {\n        setValidatedData(false)\n        setCsvArray(null);\n        setCsvErrors([]);\n        setHasErrors(false);\n        setInvalidHeader([]);\n        setRecord(null);\n    };\n\n    const handleBulkCreation = async (csvData) => {\n      console.log(csvData, 'csvData')\n        const createApi = page == 'receipts' || page == 'payments'? createReceiptsInBulk : createSalesInBulk;\n        const res = await createApi(csvData, page);\n        console.log(res, 'res')\n        if (res.data.status) {\n           if(res.data.entity.csvErrorArray){\n            setCsvErrors(res.data.entity.csvErrorArray);\n           }\n           else{\n            setCsvErrors([]);\n            setReload(true);\n            sweetalertMessage('Succesfully Uploaded')\n           }\n        } else {\n          sweetalertValidate('OOPS!! Something went wrong')\n        }\n           \n    };\n\n    const validateBulkCreation = async (csvData, invalidHeaders) => {\n        if (invalidHeaders.length > 0) {\n            setInvalidHeader(invalidHeaders);\n        } else {\n            handleBulkCreation(csvData)\n        }\n    };\n\n    const dataKeysMap = getDataKeysMap(page);\n   \n  return (\n    <div className=\"scr\">\n      <Card cardClass=\"mt-6 mb-4 flex\" cardPadding=\"px-6\">\n        <div className=\"w-2/5 py-8\">\n          <IconWithHeading\n            getIcon={() => <GlobalOutlined style={{ fontSize: '450%'}} />}\n            headingChildren=\"Bulk Upload\"\n            textChildren=\"Upload the required file\"\n          />\n          <Text className=\"pl-14 pt-4\">\n            To download a sample <b>{page}</b> file{\" \"}\n            <DownloadCsv\n              page={page}\n              sampleData={[dataKeysMap]}\n              fileName={'sample-file'}\n              children={\n                <div\n                  variant=\"Link\"\n                  className=\"text-primary-500 font-semibold text-sm mt-2\"\n                >\n                  Click here\n                </div>\n              }\n            />\n          </Text>\n        </div>\n        <div className=\"w-3/5 pl-25 py-8 mt-12\">\n          <div>\n            <InputLabel fontWeight=\"font-normal\">Upload File</InputLabel>\n            <CSVComponent\n              validateBulkCreation={validateBulkCreation}\n              handleBulkCreation={handleBulkCreation}\n              hasErrors={hasErrors}\n              setHasErrors={setHasErrors}\n              csvErrors={csvErrors}\n              setCsvErrors={setCsvErrors}\n              csvArray={csvArray}\n              setCsvArray={setCsvArray}\n              onCancel={onCancel}\n              validateButtonRef={validateButtonRef}\n              invalidHeader={invalidHeader}\n              setInvalidHeader={setInvalidHeader}\n              record={record}\n              setRecord={setRecord}\n              dataKeysMap={dataKeysMap}\n            />\n          </div>\n        </div>\n      </Card>\n\n      {hasErrors && (\n        <Card cardClass=\"mt-6 mb-4 flex\" cardPadding=\"px-6\">\n          <div className=\"w-full\">\n            <ListValidationErrors\n              tableData={csvErrors}\n              invalidHeader={invalidHeader}\n              setHasErrors={setHasErrors}\n              hasErrors={hasErrors}\n              setRecord={setRecord}\n              record={record}\n            />\n          </div>\n        </Card>\n      )}\n\n      {/* <Invoices page={page} reload={reload}/> */}\n    </div>\n  );\n};\n\nexport default BulkUploadForm;\n\nconst getDataKeysMap = (page) => {\n  if(page == 'sales'){\n    return {\n      'COMPANY': 'companyName',\n      'DIVISION': 'division',\n      'CUSTOMER NAME': 'customerName',\n      'CUSTOMER CODE': 'customerCode',\n      'GST NUMBER': 'gstNumber',\n      'DATE': 'invoiceDate',\n      'INVOICE NUMBER': 'invoiceNumber',\n      'QUANTITY': 'quantity',\n      'UOM': 'uom',\n      'ITEM CODE': 'itemCode',\n      'ITEM NAME': 'itemName',\n      \"ITEM VALUE\": 'itemValue',\n      \"LABOUR CHARGES\": \"labourCharges\",\n      \"CLAIM AMOUNT\": \"claimAmount\",\n      \"TAXABLE VALUE\": \"taxableAmount\",\n      \"IGST\": \"igst\",\n      \"CGST\": \"cgst\",\n      \"SGST\": \"sgst\",\n      \"CESS\": \"cess\",\n      \"ROUND OFF\": \"roundOff\",\n      \"TCS\": \"tcs\",\n      \"TOTAL VALUE\": \"totalValue\"\n    }\n  }\n\n  if(page == 'purchase'){\n    return {\n      'COMPANY': 'companyName',\n      'DIVISION': 'division',\n      'VENDOR NAME': 'customerName',\n      'VENDOR CODE': 'customerCode',\n      'GST NUMBER': 'gstNumber',\n      'DATE': 'invoiceDate',\n      'INVOICE NUMBER': 'invoiceNumber',\n      'QUANTITY': 'quantity',\n      'UOM': 'uom',\n      'ITEM CODE': 'itemCode',\n      'ITEM NAME': 'itemName',\n      \"ITEM VALUE\": 'itemValue',\n      \"LABOUR CHARGES\": \"labourCharges\",\n      \"CLAIM AMOUNT\": \"claimAmount\",\n      \"TAXABLE VALUE\": \"taxableAmount\",\n      \"IGST\": \"igst\",\n      \"CGST\": \"cgst\",\n      \"SGST\": \"sgst\",\n      \"CESS\": \"cess\",\n      \"ROUND OFF\": \"roundOff\",\n      \"TCS\": \"tcs\",\n      \"TOTAL VALUE\": \"totalValue\"\n    }\n  }\n\n  if(page == 'receipts'){\n    return {\n      'COMPANY': 'companyName',\n      'DIVISION': 'division',\n      'CUSTOMER NAME': 'customerName',\n      'CUSTOMER CODE': 'customerCode',\n      'INVOICE NUMBER': 'invoiceNumber',\n      'NATURE': 'nature',\n      'RECEIPT VIA': 'via',\n      'AMOUNT': \"amount\",\n      'RECEIPT DATE': \"receiptDate\"\n    }\n  }\n  if(page == 'payments'){\n    return {\n      'COMPANY': 'companyName',\n      'DIVISION': 'division',\n      'VENDOR NAME': 'customerName',\n      'VENDOR CODE': 'customerCode',\n      'INVOICE NUMBER': 'invoiceNumber',\n      'NATURE': 'nature',\n      'PAID VIA': 'via',\n      'AMOUNT': \"amount\",\n      'PAYMENT DATE': \"receiptDate\"\n    }\n  }\n}\n","import { Breadcrumb, Typography } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport Reports from './Reports';\nimport Invoices from './Invoices';\nimport BulkUploadForm from './UploadForm';\nimport { CloseCircleOutlined, PlusCircleOutlined, UploadOutlined } from '@ant-design/icons';\nimport Button from '../atoms/Button';\nimport { getPageName, isUploadButton } from '../util/util';\nimport CustomerForm from './Forms/CustomerForm';\nimport InvoiceForm from './Forms/InvoiceForm';\nconst { Title } = Typography;\n\nconst Page = ({ page }) => {\n\n    const [reload, setReload] = useState(false);\n    const [upload, setUpload] = useState(false);\n    const [showAdd, setShowAdd] = useState(false);\n    const [editData, setEditData] = useState(null);\n    useEffect(() => {\n        setUpload(false);\n        setShowAdd(false);\n        setReload(false);\n        setEditData(null);\n    }, [page]);\n\n    const generalForm = ['customer', 'vendor', 'company', 'item', 'groups', 'ledgers'];\n    return (\n    <>\n        <Breadcrumb style={{ margin: '16px 0'}} className=\"text-4xl font-bold\">\n            <Breadcrumb.Item>{''}</Breadcrumb.Item>\n        </Breadcrumb>\n        <div className='relative flex'>\n            <Button \n                type=\"secondaryBtn\"\n                variant=\"secondaryBtn\"\n                btnClass=\"text-sm font-normal ml-2 px-3\"\n                onClick={() => setShowAdd(!showAdd)}\n            >\n                {!showAdd ? <PlusCircleOutlined className='mr-2'/> : <CloseCircleOutlined className='mr-2'/>}\n                {!showAdd ? `Add ${getPageName(page)}` : 'Close Form' }\n            </Button>\n            { isUploadButton(page) && <Button \n                type=\"primaryBtn\"\n                variant=\"primaryBtn\"\n                btnClass=\"text-sm font-normal ml-2 px-2\"\n                onClick={() => setUpload(!upload)}\n            >\n                {!upload ? <UploadOutlined className='mr-2'/> : <CloseCircleOutlined className='mr-2'/>}\n                { !upload ? 'Upload' : 'Close Upload'}\n            </Button>\n            }\n        </div>\n        \n        \n        { upload && <BulkUploadForm  page={page} setReload={setReload}/>}\n\n        {showAdd && \n            <div className=\"site-layout-background p-5\" id='form-div'>\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{editData ? 'Edit' : 'Add'} {getPageName(page)}</Title>\n                { (generalForm.includes(page)) && <CustomerForm \n                        data={editData}\n                        callback={() => setReload(!reload)}\n                        setEditData={setEditData}\n                        page={page}\n                    />\n                }\n\n                { (page === 'sales' || page == 'purchase') && <InvoiceForm \n                        data={editData}\n                        callback={() => setReload(!reload)}\n                        setEditData={setEditData}\n                        page={page}\n                    />\n                }\n            </div> \n        }     \n        <div className='mt-5'>\n            <Invoices\n                page={page}\n                reload={reload}\n                setEditData={(value) => { \n                    setEditData(value);\n                    setShowAdd(true);\n                    setTimeout(() => document.getElementById('form-div').scrollIntoView(), 2);\n                }}\n                setReload={setReload}/>\n        </div>\n        \n    </>   \n    );\n};\n\nexport default Page;","import React, { useState } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport './App.css';\nimport { Avatar, Breadcrumb, Layout, Menu } from 'antd';\nimport { Homepage, LoginTemplate, Navbar } from './components';\nimport { AppstoreOutlined, MailOutlined, NotificationOutlined, UserOutlined } from '@ant-design/icons';\nimport { getAuth, removeAuth } from './api';\nimport FundReport from './components/FundReport';\nimport Page from './components/Page';\nimport Customer from './components/Customer';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  const auth = getAuth();\n  if(!auth){\n    return (\n      <>\n        <LoginTemplate />\n      </>\n    )\n  }\n\n  const logout = () => {\n    removeAuth(null);\n    window.location.reload(false);\n  }\n\n  return (\n    <Layout className='h-screen'>\n      <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\n        <Navbar collapsed={collapsed} />\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header\n          className=\"site-layout-background\"\n          style={{\n            padding: 0,\n          }}\n        >\n           <Menu mode=\"horizontal\" style={{ float: 'right', width: 'auto'}}>\n              <Menu.Item key=\"notification\" icon={<NotificationOutlined />}>\n              </Menu.Item>\n              <Menu.Item key=\"mail\" icon={<MailOutlined />}>\n              </Menu.Item>\n              <Menu.SubMenu key=\"profile\" icon={<UserOutlined />}>\n                {/* <Menu.Item key=\"two\" icon={<AppstoreOutlined />}>\n                  Navigation Two\n                </Menu.Item> */}\n                <Menu.Item key=\"logout\" icon={<AppstoreOutlined />} onClick={logout}>\n                  Sign Out\n                </Menu.Item>\n              </Menu.SubMenu>\n            </Menu>\n        </Header>\n        <Content style={{ margin: '0 16px' }} >\n          <div style={{ padding: 10, height: 'calc(100vh - 90px)', overflowY :'auto' }}>\n           <Switch>\n              <Route exact path=\"/\">\n                <FundReport />\n              </Route>\n              <Route exact path=\"/sales-reports\">\n                <Homepage page={'sales'}/>\n              </Route>\n              <Route exact path=\"/purchase-reports\">\n                <Homepage page={'purchase'}/>\n              </Route>\n              <Route exact path=\"/sales\">\n                <Page  page={'sales'} />\n              </Route>\n              <Route exact path=\"/purchases\">\n                <Page  page={'purchase'} />\n              </Route>\n              <Route exact path=\"/receipts\">\n                <Page  page={'receipts'} />\n              </Route>\n              <Route exact path=\"/payments\">\n                <Page  page={'payments'} />\n              </Route>\n              <Route exact path=\"/customers\">\n                <Page page={'customer'}/>\n              </Route>\n              <Route exact path=\"/vendors\">\n                <Page page={'vendor'}/>\n              </Route>\n              <Route exact path=\"/divisions\">\n                <Page page={'company'}/>\n              </Route>\n              <Route exact path=\"/items\">\n                <Page page={'item'}/>\n              </Route>\n              <Route exact path=\"/ledgers\">\n                <Page page={'ledgers'}/>\n              </Route>\n              <Route exact path=\"/groups\">\n                <Page page={'groups'}/>\n              </Route>\n            </Switch>\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button } from 'antd';\nimport CustomerForm from './Forms/CustomerForm';\nimport { deleteCustomer, getCustomers } from '../api';\nimport CustomerData from '../data/CustomerData';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { getPageName, getTitle, sweetalertMessage, sweetalertValidate } from '../util/util';\n\nconst { Title } = Typography;\n\nconst Customer = ({ page }) => {\n\n    const [customers, setCustomrs] = useState(null);\n    const [editData, setEditData] = useState(null);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n    const [filter, setFilter] = useState({});\n\n    const fetchCustomers = async () => {\n        const response = await getCustomers(page, search, (currentPage - 1) * pageSize, pageSize);\n        // console.log(response)\n        setCustomrs(response?.data?.entity.rows);\n        setTotal(response?.data?.entity.count);\n    }\n\n    useEffect(() => {\n        fetchCustomers();\n    },[page, currentPage, pageSize, search]);\n\n\n    const onEdit = (data) => {\n        setEditData({...data})\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            const response = await deleteCustomer(data.id);\n            if(response?.data?.status){\n                sweetalertMessage('Succesfully Deleted')\n            }\n            else{\n                sweetalertValidate('OOPS!! Something went wrong')\n            }\n            fetchCustomers();\n        } \n    }\n\n    const fieldData = CustomerData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {getTitle(column, page)}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px',\n        render: (value, data) => {\n            if(column.name === 'companyId'){\n                return `${data.company.division} - ${data.company.name}` \n            }\n            return value\n        }\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    const initpageSizeOptions = [10, 20, 50, 100];\n    const pageSizeOptions = [];\n    while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n        pageSizeOptions.push(initpageSizeOptions[0] + '');\n        initpageSizeOptions.shift();\n    }\n    if(total > 10) pageSizeOptions.push( total + '');\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const handlePageSizeChange = (current, size) => {\n        setPageSize(size);\n        setCurrentPage(1);\n    };\n\n    return (\n        <div>\n            <div className=\"site-layout-background p-5\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{editData ? 'Edit' : 'Add'} {getPageName(page)} { editData ? `(${editData.name})`: '' }</Title>\n                <CustomerForm data={editData} callback={fetchCustomers} setEditData={setEditData}/>\n            </div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{getPageName(page)}</Title>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={customers} \n                            columns={columns}\n                            bordered\n                            pagination={{ \n                                position: ['bottomRight', 'topRight'], \n                                pageSizeOptions,\n                                ocurrent: currentPage,\n                                pageSize: pageSize,\n                                onChange: handlePageChange,\n                                onShowSizeChange: handlePageSizeChange,\n                                total,\n                                showSizeChanger: true\n                             }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </div>\n    );\n};\n\nexport default Customer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}