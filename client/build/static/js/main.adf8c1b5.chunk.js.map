{"version":3,"sources":["components/common/InputField.js","components/common/EditableTable.js","data/CustomerData.js","components/Forms/CustomerForm.js","components/common/SelectField.js","api/index.js","data/InvoiceData.js","data/InvoiceFormData.js","components/Forms/InvoiceForm.js","data/ReceiptData.js","data/ItemData.js","data/CompanyData.js","data/GroupData.js","data/LedgerData.js","data/JournalData.js","data/ReceiptFormData.js","util/util.js","components/Reports.js","components/Homepage.js","components/Navbar.js","atoms/Heading.js","atoms/Text.js","images/cryptocurrency.png","images/login-bg.jpg","components/loginContent.js","atoms/InputLabel.js","atoms/InputField.js","atoms/Button.js","components/loginForm.js","lib/react-otp-input.jsx","components/OtpComponent.js","components/otpScreen.js","components/LoginTemplate.js","data/FundData.js","components/FundReport.js","components/Modal/InvoiceDetailModal.js","components/Modal/FilterModal.js","components/Modal/SelectedFilters.js","components/Invoices.js","components/CSVComponent/ListValidationErrors.js","atoms/Card.js","components/CSVComponent/ProcessCsvStructure.js","components/CSVComponent/CSVComponent.js","components/CSVComponent/DownloadCsv.js","molecules/IconWithHeading.js","components/UploadForm.js","components/common/EditTable.js","data/JournalFormData.js","components/Forms/JournalForm.js","components/Page.js","App.js","components/Customer.js","index.js"],"names":["InputField","label","lcol","icol","placeholder","inputProps","span","className","EditableRow","index","props","EditableCell","title","editable","children","dataIndex","record","handleSave","items","handleTaxInput","restProps","onSave","name","value","taxRow","total","parseFloat","newValues","categoryName","itemId","rate","itemCode","code","childNode","onChange","e","target","showSearch","optionFilterProp","showArrow","filterOption","input","option","toLowerCase","indexOf","filterSort","optionA","optionB","localeCompare","Object","values","map","ele","Option","id","style","paddingRight","fontSize","EditableTable","setTransactions","transactions","notEditable","invoiceDetails","setParentTaxableRows","useState","dataSource","setDataSource","useEffect","numberRender","number","data","toLocaleString","defaultColumns","width","render","push","_","onConfirm","key","newData","filter","item","handleDelete","row","findIndex","splice","staticRowCount","igstRow","fieldName","igst","cgstRow","cgst","sgstRow","sgst","cess","roundOff","taxaRowsData","setTaxRowsData","_obj","components","body","cell","columns","col","onCell","__","exceptionRows","includes","colSpan","taxableAmount","reduce","taxSum","taxableRow","totalRow","totalValue","onClick","uuid","quantity","type","marginBottom","rowClassName","bordered","pagination","CustomerData","inputType","list","getData","a","getCompanies","res","console","log","entity","rows","company","division","CustomerForm","callback","setEditData","page","FieldData","getFieldData","initialData","previous","field","formData","setFormData","onSelectChange","filterDependentMaster","listName","fetchData","dependentFieldName","setMasterData","masterData","populateParentMaster","selectFieldList","initialMasterData","fetchCompanies","setDivisions","newMasterData","length","onSubmit","close","finalData","updateApiFn","response","status","swal","createApiFn","reset","replace","eval","text","icon","Select","SelectField","property","selected","cookies","Cookies","getAuth","get","setAuth","authObject","set","JSON","stringify","path","removeAuth","remove","UrlParamsReplace","url","params","queryParams","urlWithPrefix","keys","forEach","queryParamsWithoutNull","undefined","urlSearchParams","URLSearchParams","toString","window","location","hostname","API","axios","create","baseURL","getHeaders","token","userLogin","mobileNumber","post","userSession","otp","createSalesInBulk","sales","headers","createReceiptsInBulk","receipts","getAllInvoices","search","offset","limit","filters","getInvoiceById","invoiceId","createInvoice","invoice","updateInvoice","put","deleteInvoice","delete","getReports","getFundsReports","reportType","date","month","year","getAllReceipts","deleteReceipt","createReceipt","updateReceipt","createCompany","updateCompany","deleteCompany","getCustomers","createCustomer","customer","updateCustomer","deleteCustomer","getItems","createItem","updateItem","deleteItem","_get_","entityName","_create_","_update_","_delete_","InvoiceData","InvoiceFormData","InvoiceForm","invoiceDate","moment","format","labourCharges","claimAmount","tcs","customers","setCustomers","divisions","setItems","customerType","companyId","resC","result","element","found","find","c","sweetalertValidate","customerId","t","additinalField","fN","setTaxableRows","taxableRows","ReceiptData","ItemData","CompanyData","GroupData","LedgerData","group","JournalData","ReceiptFormData","companyIds","customerIds","invoiceNumber","cust","nature","toUpperCase","slice","invoices","message","buttons","cancel","visible","closeModal","confirm","sweetalertMessage","sweetalertOkCancel","confirmFunction","cancelFunction","then","isConfirm","r","Math","random","getDateWithTime","h","m","s","mo","toDate","getTitle","column","getPageName","mappingData","customerName","customerCode","companyName","ledgerNames","journalLedgers","l","ledger","getApiFn","isUploadButton","deleteApiFn","Title","Typography","Reports","actualMonths","divisionReports","setDivisonReports","companyReports","setCompanyReports","financialYearMonths","getMonthNamesForFinancialYear","divisionMap","companyMap","monthStr","taxable_amount","divisionRows","companyRows","monthCols","getColums","Text","ellipsis","showDataInTable","columnsCompany","level","color","rowKey","Date","getTime","months","currentDate","currentMonth","getMonth","currentYear","getFullYear","i","yearSuffix","Homepage","margin","Item","Navbar","collapsed","activeMenu","setActiveMenu","screenSize","setScreenSize","handleResize","innerWidth","addEventListener","removeEventListener","defaultSelectedKeys","pathname","to","MenuOutlined","theme","mode","defaultOpenKeys","subMenuOpenDelay","SubMenu","HomeOutlined","BarChartOutlined","PieChartOutlined","FileExcelOutlined","FundOutlined","MoneyCollectOutlined","StrikethroughOutlined","DatabaseOutlined","UsergroupAddOutlined","PayCircleOutlined","BankOutlined","OrderedListOutlined","Heading","properties","HeadingVariants","h1","h2","h3","h4","h5","h6","Type","whiteSpace","LoginContent","loginContentHeading","loginContentDesc","src","height","alt","bg","layout","objectFit","InputLabel","labelFor","variant","textColor","fontWeight","labelDisable","htmlFor","small","medium","large","disabled","error","isRequired","register","maxLength","borderColor","borderRadius","defaultValue","onChangeValue","inputLength","getValues","normal","outline","outlineBottom","inputValue","Button","padding","btnClass","imgClassName","imgSrc","imgWidth","imgHeight","imgAlt","form","buttonRef","primaryBtn","outlineBtn","normalBtn","secondaryBtn","ref","LoginForm","loginDetails","apierror","setDisabled","setError","preventDefault","event","isStyleObject","obj","SingleOtpInput","getClasses","classes","join","getType","isInputSecure","isInputNum","React","createRef","this","focus","shouldAutoFocus","inputEl","current","prevProps","select","separator","isLastChild","inputStyle","isDisabled","hasErrored","errorStyle","focusStyle","disabledStyle","rest","display","alignItems","autoComplete","assign","textAlign","PureComponent","OtpInput","state","activeInput","getOtpValue","split","getPlaceholderValue","numInputs","handleOtpChange","isInputValueValid","isNaN","parseInt","trim","focusInput","max","min","setState","focusNextInput","focusPrevInput","changeCodeAtFocus","handleOnPaste","nextActiveInput","pastedData","clipboardData","pos","shift","handleOnChange","handleOnKeyDown","keyCode","handleOnInput","nativeEvent","renderInputs","inputs","dataCy","dataTestId","onKeyDown","onInput","onPaste","onFocus","onBlur","containerStyle","Component","defaultProps","OtpComponent","otpValue","errorMessage","border","marginRight","lineHeight","OtpScreen","handleLogin","editMobile","resendOtp","setOtp","timer","setTimer","useCallback","currTimer","EditOutlined","LoginTemplate","apiError","setApiError","step","setLoginDetails","handleGetOTP","countryCode","reload","prevState","defaultValues","renderSwitch","FundData","FundReport","asOnReports","setAsOnReports","monthReports","setMonthReports","setDate","setMonth","dataMap","company_id","fundAvailable","obj_","toatalCollection","total_amount_for_date","total_amount_for_month_and_year","toatlPayment","getRender","InvoiceDetailsModal","setVisible","setInvoiceDetails","fetchInvoicesDetails","top","keyboard","onCancel","footer","customerData","milk","getDates","dates","fromDate","RangePicker","DatePicker","FilterModal","onOk","dateRange","setDateRange","setComapnyIds","setCustomerIds","handleOk","getOptions","fetchCustomers","dateRender","allowClear","SelectedFilters","onRemoveFilter","show","nameMap","checkFunction","closable","onClose","handleClose","Invoices","setReload","setInvoices","visibleID","setVisibleID","selectedInvoiceId","setSelectedInvoiceId","currentPage","setCurrentPage","pageSize","setPageSize","setTotal","setSearch","setFilter","visibleFilter","setVisibleFilter","fetchInvoices","getApi","count","onDelete","deleteApi","openInvoiceDetail","onEdit","DeleteOutlined","initpageSizeOptions","pageSizeOptions","position","onShowSizeChange","size","showSizeChanger","ListValidationErrors","tableData","invalidHeader","setHasErrors","setRecord","reason","convertToUl","idx","processReason","invalidColumn","Card","cardClass","cardWidth","cardBg","cardBorder","cardBorderColor","cardRadius","cardPadding","cardShadow","cardHeight","ProcessCsvStructure","acceptedFile","onValidate","resetUploadedCsv","setCsvArray","setCsvErrors","dataKeysMap","readString","validateButtonRef","usePapaParse","keysMap","validateFieldNames","readCsvData","alert","invalidHeaders","newCsv","acc","renameKeys","handleReadString","onSuccess","emptyUploadedCsv","worker","header","skipEmptyLines","complete","results","handleCsvEmpty","CSVComponent","validateBulkCreation","hasErrors","csvErrors","csvArray","setInvalidHeader","CSVReader","useCSVReader","buttonRefCancel","useRef","csvFileData","setCsvFileData","click","onUploadAccepted","getRootProps","getRemoveFileProps","ProgressBar","RemoveFile","FileProtectOutlined","DownloadCsv","sampleData","fileName","useCSVDownloader","CSVDownloader","filename","bom","config","delimiter","IconWithHeading","headingChildren","textChildren","getIcon","onIconClick","headingStyle","BulkUploadForm","setValidatedData","handleBulkCreation","csvData","createApi","csvErrorArray","getDataKeysMap","GlobalOutlined","ledgers","ledgerId","ledgerCode","altValues","dr","cr","EditTable","columnData","Result","JournalFormData","JournalForm","dated","description","setLedgers","fetchLedgers","journalLedger","amount","jounalLedgers","sumData","sumDr","sumCr","RestOutlined","PlusOutlined","Page","upload","setUpload","showAdd","setShowAdd","editData","CloseCircleOutlined","PlusCircleOutlined","UploadOutlined","setTimeout","document","getElementById","scrollIntoView","Header","Layout","Content","Sider","Footer","App","setCollapsed","collapsible","onCollapse","float","NotificationOutlined","MailOutlined","UserOutlined","AppstoreOutlined","overflowY","exact","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.adf8c1b5.chunk.js","sourcesContent":["import { Col, Row } from \"antd\";\n\nconst InputField = ({label , lcol , icol, placeholder, ...inputProps }) => {\n    return (\n        <>\n            \n                <Col span={lcol? lcol : 4} className=\"mb-3\">\n                    <label className=\"block font-semibold mt-5 text-right mr-10\">{label}</label>\n                </Col>\n                <Col span={icol ? icol : 8} className=\"mb-3\">\n                    <input {...inputProps} placeholder={placeholder? placeholder : label} className=\"w-full py-2 px-2 mt-2 border-2\"/>\n                </Col>\n            \n            \n        </>\n    )\n}\n\nexport default InputField;","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Button, Form, Input, Popconfirm, Select, Table } from 'antd';\nimport { uuid } from '../../util/util';\n\nconst EditableRow = ({ index, ...props }) => {\n  return (\n      <tr {...props} />\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  items,\n  handleTaxInput,\n  ...restProps\n}) => {\n  \n\n\n  const onSave = (name, value) => {\n    if(!record.taxRow){\n      let newValues = {};\n      if( dataIndex === 'categoryName'){\n          newValues = { categoryName: items[value].name, itemId: value, rate: null, itemCode: items[value].code };\n      }\n      else{\n        newValues = { [dataIndex]: value == '' ? 0 : parseFloat(value) };\n      }\n     \n    \n      handleSave({ ...record, ...newValues });\n    }\n    else{\n      handleTaxInput({ ...record, total:  value == '' ? 0 : parseFloat(value) });\n    }\n    \n  }\n\n    let childNode = children;\n    \n    let edit = false;\n    if(dataIndex == 'total' && editable){\n      edit = true;\n    }\n    else{\n      edit = editable  && !record.taxRow;\n    }\n    if (edit) {\n        //childNode = editing ? (\n        //if(dataIndex == 'total') console.log(record, record[dataIndex]);\n        childNode = record.categoryName != 'Total Amount' && record.categoryName != 'Taxable Value'?  ( \n            <>{ dataIndex !== 'categoryName' ? \n                <Input className=\"w-full\" onChange={(e) => onSave(dataIndex, e.target.value)} value={record[dataIndex]}/> :\n                <Select\n                    placeholder={'Select Items'}\n                    showSearch\n                    optionFilterProp=\"children\"\n                    showArrow={false}\n                    value={record?.itemId}\n                    onChange={(value) => onSave(dataIndex, value)}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                    filterSort={(optionA, optionB) =>\n                        optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                    }\n                    key={'itemId'}\n                    className=\"w-full\"\n                >\n                    { Object.values(items).map((ele,index) => <Option value={ele.id} key={index}>{ ele.name}</Option>) }\n                </Select>\n            }\n        </>) : (\n        <div\n            className=\"editable-cell-value-wrap font-bold\"\n            style={{\n              paddingRight: 24,\n              fontSize: '16px',\n            }}\n        >\n            {children}\n        </div>\n        );\n    }\n\n    return <td {...restProps}>{childNode}</td>;\n};\n\nconst EditableTable = ({ setTransactions, transactions, items, notEditable, invoiceDetails, setParentTaxableRows }) => {\n  const [dataSource, setDataSource] = useState([]);\n\n  useEffect(() => {\n    setDataSource(transactions || []);\n  },[transactions])\n\n  const handleDelete = (key) => {\n    const newData = dataSource.filter((item) => item.key !== key);\n    // console.log('handleDelete', newData);\n    setDataSource(newData);\n    setTransactions(newData);\n  };\n\n  const numberRender = (number, data) => {\n    return (\n        <div>\n            { number ? number.toLocaleString('en-IN') : number } \n        </div>\n    )\n  }\n\n  const defaultColumns = [\n    {\n      title: 'Item Name',\n      dataIndex: 'categoryName',\n      width: '35%',\n      editable: !notEditable\n    },\n    {\n      title: 'Item Code',\n      dataIndex: 'itemCode',\n      width: '15%'\n    },\n    // {\n    //   title: 'Taxable Value',\n    //   dataIndex: 'rate',\n    //   width: '10%',\n    //   editable: !notEditable,\n    //   render: numberRender\n    // },\n    {\n      title: 'Quantity',\n      dataIndex: 'quantity',\n      width: '10%',\n      editable: !notEditable\n    },\n    {\n      title: 'Taxable Value',\n      dataIndex: 'total',\n      width: '20%',\n      render: numberRender,\n      editable: !notEditable\n    },\n  ];\n\n  if(!notEditable){\n    defaultColumns.push({\n      title: 'Action',\n      dataIndex: 'operation',\n      width: '5%',\n      render: (_, record) =>\n       !record.taxRow && (\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n            <a>Delete</a>\n          </Popconfirm>\n        ),\n    })\n  }\n\n  const handleAdd = () => {\n    const newData = {\n      key: uuid(),\n      categoryName: `Select Item`,\n      rate: '0',\n      quantity: `0`,\n      total: 0,\n    };\n    setDataSource([...dataSource, newData]);\n  };\n\n  const handleSave = (row) => {\n    const newData = [...dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    // setDataSource(newData);\n    setTransactions(newData);\n  };\n\n  // console.log(invoiceDetails, notEditable)\n  let staticRowCount = 2;\n  const igstRow = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `IGST`,\n    taxRow: true,\n    fieldName: 'igst',\n    total: invoiceDetails.igst || 0 \n  }\n\n  const cgstRow = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `CGST`,\n    taxRow: true,\n    fieldName: 'cgst',\n    total: invoiceDetails.cgst || 0\n  }\n\n  const sgstRow = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `SGST`,\n    taxRow: true,\n    fieldName: 'sgst',\n    total: invoiceDetails.sgst || 0\n  }\n\n  const cess = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `Cess`,\n    taxRow: true,\n    fieldName: 'cess',\n    total: invoiceDetails.cess || 0\n  }\n\n  const roundOff = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `Round Off`,\n    taxRow: true,\n    fieldName: 'roundOff',\n    total: invoiceDetails.roundOff || 0\n  }\n\n  const [taxaRowsData, setTaxRowsData] = useState([igstRow, cgstRow, sgstRow, cess, roundOff]);\n  useEffect(()=> {\n    setTaxRowsData([ ...taxaRowsData.map((_obj) => ({ ..._obj,  total: invoiceDetails[_obj.fieldName] || 0 }))]);\n  }, [invoiceDetails])\n\n  const handleTaxInput = (row) => {\n    const newData = [...taxaRowsData];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    setTaxRowsData(newData);\n    setParentTaxableRows(newData);\n  };\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n  const columns = defaultColumns.map((col) => {\n\n    return {\n      ...col,\n      onCell: (record, index) => {\n        let __ = {};\n        const exceptionRows = ['Total Amount', 'Taxable Value', 'IGST', 'CGST', 'SGST', 'Cess', 'Round Off'];\n        if(exceptionRows.includes(record.categoryName) && col.dataIndex == 'categoryName' ){\n          __ = {\n            colSpan: 3\n          }\n        }\n\n        if(exceptionRows.includes(record.categoryName) &&  (col.dataIndex == 'quantity' || col.dataIndex == 'rate' || col.dataIndex == 'itemCode') ){\n          __ = {\n            colSpan: 0\n          }\n        }\n        if (!col.editable) {\n          return __;\n        }\n        \n        return ({\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave,\n            items,\n            handleTaxInput,\n            ...__\n          })\n        },\n    };\n  });\n\n  \n\n  const taxableAmount = dataSource.reduce((total, record) => total + record.total, 0 );\n  const taxSum = taxaRowsData.reduce((total, record) => total + parseFloat(record.total || 0) , 0 );\n  const taxableRow = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `Taxable Value`,\n    total: notEditable ? invoiceDetails.taxableAmount : taxableAmount,\n    render: numberRender,\n    taxRow: true,\n  }\n\n\n  const totalRow = {\n    key: 'taxRow' + staticRowCount++,\n    categoryName: `Total Amount`,\n    taxRow: true,\n    total: notEditable ? invoiceDetails.totalValue  : (taxableAmount + taxSum) \n  }\n\n  // console.log(taxaRowsData);\n  return (\n    <div>\n      { !notEditable ? \n        <Button\n          onClick={handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        > \n        Add a item\n      </Button> : null }\n      <Table\n        components={components}\n        rowClassName={() => 'editable-row'}\n        bordered\n        dataSource={[...dataSource,taxableRow, ...taxaRowsData, totalRow]}\n        columns={columns}\n        pagination={false}\n      />\n    </div>\n  );\n};\n\nexport default EditableTable;","import { getCompanies } from \"../api\";\n\nconst CustomerData = [\n    {\n        label : \"Customer Code\",\n        name: 'code',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Customer Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Mobile\",\n        name: 'mobile',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Division\",\n        name: 'companyId',\n        type: 'select',\n        inputType: 'text',\n        list: \"divisions\",\n        getData: async () => {\n            const res = await getCompanies();\n            console.log(res);\n            return res.data.entity?.rows.map((company) => ({\n                value: company.id,\n                label: `${company.division} - ${company.name}`\n            }))\n        }\n    },\n    {\n        label : \"GST Number\",\n        name: 'gstNumber',\n        type: 'input',\n        inputType: 'text',\n    }\n];\n\nexport default CustomerData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport InputField from '../common/InputField';\nimport { createCustomer, getCompanies, updateCustomer } from '../../api'; \nimport swal from 'sweetalert';\nimport SelectField from '../common/SelectField';\nimport { PlusOutlined, RestOutlined } from '@ant-design/icons';\nimport { createApiFn, getFieldData, updateApiFn } from '../../util/util';\n\n\nconst CustomerForm = ({ data , callback, setEditData, page }) => {\n\n    const FieldData = getFieldData(page, 'form_data');\n    const initialData = FieldData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    const [formData, setFormData] = useState(initialData);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const onSelectChange = async (field, value) => {\n        let newValues = { [field.name]: value };\n        if(field.filterDependentMaster){\n            const [listName, fetchData, dependentFieldName] = field.filterDependentMaster;\n            const data = await fetchData(page, value);\n            setMasterData({ ...masterData, [listName]: data });\n            newValues = { ...newValues, [dependentFieldName]: '' }\n        }\n        if(field.populateParentMaster){\n            const newData = field.populateParentMaster(masterData, value);\n            newValues = { ...newValues, ...newData };\n        }\n\n        setFormData({...formData, ...newValues });\n    }\n\n    const selectFieldList = FieldData.filter((field) => field.type == 'select');\n    const initialMasterData = selectFieldList.reduce((previous, field) => ({...previous,[field.list]: []}),{});\n    const [masterData, setMasterData] = useState(initialMasterData);\n\n    const fetchCompanies = async () => {\n        const res = await getCompanies();\n        setDivisions(\n          res.data.entity?.rows.map((company) => ({\n            value: company.id,\n            label: `${company.division} - ${company.name}`\n          }))\n        )\n      }\n\n    useEffect(async () => {\n        \n        const newMasterData = {};\n        for (let index = 0; index < selectFieldList.length; index++) {\n            const field = selectFieldList[index];\n            newMasterData[field.list] = await field.getData(page);;\n        }\n\n        setMasterData({ ...masterData, ...newMasterData });\n        setFormData(data);\n    },[data])\n\n\n    const onSubmit = async (close) => {\n        const finalData = {\n            ...formData,\n            type: page\n        }\n\n        console.log('finalData', finalData);\n        if(data) {\n            let response = await updateApiFn(page)(data.id, finalData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(`Succesfully updated ${page} details`, \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createApiFn(page)(finalData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(`Succesfully added ${page} details`, \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        reset();\n        callback();\n    }\n\n    const reset = () => {\n        setFormData(initialData);\n        setEditData(null);\n    }\n\n    return (\n        <>\n            <div>\n                <Row>\n                    { \n                        FieldData.map((field) => field.type == 'input' ?\n                            <InputField\n                                label={page === 'vendor'? field.label.replace('Customer', 'Vendor') : field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                            /> : \n                            <SelectField\n                                label={field.label}\n                                option={eval(masterData[field.list])?.map((item) => ({ value: item.value, text: item.label}))}\n                                showSearch\n                                optionFilterProp=\"children\"\n                                value={formData ? formData[field.name] : ''}\n                                showArrow={false}\n                                onChange={async (value) => onSelectChange(field, value)}\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                                filterSort={(optionA, optionB) =>\n                                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                }\n                                key={field.name}\n                            />\n                        )\n                    }     \n                </Row>\n                <Row>\n                    <Col span={24} className='text-right'>\n                        <Button onClick={() => reset()} className='mr-4' icon={ <RestOutlined />}>\n                            Reset\n                        </Button>\n                        <Button type=\"primary\" onClick={() => onSubmit()} icon={ <PlusOutlined />} >\n                            { data ? 'Edit' : 'Add' } \n                        </Button>\n                    </Col>\n                \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default CustomerForm;\n","import { Col, Row, Select } from \"antd\";\nconst { Option } = Select;\n\nconst SelectField = ({label, lcol , icol, option, selected, ...property}) => {\n    return (\n        <>\n                <Col span={lcol? lcol : 4} className=\"mb-3\">\n                    <label className=\"block font-semibold mt-5 text-right mr-10\">{label}</label>\n                </Col>\n                <Col span={icol? icol : 8} className=\"mb-3\">\n                    <div className=\"mt-5\">\n                        <Select className=\"w-full\" placeholder={label} {...property}>\n                            { option?.map((ele,index) => <Option value={ele.value} key={index}>{ele.text}</Option>) }\n                        </Select>\n                    </div>\n                </Col> \n        </>\n    )\n}\n\nexport default SelectField","import axios from 'axios';\nimport Cookies from \"universal-cookie\";\n\nconst cookies = new Cookies();\n\nexport const getAuth = () => {\n  const auth = cookies.get(\"AUTH\");\n  return auth;\n};\n\nexport const setAuth = (authObject) => {\n  cookies.set(\"AUTH\", JSON.stringify(authObject), { path: \"/\" });\n  return authObject;\n};\n\nexport const removeAuth = () => {\n  cookies.remove(\"AUTH\", { path: \"/\" });\n  return;\n};\n\nconst UrlParamsReplace = (url, params = {}, queryParams = {}) => {\n  let urlWithPrefix = `${url}`;\n  if (params) {\n    Object.keys(params).forEach(\n      (key) => (urlWithPrefix = urlWithPrefix.replace(`:${key}`, params[key]))\n    );\n  }\n  const queryParamsWithoutNull = {};\n  if (queryParams) {\n    Object.keys(queryParams).forEach((key) => {\n      if (queryParams[key] !== undefined && queryParams[key] !== null) {\n        queryParamsWithoutNull[key] = queryParams[key];\n      }\n    });\n    const urlSearchParams = new URLSearchParams(queryParamsWithoutNull);\n    urlWithPrefix += `?${urlSearchParams.toString()}`;\n  }\n  return urlWithPrefix;\n};\n\nconst url = `http://${window.location.hostname}:8000`;\nconst API = axios.create({ baseURL : url});\nconst getHeaders = () => {\n  const auth = getAuth();\n  const headers = {\n    \"content-type\": \"application/json\",\n    \"x-access-token\": auth.token,\n  };\n  return headers;\n}\n\nexport const userLogin = (mobileNumber) => API.post('/auth/mobile/sendOTP', { mobileNumber });\nexport const userSession = (mobileNumber, otp) => API.post('/auth/mobile/user', { mobileNumber, otp });\n\nexport const createSalesInBulk = (sales, type) => API.post('/sales', { sales, type }, { headers: getHeaders() });\nexport const createReceiptsInBulk = (receipts, type) => API.post('/bulk/receipts', { receipts, type }, { headers: getHeaders() });\n\nexport const getAllInvoices = (type, search, offset, limit, filters) => API.get(UrlParamsReplace(`/invoices`, {}, { type, search, offset, limit, filters }), { headers: getHeaders() });\nexport const getInvoiceById = (invoiceId) => API.get(`/invoices/${invoiceId}`, { headers: getHeaders() });\nexport const createInvoice = (invoice) => API.post(\"/invoices\", invoice, { headers: getHeaders() });\nexport const updateInvoice = (id, invoice) => API.put(`/invoices/${id}`, invoice, { headers: getHeaders() });\nexport const deleteInvoice = (id) => API.delete(`/invoices/${id}`, { headers: getHeaders() });\n\nexport const getReports = (type) => API.get(`/reports?type=${type}`, { headers: getHeaders() });\nexport const getFundsReports = (reportType, date, month, year) => API.get(UrlParamsReplace(`/fund-reports`, {}, { reportType, date, month, year }), { headers: getHeaders() });\n\nexport const getAllReceipts = (type, search, offset, limit, filters) => API.get(UrlParamsReplace(`/receipts`, {}, { type, search, offset, limit, filters }), { headers: getHeaders() });\nexport const deleteReceipt = (id) => API.delete(`/receipts/${id}`, { headers: getHeaders() });\nexport const createReceipt = (data) => API.post(\"/receipts\", data, { headers: getHeaders() });\nexport const updateReceipt = (id, data) => API.put(`/receipts/${id}`, data, { headers: getHeaders() });\n\nexport const getCompanies = (search, offset, limit) => API.get(UrlParamsReplace(`/companies`, {}, { search, offset, limit }), { headers: getHeaders() });\nexport const createCompany = (company) => API.post(\"/companies\", company, { headers: getHeaders() });\nexport const updateCompany = (id, company) => API.put(`/companies/${id}`, company, { headers: getHeaders() });\nexport const deleteCompany= (id) => API.delete(`/companies/${id}`, { headers: getHeaders() });\n\nexport const getCustomers = (type, search, offset, limit, filters) => API.get(UrlParamsReplace(`/customers`, {}, { type, search, offset, limit, filters }), { headers: getHeaders() });\nexport const createCustomer = (customer) => API.post(\"/customers\", customer, { headers: getHeaders() });\nexport const updateCustomer = (id, customer) => API.put(`/customers/${id}`, customer, { headers: getHeaders() });\nexport const deleteCustomer= (id) => API.delete(`/customers/${id}`, { headers: getHeaders() });\n\nexport const getItems = (search, offset, limit) => API.get(UrlParamsReplace(`/items`, {}, { search, offset, limit }), { headers: getHeaders() });\nexport const createItem = (item) => API.post(\"/items\", item, { headers: getHeaders() });\nexport const updateItem = (id, item) => API.put(`/items/${id}`, item, { headers: getHeaders() });\nexport const deleteItem= (id) => API.delete(`/items/${id}`, { headers: getHeaders() });\n\nexport const _get_ = (entityName) => (search, offset, limit) => API.get(UrlParamsReplace(`/${entityName}`, {}, { search, offset, limit }), { headers: getHeaders() });\nexport const _create_ = (entityName) => (item) => API.post(`/${entityName}`, item, { headers: getHeaders() });\nexport const _update_ = (entityName) => (id, item) => API.put(`/${entityName}/${id}`, item, { headers: getHeaders() });\nexport const _delete_ = (entityName) => (id) => API.delete(`/${entityName}/${id}`, { headers: getHeaders() });\n","const InvoiceData = [\n    {\n        label : \"Invoice No.\",\n        name: 'invoiceNumber',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Invoice Date\",\n        name: 'invoiceDate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Customer Code\",\n        name: 'customerCode',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Customer Name\",\n        name: 'customerName',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Company\",\n        name: 'companyName',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Division\",\n        name: 'division',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Taxable Amount\",\n        name: 'taxableAmount',\n        inputType: 'number',\n        list: \"customerType\"\n    },\n    {\n        label : \"Total Amount\",\n        name: 'totalValue',\n        inputType: 'number',\n        list: \"customerType\"\n    }\n];\n\nexport default InvoiceData;","const InvoiceFormData = [\n    {\n        label : \"Invoice Number\",\n        name: 'invoiceNumber',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Invoice Date\",\n        name: 'invoiceDate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Customer\",\n        name: 'customerId',\n        type: 'select',\n        inputType: 'text',\n        list: \"customers\"\n    },\n    {\n        label : \"Division - Company\",\n        name: 'companyId',\n        type: 'select',\n        inputType: 'text',\n        list: \"divisions\"\n    }\n];\n\nexport default InvoiceFormData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography, Result } from 'antd';\nimport InputField from '../common/InputField';\nimport { createInvoice, getAllMilkCategories, getCompanies, getCustomers, getItems, updateInvoice } from '../../api'; \nimport swal from 'sweetalert';\nimport SelectField from '../common/SelectField';\nimport { EditOutlined, PlusOutlined, RestOutlined } from '@ant-design/icons';\nimport EditableTable from '../common/EditableTable';\nimport moment from 'moment';\nimport { sweetalertValidate } from '../../util/util';\nimport InvoiceFormData from '../../data/InvoiceFormData';\n\n\nconst InvoiceForm = ({ data , callback, setEditData, page}) => {\n    const initialData = InvoiceFormData.reduce((previous, field) => ({...previous,[field.name]: ''}),{});\n    \n\n    const [formData, setFormData] = useState({\n        ...initialData,\n        invoiceDate: moment().format('YYYY-MM-DD'),\n        transactions: [],\n        labourCharges: 0,\n        claimAmount: 0,\n        taxableAmount: 0,\n        igst: 0,\n        cgst: 0,\n        sgst: 0,\n        cess: 0,\n        roundOff: 0,\n        tcs: 0,\n        totalValue: 0\n    });\n\n    const [customers, setCustomers] = useState([]);\n    const [divisions, setDivisions] = useState([]);\n    const [items, setItems] = useState({});\n\n    const fetchData = async () => {\n        const customerType = page == 'sales' || page == 'receipts' ? 'customer' : 'vendor';\n        const res = await getCustomers(customerType);\n        // console.log('getCustomers', res);\n        setCustomers(\n            res.data.entity?.rows.map((customer) => ({\n                value: customer.id,\n                label: `${customer.code} - ${customer.name}`,\n                companyId: customer.companyId\n            }))\n        );\n\n        const resC = await getCompanies();\n        // console.log('getCompanies', res);\n        setDivisions(\n            resC.data.entity?.rows.map((company) => ({\n            value: company.id,\n            label: `${company.division} - ${company.name}`\n          }))\n        )\n\n        const response = await getItems();\n        // console.log('getItems', response);\n        setItems(response.data.entity?.rows.reduce((result, data) => ({ ...result, [data.id]: data }), {}));\n    }\n\n    useEffect(async () => {\n        await fetchData();\n        // console.log('data', data);\n        if(data){\n            const transactions =  data.transactions.map((element, index) => {\n                return ({\n                    id: element.id,\n                    key: index,\n                    itemId: element.item.id,\n                    itemCode: element.item.code,\n                    categoryName: element.item.name,\n                    rate: element.rate,\n                    quantity: element.quantity,\n                    total: element.total\n                })\n            });\n    \n            setFormData({ ...data, invoiceDate: moment(data.invoiceDate, 'DD-MM-YYYY').format('YYYY-MM-DD'), transactions});\n        }\n       \n    }, [data]);\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    const onSelectChange = (name, value) => {\n        // console.log('cust', value);\n        if(name == 'customerId'){\n            const found = customers.find((c) => c.value == value);\n            formData.companyId = found ? found.companyId : null;\n        }\n        setFormData({...formData,[name]: value});\n    }\n\n    const onSubmit = async (close) => {\n        // console.log('onSubmit', formData);\n        if(!formData.transactions || formData.transactions?.length == 0){\n            sweetalertValidate('Please insert atleast one item');\n            return;\n        }\n        if(formData.customerId == ''){\n            sweetalertValidate('Please select customer');\n            return;\n        }\n        formData.taxableAmount = formData.transactions.reduce((total,t) => total + (t.total), 0);\n        const additinalField = [\"igst\",\"cgst\",\"sgst\",\"cess\",\"roundOff\",\"tcs\"]\n        formData.totalValue = formData.taxableAmount +  additinalField.reduce((total, fN) => total + (formData[fN] ? formData[fN] : 0) , 0 );;\n        formData.type = page;\n        // console.log('formData', formData);\n        if(data){\n            let response = await updateInvoice(data.id, formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully updated invoice details\", \"success\");\n                reset();    \n                callback();\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createInvoice(formData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(\"Succesfully generated invoice details\", \"success\");\n                reset();    \n                callback();\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        \n        \n    }\n\n    const reset = () => {\n        setFormData(initialData);\n        setEditData(null);\n    }\n\n    const setTransactions = (transactions) => {\n        setFormData({...formData,'transactions': transactions});\n    }\n\n    const setTaxableRows = (taxableRows) => {\n        const data = taxableRows.reduce((result, record) => ({ ...result, [record.fieldName]: record.total }), {})\n        setFormData({...formData, ...data });\n    }\n\n    return (\n        <>\n            <div>\n                <Row>\n                { \n                        InvoiceFormData.map((field) => field.type == 'input' ?\n                            <InputField\n                                label={page === 'vendor'? field.label.replace('Customer', 'Vendor') : field.label}\n                                type={field.inputType} \n                                name={field.name}\n                                onChange={onChange}\n                                key={field.name}\n                                value={formData ? formData[field.name] : ''}\n                            /> : \n                            <SelectField\n                                label={field.label}\n                                option={eval(field.list).map((item) => ({ value: item.value, text: item.label}))}\n                                showSearch\n                                optionFilterProp=\"children\"\n                                value={formData ? formData[field.name] : ''}\n                                showArrow={false}\n                                onChange={(value) => onSelectChange(field.name, value)}\n                                filterOption={(input, option) =>\n                                    option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                                }\n                                filterSort={(optionA, optionB) =>\n                                    optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                                }\n                                key={field.name}\n                            />\n                        )\n                    }      \n                </Row>\n                <Row>\n                    <Col  span={24}>\n                        <EditableTable \n                            setTransactions={setTransactions}\n                            transactions={formData && formData.transactions}\n                            items={items}\n                            notEditable={false}\n                            invoiceDetails={formData}\n                            setParentTaxableRows={setTaxableRows}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24} className='text-right mt-5'>\n                        <Button onClick={() => reset()} className='mr-4' icon={ <RestOutlined />}>\n                            Reset\n                        </Button>\n                        <Button type=\"primary\" onClick={() => onSubmit()} icon={ data ? <EditOutlined /> : <PlusOutlined />} >\n                            { data ? 'Update Invoice' : 'Generate Invoice' } \n                        </Button>\n                    </Col>\n                \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default InvoiceForm;\n","const ReceiptData = [\n    {\n        label : \"Customer Code\",\n        name: 'customerCode',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Customer Name\",\n        name: 'customerName',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Receipt Date\",\n        name: 'receiptDate',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Nature\",\n        name: 'nature',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Receipt VIA\",\n        name: 'via',\n        inputType: 'text',\n        list: \"customerType\"\n    },\n    {\n        label : \"Invoice No.\",\n        name: 'invoiceNumber',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Company\",\n        name: 'companyName',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Division\",\n        name: 'division',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Amount\",\n        name: 'amount',\n        inputType: 'number',\n        list: \"customerType\"\n    },\n];\n\nexport default ReceiptData;","const ItemData = [\n    {\n        label : \"Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Code\",\n        name: 'code',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"UOM\",\n        name: 'uom',\n        type: 'input',\n        inputType: 'text',\n    },\n    // {\n    //     label : \"GST Rate (%)\",\n    //     name: 'gstRate',\n    //     type: 'select',\n    //     inputType: 'number',\n    //     list: 'gstRate',\n    //     defaultValue: 0\n    // }\n];\n\nexport default ItemData;","const CompanyData = [\n    {\n        label : \"Company Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Division\",\n        name: 'division',\n        type: 'input',\n        inputType: 'text'\n    },\n];\n\nexport default CompanyData;","const GroupData = [\n    {\n        label : \"Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    }\n];\n\nexport default GroupData;","import { _get_ } from \"../api\";\n\nconst LedgerData = [\n    {\n        label : \"Ledger Code\",\n        name: 'code',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Ledger Name\",\n        name: 'name',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Group\",\n        name: 'groupId',\n        type: 'select',\n        inputType: 'text',\n        list: \"groups\",\n        getData: async () => {\n            const res = await _get_('groups')();\n            return res.data.entity?.rows.map((group) => ({\n                value: group.id,\n                label: `${group.name}`\n            }))\n        }\n    },\n    {\n        label : \"Balance As On\",\n        name: 'balanceDate',\n        type: 'input',\n        inputType: 'date',\n    },\n    {\n        label : \"Balance\",\n        name: 'balance',\n        type: 'input',\n        inputType: 'number'\n    },\n];\n\nexport default LedgerData;","const JournalData = [\n    {\n        label : \"Date\",\n        name: 'dated',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Description\",\n        name: 'description',\n        type: 'input',\n        inputType: 'text'\n    },\n    // {\n    //     label : \"Ledgers\",\n    //     name: 'ledgerNames',\n    //     type: 'input',\n    //     inputType: 'text'\n    // },\n];\n\nexport default JournalData;","import { getAllInvoices, getCompanies, getCustomers } from \"../api\";\n\nconst ReceiptFormData = [\n    {\n        label : \"Date\",\n        name: 'receiptDate',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Division\",\n        name: 'companyId',\n        type: 'select',\n        inputType: 'text',\n        list: \"divisions\",\n        getData: async () => {\n            const res = await getCompanies();\n            console.log(res);\n            return res.data.entity?.rows.map((company) => ({\n                value: company.id,\n                label: `${company.division} (${company.name})`\n            }))\n        },\n        filterDependentMaster: [\n            'customers',\n            async (page, value) => {\n                const filter = { companyIds : [value] }\n                const res = await getCustomers(page === 'receipts' ? 'customer' : 'vendor', '', 0, undefined, JSON.stringify(filter));\n                console.log(res);\n                return res.data.entity?.rows.map((customer) => ({\n                    value: customer.id,\n                    label: `${customer.name} (${customer.code})`,\n                    companyId: customer.companyId\n                }))\n            },\n            'customerId'\n        ],\n    },\n    {\n        label : \"Customer\",\n        name: 'customerId',\n        type: 'select',\n        inputType: 'text',\n        list: 'customers',\n        getData: async (page, search = '') => {\n            const res = await getCustomers(page === 'receipts' ? 'customer' : 'vendor', search, 0);\n            return res.data.entity?.rows.map((customer) => ({\n                value: customer.id,\n                label: `${customer.name} (${customer.code})`,\n                companyId: customer.companyId\n            }))\n        },\n        filterDependentMaster: [\n            'invoices',\n            async (page, value) => {\n                const filter = { customerIds : [value] }\n                const res = await getAllInvoices(page === 'receipts' ? 'sales' : 'purchase', '', 0, undefined, JSON.stringify(filter));\n                console.log(res);\n                return res.data.entity?.rows.map((invoice) => ({\n                    value: invoice.id,\n                    label: invoice.invoiceNumber,\n                    companyId: invoice.companyId,\n                    customerId: invoice.customerId\n                }))\n            },\n            'invoiceId'\n        ],\n        populateParentMaster: (masterData, value) => {\n            const data = masterData.customers.find((cust) => cust.value === value);\n            return {\n                companyId: data?.companyId\n            }\n        }\n    },\n    {\n        label : \"Nature\",\n        name: 'nature',\n        type: 'select',\n        inputType: 'text',\n        list: \"natures\",\n        getData: async () => {\n            return ['advance', 'adjust'].map((nature) => ({\n                value: nature,\n                label: nature[0].toUpperCase() + nature.slice(1)\n            }))\n        },\n        populateParentMaster: (masterData, value) => {\n            if(value === 'advance')\n            return { invoiceId: '' };\n            else return {};\n        }\n    },\n    {\n        label : \"Invoice Number\",\n        name: 'invoiceId',\n        type: 'select',\n        inputType: 'text',\n        list: \"invoices\",\n        getData: async (page, search = '') => {\n            const res = await getAllInvoices(page === 'receipts' ? 'sales' : 'purchase', search, 0);\n            return res.data.entity?.rows.map((invoice) => ({\n                value: invoice.id,\n                label: invoice.invoiceNumber,\n                companyId: invoice.companyId,\n                customerId: invoice.customerId\n            }))\n        },\n        populateParentMaster: (masterData, value) => {\n            const data = masterData.invoices.find((invoice) => invoice.value === value);\n            return {\n                companyId: data?.companyId,\n                customerId: data?.customerId\n            }\n        }\n    },\n    {\n        label : \"Amount\",\n        name: 'amount',\n        type: 'input',\n        inputType: 'number',\n    },\n    {\n        label : \"VIA\",\n        name: 'via',\n        type: 'input',\n        inputType: 'text',\n    }\n];\n\nexport default ReceiptFormData;","import moment from 'moment';\nimport swal from 'sweetalert';\nimport { _create_, _delete_, _get_, _update_, createCompany, createCustomer, createItem, createReceipt, deleteCompany, deleteCustomer, deleteInvoice, deleteItem, deleteReceipt, getAllInvoices, getAllReceipts, getCompanies, getCustomers, getItems, updateCompany, updateCustomer, updateItem, updateReceipt } from '../api';\nimport ReceiptData from '../data/ReceiptData';\nimport InvoiceData from '../data/InvoiceData';\nimport CustomerData from '../data/CustomerData';\nimport ItemData from '../data/ItemData';\nimport CompanyData from '../data/CompanyData';\nimport GroupData from '../data/GroupData';\nimport LedgerData from '../data/LedgerData';\nimport JournalData from '../data/JournalData';\nimport ReceiptFormData from '../data/ReceiptFormData';\n\nexport function sweetalertValidate(message) {\n    swal({\n        text: message,\n        icon: \"error\",\n        buttons:\n        {\n            cancel: {\n                text: \"Cancel\",\n                value: null,\n                visible: false,\n                className: \"btn-sm btn-default\",\n                closeModal: true,\n            },\n            confirm: {\n                text: \"OK\",\n                value: true,\n                visible: true,\n                className: \"btn-sm btn-primary\",\n                closeModal: true\n            }\n        }\n    });\n}\n\nexport function sweetalertMessage(message) {\n    swal({\n        text: message,\n        icon: \"info\",\n        buttons:\n        {\n            cancel: {\n                text: \"Cancel\",\n                value: null,\n                visible: false,\n                className: \"btn-sm btn-default\",\n                closeModal: true,\n            },\n            confirm: {\n                text: \"OK\",\n                value: true,\n                visible: true,\n                className: \"btn-sm btn-info\",\n                closeModal: true\n            }\n        }\n    });\n}\n\nexport function sweetalertSuccess(message) {\n    swal({\n\t\ttext: \"test message\",\n\t\ticon: \"success\",\n\t\tbuttons:\n\t\t{\n\t\t\tcancel: {\n\t\t\t\ttext: \"Cancel\",\n\t\t\t\tvalue: null,\n\t\t\t\tvisible: false,\n\t\t\t\tclassName: \"btn-sm btn-default\",\n\t\t\t\tcloseModal: true,\n\t\t\t},\n\t\t\tconfirm: {\n\t\t\t\ttext: \"OK\",\n\t\t\t\tvalue: true,\n\t\t\t\tvisible: true,\n\t\t\t\tclassName: \"btn-sm btn-info\",\n\t\t\t\tcloseModal: true\n\t\t\t}\n\t\t}\n\t});\n}\n\nexport function sweetalertOkCancel(message, confirmFunction, cancelFunction) {\n    swal(\n        {\n            text: message,\n            icon: \"warning\",\n            buttons:\n            {\n                cancel: {\n                    text: \"Cancel\",\n                    value: null,\n                    visible: true,\n                    className: \"btn-sm btn-default\",\n                    closeModal: true,\n                },\n                confirm: {\n                    text: \"OK\",\n                    value: true,\n                    visible: true,\n                    className: \"btn-sm btn-danger\",\n                    closeModal: true\n                }\n            }\n        }\n    ).then(\n        function (isConfirm) {\n            if (isConfirm) {\n                confirmFunction();\n            } else {\n                cancelFunction();\n            }\n        }\n\n    );\n}\n\nexport function uuid() {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8);\n        return v.toString(16);\n    });\n}\n\nexport const getDateWithTime = (date, [h, m, s]) => {\n    const mo = moment(date);\n    mo.set(\"hour\", h);\n    mo.set(\"minute\", m);\n    mo.set(\"second\", s);\n    return mo.toDate();\n  };\n\nexport const getTitle = (column, page) => {\n    if((page == 'purchase' || page == 'payments') && (column.name == 'customerName' || column.name == 'customerCode')){\n       return column.label.replace('Customer','Vendor');\n    }\n    if(page == 'payments' && (column.name == 'receiptDate' || column.name == 'via')){\n        return column.label.replace('Receipt','Payment');\n    }\n\n    if((page == 'vendor') && (column.name == 'name' || column.name == 'code')){\n        return column.label.replace('Customer','Vendor');\n     }\n\n    return  column.label;\n}\n\nexport const getPageName = (page) => {\n    if(page === 'sales') return 'Sale Invoices';\n    if(page === 'purchase') return 'Purchase Invoices';\n    if(page === 'receipts') return 'Receipts';\n    if(page === 'payments') return 'Payments';\n    if(page === 'customer') return 'Customers';\n    if(page === 'vendor') return 'Vendors';\n    if(page === 'company') return 'Divisions';\n    if(page === 'item') return 'Items';\n    if(page === 'groups') return 'Groups';\n    if(page === 'ledgers') return 'Ledgers';\n    if(page === 'journals') return 'Journals';\n}\n\nexport const mappingData = (page, data) => {\n    const invoicePage = ['sales', 'purchase', 'receipts', 'payments']\n    if(invoicePage.includes(page)){\n        return  {\n            ...data,\n            invoiceNumber:  page == 'receipts' || page == 'payments' ? data.invoice?.invoiceNumber : data.invoiceNumber,\n            customerName: data.customer?.name,\n            customerCode: data.customer?.code,\n            companyName: data.company.name,\n            division: data.company.division\n        }\n    }\n    else if(page === 'journals'){\n        return {\n            ...data,\n            ledgerNames: data.journalLedgers.map((l) => l.ledger.name).toString()\n        }\n    }\n    else{\n        return { ...data };\n    }\n} \n\nexport const getApiFn = (page) => {\n    if(page == 'receipts' || page == 'payments'){ \n        return getAllReceipts;\n    }\n    if(page == 'purchase' || page == 'sales'){\n        return getAllInvoices;\n    }\n    if(page == 'customer' || page == 'vendor'){\n        return getCustomers;\n    }\n    if(page == 'company'){\n        return (page, search, offset, limit, filters) => getCompanies(search, offset, limit);\n    }\n\n    if(page == 'item'){\n        return (page, search, offset, limit, filters) => getItems(search, offset, limit);\n    }\n    return (page, search, offset, limit, filters) => _get_(page)(search, offset, limit);\n}\n\nexport const getFieldData = (page, type) => {\n    if(page == 'receipts' || page == 'payments'){ \n        return type == 'form_data' ? ReceiptFormData : ReceiptData;\n    }\n    if(page == 'purchase' || page == 'sales'){\n        return InvoiceData;\n    }\n    if(page == 'customer' || page == 'vendor'){\n        return CustomerData;\n    }\n\n    if(page == 'company'){\n        return CompanyData;\n    }\n\n    if(page == 'item'){\n        return ItemData;\n    }\n\n    if(page == 'groups'){\n        return GroupData;\n    }\n\n    if(page == 'ledgers'){\n        return LedgerData;\n    }\n\n    if(page == 'journals'){\n        return JournalData;\n    }\n} \n\nexport const isUploadButton = (page) => {\n    if(page == 'receipts' || page == 'payments'){ \n        return true;\n    }\n    if(page == 'purchase' || page == 'sales'){\n        return true;\n    }\n    return false;\n}\n\nexport const deleteApiFn = (page) => {\n    if(page == 'receipts' || page == 'payments'){ \n        return deleteReceipt;\n    }\n    if(page == 'purchase' || page == 'sales'){\n        return deleteInvoice;\n    }\n    if(page == 'customer' || page == 'vendor'){\n        return deleteCustomer;\n    }\n\n    if(page == 'company'){\n        return deleteCompany;\n    }\n\n    if(page == 'item'){\n        return deleteItem;\n    }\n    return _delete_(page);\n}\n\nexport const createApiFn = (page) => {\n    if(page == 'customer' || page == 'vendor'){\n        return createCustomer;\n    }\n\n    if(page == 'receipts' || page == 'payments'){\n        return createReceipt;\n    }\n\n    if(page == 'company'){\n        return createCompany;\n    }\n\n    if(page == 'item'){\n        return createItem;\n    }\n    return _create_(page);\n}\n\nexport const updateApiFn = (page) => {\n    if(page == 'customer' || page == 'vendor'){\n        return updateCustomer;\n    }\n\n    if(page == 'receipts' || page == 'payments'){\n        return updateReceipt;\n    }\n\n    if(page == 'company'){\n        return updateCompany;\n    }\n\n    if(page == 'item'){\n        return updateItem;\n    }\n    return _update_(page);\n}\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Pagination } from 'antd';\nimport { getReports } from '../api';\nimport InvoiceData from '../data/InvoiceData';\nimport moment from 'moment';\n\nconst { Title } = Typography;\n\nconst Reports = ({ page }) => {\n    const actualMonths = ['January', 'February', 'March','April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n    const [divisionReports, setDivisonReports] = useState(null);\n    const [companyReports, setCompanyReports] = useState(null);\n\n    const fetchData = async () => {\n        const response = await getReports(page, '');\n        \n        console.log('response', response);\n        const data = response.data?.entity;\n        const financialYearMonths = getMonthNamesForFinancialYear(2023);\n        const divisionMap = {};\n        const companyMap = {};\n        for (let index = 0; index < data.length; index++) {\n            const element = data[index];\n            const monthStr = `${actualMonths[element.month - 1].slice(0, 3)}-${element.year.toString().slice(-2)}`\n\n            if(!divisionMap[element.division]){\n                divisionMap[element.division] = {};\n            }\n            divisionMap[element.division][monthStr] = element.taxable_amount;\n\n            if(!companyMap[element.name]){\n                companyMap[element.name] = {};\n            }\n            if(!companyMap[element.name][monthStr]){\n                companyMap[element.name][monthStr] = 0;\n            }\n            companyMap[element.name][monthStr] += element.taxable_amount;;\n        }\n\n        const divisionRows = [];\n        for (const division in divisionMap) {\n            const element = divisionMap[division];\n\n            const columns = {};\n            financialYearMonths.forEach((month) => {\n                columns[month] = element[month] ? element[month] : 0;\n            });\n            divisionRows.push({\n                division,\n                ...columns\n            })\n        }\n        setDivisonReports(divisionRows);\n\n        const companyRows = [];\n        for (const company in companyMap) {\n            const element = companyMap[company];\n\n            const columns = {};\n            financialYearMonths.forEach((month) => {\n                columns[month] = element[month] ? element[month] : 0;\n            });\n            companyRows.push({\n                company,\n                ...columns\n            })\n        }\n        setCompanyReports(companyRows);\n    }\n\n    useEffect(() => {\n        fetchData();\n    },[page]);\n\n    \n    const financialYearMonths = getMonthNamesForFinancialYear(2023);\n    const monthCols = financialYearMonths.map((month) => ({ \n        label: month, name: month,\n        render: (number, data) => {\n            return (\n                <div>\n                    { number.toLocaleString('en-IN') }\n                </div>\n            )\n        } \n    }));\n\n    const getColums = (list) => list.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n               {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px',\n        render: column.render\n    }));\n\n    const showDataInTable = (value, data) => {\n        return (\n            <div>\n                { value }\n            </div>\n        )\n    } \n\n    const divisonData = [\n        {\n            label : \"Division\",\n            name: 'division',\n            render: showDataInTable\n        },\n        ...monthCols\n    ];\n    const columns = getColums(divisonData);\n\n    const CompanyData = [\n        {\n            label : \"Company\",\n            name: 'company',\n            render: showDataInTable\n        },\n        ...monthCols\n    ];\n    const columnsCompany = getColums(CompanyData);\n\n\n    return (\n        <div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                    Reports By Division\n                </Title>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={divisionReports} \n                            columns={columns}\n                            bordered\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                    Reports By Company\n                </Title>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={companyReports} \n                            columns={columnsCompany}\n                            bordered\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </div>\n    );\n};\n\nexport default Reports;\n\nconst getMonthNamesForFinancialYear = (year) => {\n    const months = ['April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December', 'January', 'February', 'March'];\n    let financialYearMonths = [];\n    const currentDate = new Date();\n    const currentMonth = currentDate.getMonth();\n    const currentYear = currentDate.getFullYear();\n    for (let i = 0; i < months.length; i++) {\n        let month = months[i];\n        let yearSuffix = (i < 9) ? (year - 1) : year; \n        financialYearMonths.push(`${month.slice(0, 3)}-${yearSuffix.toString().slice(-2)}`);\n    }\n    \n    if(currentYear === year && currentMonth < 3){\n        financialYearMonths = financialYearMonths.slice(0, 12 - (3 - currentMonth));\n    }\n    \n    if(currentYear === year - 1 && currentMonth >= 3){\n        financialYearMonths = financialYearMonths.slice(0, currentMonth - 3);\n    }\n    \n    return financialYearMonths;\n}\n","import { Breadcrumb } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport Reports from './Reports';\n\nconst Homepage = ({ page }) => {\n\n  return (\n  <>\n      <Breadcrumb style={{ margin: '16px 0'}} className=\"text-4xl font-bold\">\n        <Breadcrumb.Item>{page == 'sales'? 'Sales' : 'Purchase'} Report</Breadcrumb.Item>\n      </Breadcrumb>\n      <Reports page={page}/>\n  </>   \n  );\n};\n\nexport default Homepage;\n\n\n\n","import React, { useState, useEffect } from 'react';\nimport { Button, Menu, Typography, Avatar } from 'antd';\nimport { Link } from 'react-router-dom';\nimport { HomeOutlined, MoneyCollectOutlined, FundOutlined, MenuOutlined, StrikethroughOutlined, FileExcelOutlined, BarChartOutlined, PieChartOutlined, DatabaseOutlined, CustomerServiceOutlined, PayCircleOutlined, UsergroupAddOutlined, BankOutlined, OrderedListOutlined } from '@ant-design/icons';\n\nconst Navbar = ({ collapsed }) => {\n  const [activeMenu, setActiveMenu] = useState(true);\n  const [screenSize, setScreenSize] = useState(undefined);\n\n  useEffect(() => {\n    const handleResize = () => setScreenSize(window.innerWidth);\n\n    window.addEventListener('resize', handleResize);\n\n    handleResize();\n\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  useEffect(() => {\n    if (screenSize <= 800) {\n      setActiveMenu(false);\n    } else {\n      setActiveMenu(true);\n    }\n  }, [screenSize]);\n\n  const defaultSelectedKeys = (() => {\n    if(window.location.pathname === '/'){\n      return ['fund-reports'];\n    }\n    return [window.location.pathname.replace('/', '')];\n  })();\n\n  return (\n    <div className=\"nav-container  h-screen\">\n      <div className=\"logo-container\">\n        <Typography.Title level={2} className=\"logo\"><Link to=\"/\">TIMWM</Link></Typography.Title>\n        <Button className=\"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined /></Button>\n      </div>\n      {activeMenu && (\n      <Menu theme=\"dark\" mode=\"inline\" defaultOpenKeys={['reports', 'master-data']} defaultSelectedKeys={defaultSelectedKeys} subMenuOpenDelay={0.2}>\n        <Menu.SubMenu key=\"reports\" title={'Reports'} icon={<HomeOutlined />}>\n          <Menu.Item  key=\"fund-reports\" icon={<BarChartOutlined />}>\n            <Link to=\"/\">Fund Reports</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"sales-reports\" icon={<BarChartOutlined />}>\n            <Link to=\"/sales-reports\">Sales Report</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"purchase-reports\" icon={<PieChartOutlined />}>\n            <Link to=\"/purchase-reports\">Purchase Report</Link>\n          </Menu.Item>\n        </Menu.SubMenu>\n        <Menu.Item icon={<FileExcelOutlined />} key='sales'>\n          <Link to=\"/sales\">Sales</Link>\n        </Menu.Item>\n        <Menu.Item icon={<FundOutlined />} key='purchases'>\n          <Link to=\"/purchases\">Purchases</Link>\n        </Menu.Item>\n        <Menu.Item icon={<MoneyCollectOutlined />} key='receipts'>\n          <Link to=\"/receipts\">Receipts</Link>\n        </Menu.Item>\n        <Menu.Item icon={<StrikethroughOutlined />} key='payments'>\n          <Link to=\"/payments\">Payments</Link>\n        </Menu.Item>\n        <Menu.Item icon={<StrikethroughOutlined />} key='journals'>\n          <Link to=\"/journals\">Journals</Link>\n        </Menu.Item>\n        <Menu.SubMenu key=\"master-data\" title={'Master Data'} icon={<DatabaseOutlined />}>\n          <Menu.Item  key=\"customers\" icon={<UsergroupAddOutlined />}>\n            <Link to=\"/customers\">Customers</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"vendors\" icon={<PayCircleOutlined />}>\n            <Link to=\"/vendors\">Vendors</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"divisions\" icon={<BankOutlined />}>\n            <Link to=\"/divisions\">Divisions</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"items\" icon={<OrderedListOutlined />}>\n            <Link to=\"/items\">Items</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"groups\" icon={<OrderedListOutlined />}>\n            <Link to=\"/groups\">Groups</Link>\n          </Menu.Item>\n          <Menu.Item  key=\"ledgers\" icon={<OrderedListOutlined />}>\n            <Link to=\"/ledgers\">Ledgers</Link>\n          </Menu.Item>\n        </Menu.SubMenu>\n      </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Heading = ({ children, type = \"h1\", className = \"\", ...properties }) => {\r\n  const HeadingVariants = {\r\n    h1: \"h1\",\r\n    h2: \"h2\",\r\n    h3: \"h3\",\r\n    h4: \"h4\",\r\n    h5: \"h5\",\r\n    h6: \"h6\",\r\n  };\r\n  const Type = HeadingVariants[type] ? HeadingVariants[type] : \"h1\";\r\n  return (\r\n    <Type className={`${className}`} {...properties}>\r\n      {children}\r\n    </Type>\r\n  );\r\n};\r\n\r\nexport default Heading;\r\n\r\nHeading.propTypes = {\r\n  type: PropTypes.string,\r\n  ClassName: PropTypes.string,\r\n  children: PropTypes.string,\r\n};\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Text = ({ className = \"\", children, whiteSpace = \"normal\", onClick }) => {\n  return (\n    <p className={`${className}`} style={{ whiteSpace }} onClick={onClick}>\n      {children}\n    </p>\n  );\n};\n\nexport default Text;\n\nText.propTypes = {\n  className: PropTypes.string,\n  children: PropTypes.string,\n  whiteSpace: PropTypes.string,\n};\n","export default __webpack_public_path__ + \"static/media/cryptocurrency.1548aced.png\";","export default __webpack_public_path__ + \"static/media/login-bg.a6a7c455.jpg\";","import React from \"react\";\nimport Heading from \"../atoms/Heading\";\nimport Text from \"../atoms/Text\";\nimport icon from '../images/cryptocurrency.png';\nimport bg from '../images/login-bg.jpg';\n\nconst LoginContent = ({ loginContentHeading, loginContentDesc }) => {\n  return (\n    <div className=\"md:min-h-screen relative p-6 py-8 md:py-16 md:px-9 overflow-hidden bg-gradient-secondary md:bg-transparent\">\n      <div className=\"relative z-10 max-w-md\">\n        <img src={icon} width=\"170\" height=\"34\" alt=\"logo\" />\n        <Heading\n          type=\"h3\"\n          className=\"text-2xl md:text-3xl md:mt-24 mt-5 mb-4 text-white\"\n        >\n          {loginContentHeading}\n        </Heading>\n        <Text className=\"text-white\">{loginContentDesc}</Text>\n      </div>\n\n      <div className=\"hidden md:block min-h-screen absolute w-full h-full top-0 left-0 z-0 login-bg\">\n        <img\n          src={bg}\n          layout=\"fixed\"\n          objectFit=\"cover\"\n          width=\"1024\"\n          height=\"1024\"\n          alt=\"login bg\"\n        />\n      </div>\n    </div>\n  );\n};\nexport default LoginContent;\n","import PropTypes from \"prop-types\";\n\nconst InputLabel = ({\n  labelFor = \"\",\n  variant = \"medium\",\n  textColor = \"text-gray-900\",\n  fontWeight = \"font-bold\",\n  className = \"block mb-2\",\n  children,\n  labelDisable = false,\n}) => {\n  const InputLabelType = {\n    small: \"small\",\n    medium: \"medium\",\n    large: \"large\",\n  };\n\n  const InputLabelStyle = {\n    small: \"text-sm\",\n    medium: \"text-base font-bold\",\n    large: \"text-lg\",\n  };\n\n  return (\n    <label\n      htmlFor={`${labelFor}`}\n      variant={InputLabelType[variant]}\n      className={`${\n        InputLabelStyle[variant]\n      } ${textColor} ${fontWeight}  ${className} ${\n        labelDisable && \"opacity-60 pointer-events-none\"\n      }`}\n    >\n      {children}\n    </label>\n  );\n};\n\nexport default InputLabel;\n\nInputLabel.propTypes = {\n  labelFor: PropTypes.string,\n  variant: PropTypes.string,\n  textColor: PropTypes.string,\n  fontWeight: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n};\n","import PropTypes from \"prop-types\";\nimport { useState } from \"react\";\nimport Text from \"./Text\";\n\nconst InputField = ({\n  disabled,\n  error,\n  isRequired,\n  register = () => {},\n  id,\n  name,\n  type,\n  maxLength = 256,\n  placeholder,\n  variant = \"outlineBottom\",\n  bg = \"bg-lightGrey\",\n  fontSize = \"text-base\",\n  borderColor = \"border-gray-200\",\n  borderRadius = \"rounded\",\n  className = \"\",\n  onClick,\n  value = \"\",\n  defaultValue,\n  onChangeValue = () => {},\n  inputLength,\n  getValues,\n\n}) => {\n  const inputStyleType = {\n    normal: \"normal\",\n    outline: \"outline\",\n    outlineBottom: \"outlineBottom\",\n    error: \"error\",\n  };\n\n  const inputStyle = {\n    normal: \"border-0\",\n    outline: \"border-gray-200\",\n    outlineBottom: \"border-b-gray-400\",\n    error: \"border-error border-b-error\",\n  };\n\n  return (\n    <div className=\"w-full mb-6\">\n      <input\n        id={id}\n        type={type}\n        name={name}\n        placeholder={placeholder}\n        variant={inputStyleType[variant]}\n        className={`${\n          inputStyle[variant]\n        } w-full border text-gray-900 h-12 px-4 outline-none placeholder:text-grey-400 ${bg} ${borderRadius} ${fontSize} ${className} ${\n          disabled && \"opacity-60 pointer-events-none\"\n        } ${error ? \" border border-error border-b-error\" : \"\"}`}\n        disabled={disabled !== undefined ? disabled : false}\n        maxLength={maxLength}\n        onChange={(e) => {\n          onChangeValue(e);\n        }}\n        defaultValue={defaultValue}\n      />\n      {error && (\n        <div className=\"text-sm text-error pt-1\">\n          {error.length != 0 && error.message}\n        </div>\n      )}\n      {inputLength && (\n        <Text className=\"text-xs text-gray-400 absolute bottom-2 right-2\">\n          {inputValue.length}/{inputLength}\n        </Text>\n      )}\n    </div>\n  );\n};\n\nexport default InputField;\n\nInputField.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.string,\n  variant: PropTypes.string,\n  placeholder: PropTypes.string,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  disabled: PropTypes.bool,\n  error: PropTypes.string,\n  isRequired: PropTypes.bool,\n  register: PropTypes.func,\n  maxLength: PropTypes.number,\n  bg: PropTypes.string,\n  fontSize: PropTypes.string,\n  borderColor: PropTypes.string,\n  borderRadius: PropTypes.string,\n};\n","import PropTypes from \"prop-types\";\r\n\r\nconst Button = ({\r\n  type = \"\",\r\n  children,\r\n  variant,\r\n  fontWeight = \"font-medium\",\r\n  padding = \"py-2 px-3\",\r\n  btnClass = \"\",\r\n  imgClassName = \"\",\r\n  imgSrc,\r\n  imgWidth,\r\n  imgHeight,\r\n  imgAlt = \"\",\r\n  onClick = () => {},\r\n  disabled,\r\n  form,\r\n  buttonRef\r\n}) => {\r\n  const buttonType = {\r\n    primaryBtn: \"primaryBtn\",\r\n    outlineBtn: \"outlineBtn\",\r\n    normalBtn: \"normalBtn\",\r\n    secondaryBtn: 'secondaryBtn'\r\n  };\r\n\r\n  const buttonStyle = {\r\n    primaryBtn:\r\n      \"flex items-center justify-center bg-yellow-500 rounded text-white text-base disabled:bg-primary-100 disabled:text-primary-300\",\r\n    secondaryBtn:\r\n      \"flex items-center justify-center bg-blue-500 rounded text-white text-base disabled:bg-primary-100 disabled:text-primary-300\",\r\n    outlineBtn:\r\n      \"flex items-center justify-center bg-transparent border border-gray-200 rounded text-gray-500 text-base drop-shadow-btn disabled:bg-primary-100 disabled:text-primary-300\",\r\n    normalBtn: \"flex items-center justify-center text-base\",\r\n  };\r\n\r\n  return (\r\n    <button\r\n      type={type}\r\n      variant={buttonType[variant]}\r\n      className={`${\r\n        buttonStyle[variant]\r\n      } ${fontWeight} ${padding} ${btnClass} ${imgSrc && \"pl-4 bg-red\"} `}\r\n      onClick={onClick}\r\n      disabled={disabled}\r\n      form={form}\r\n      ref={buttonRef}\r\n    >\r\n      {imgSrc ? (\r\n        <span\r\n          className={`mx-2 flex items-center flex-shrink-0 ${imgClassName}`}\r\n        >\r\n          <img\r\n            src={imgSrc}\r\n            width={imgWidth}\r\n            height={imgHeight}\r\n            alt={imgAlt}\r\n          />\r\n        </span>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\nexport default Button;\r\n\r\nButton.propTypes = {\r\n  type: PropTypes.string,\r\n  variant: PropTypes.string,\r\n  className: PropTypes.string,\r\n  fontWeight: PropTypes.string,\r\n  padding: PropTypes.string,\r\n  btnClass: PropTypes.string,\r\n  imgClassName: PropTypes.string,\r\n  imgSrc: PropTypes.string,\r\n  imgWidth: PropTypes.number,\r\n  imgHeight: PropTypes.number,\r\n  imgAlt: PropTypes.string,\r\n  children: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  disabled: PropTypes.bool,\r\n};\r\n","import React, { useEffect, useState } from \"react\";\nimport Heading from \"../atoms/Heading\";\nimport Text from \"../atoms/Text\";\nimport InputLabel from \"../atoms/InputLabel\";\nimport InputField from \"../atoms/InputField\";\nimport Button from \"../atoms/Button\";\n\nconst LoginForm = ({\n  loginDetails,\n  onSubmit,\n  apierror\n}) => {\n  const [disabled, setDisabled] = useState(\n    loginDetails.mobileNumber.length != 10\n  );\n\n  const [error, setError] = useState(apierror);\n  const handleMobileNumberChange = (event) => {\n    const val = event.target.value.toString();\n    if (val.length == 10) {\n      setDisabled(false);\n      return;\n    }\n    setDisabled(true);\n    setError('');\n  };\n  useEffect(() => {\n    setError(apierror);\n  }, [apierror])\n  console.log('error', error)\n\n  return (\n    <div className=\"md:min-h-screen flex items-center px-6 py-14 bg-white lg:pl-20 lg:pr-32\">\n      <div className=\"w-full max-w-md\">\n        <Heading type=\"h4\" className=\"mb-2 md:mb-8 font-medium\">\n          Login\n        </Heading>\n        <Text className=\"mb-6\">\n          Enter your details to get sign in to your account\n        </Text>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          const mobileNumber =  e.target[0].value;\n          console.log(mobileNumber.length, 'mobileNumber')\n           if (mobileNumber.length != 10) {\n            setError('Please enter valid mobile number');\n            return;\n          }\n          onSubmit({ mobileNumber })\n        }}>\n          <InputLabel textColor=\"text-gray-700\">Mobile Number</InputLabel>\n\n          <div className=\"mt-2 flex\">\n            <InputField\n              id=\"mobileNumber\"\n              name=\"mobileNumber\"\n              type=\"number\"\n              className=\"ml-1 rounded-none mb-0\"\n              placeholder=\"Mobile Number\"\n              maxLength={10}\n              isRequired={true}\n              onChangeValue={handleMobileNumberChange}\n              variant={\"outlineBottom\"}\n            />\n            \n          </div>\n          {error && error.length != 0 && (\n              <div className=\"text-sm text-red-700 -mt-5 mb-1\">\n                {error.length != 0 && error}\n              </div>\n            )}\n          <Text className=\"mb-16 md:mb-10 text-sm text-gray-500\">\n            {/* An OTP will be sent via sms to verify your phone number */}\n            Proceed To Enter PIN\n          </Text>\n          <Button\n            type=\"submit\"\n            variant=\"primaryBtn\"\n            fontWeight=\"font-bold\"\n            btnClass=\"w-full\"\n          >\n            Proceed\n          </Button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React, { Component, PureComponent } from 'react';\n\n// keyCode constants\nconst BACKSPACE = 8;\nconst LEFT_ARROW = 37;\nconst RIGHT_ARROW = 39;\nconst DELETE = 46;\nconst SPACEBAR = 32;\n\n// Doesn't really check if it's a style Object\n// Basic implementation to check if it's not a string\n// of classNames and is an Object\n// TODO: Better implementation\nconst isStyleObject = (obj) => typeof obj === 'object';\n\nclass SingleOtpInput extends PureComponent {\n  constructor(props) {\n    super(props);\n    this.input = React.createRef();\n  }\n\n  // Focus on first render\n  // Only when shouldAutoFocus is true\n  componentDidMount() {\n    const { focus, shouldAutoFocus } = this.props;\n    const { current: inputEl } = this.input;\n\n    if (inputEl && focus && shouldAutoFocus) {\n      inputEl.focus();\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { focus } = this.props;\n    const { current: inputEl } = this.input;\n\n    // Check if focusedInput changed\n    // Prevent calling function if input already in focus\n    if (prevProps.focus !== focus && inputEl && focus) {\n      inputEl.focus();\n      inputEl.select();\n    }\n  }\n\n  getClasses = (...classes) => classes.filter((c) => !isStyleObject(c) && c !== false).join(' ');\n\n  getType = () => {\n    const { isInputSecure, isInputNum } = this.props;\n\n    if (isInputSecure) {\n      return 'password';\n    }\n\n    if (isInputNum) {\n      return 'tel';\n    }\n\n    return 'text';\n  };\n\n  render() {\n    const {\n      placeholder,\n      separator,\n      isLastChild,\n      inputStyle,\n      focus,\n      isDisabled,\n      hasErrored,\n      errorStyle,\n      focusStyle,\n      disabledStyle,\n      shouldAutoFocus,\n      isInputNum,\n      index,\n      value,\n      className,\n      isInputSecure,\n      ...rest\n    } = this.props;\n\n    return (\n      <div className={className} style={{ display: 'flex', alignItems: 'center' }}>\n        <input\n          aria-label={`${index === 0 ? 'Please enter verification code. ' : ''}${isInputNum ? 'Digit' : 'Character'} ${\n            index + 1\n          }`}\n          autoComplete=\"off\"\n          style={Object.assign(\n            { width: '1em', textAlign: 'center' },\n            isStyleObject(inputStyle) && inputStyle,\n            focus && isStyleObject(focusStyle) && focusStyle,\n            isDisabled && isStyleObject(disabledStyle) && disabledStyle,\n            hasErrored && isStyleObject(errorStyle) && errorStyle\n          )}\n          placeholder={placeholder}\n          className={this.getClasses(\n            inputStyle,\n            focus && focusStyle,\n            isDisabled && disabledStyle,\n            hasErrored && errorStyle\n          )}\n          type={this.getType()}\n          maxLength=\"1\"\n          ref={this.input}\n          disabled={isDisabled}\n          value={value ? value : ''}\n          {...rest}\n        />\n        {!isLastChild && separator}\n      </div>\n    );\n  }\n}\n\nclass OtpInput extends Component {\n  static defaultProps = {\n    numInputs: 4,\n    onChange: (otp) => console.log(otp),\n    isDisabled: false,\n    shouldAutoFocus: false,\n    value: '',\n    isInputSecure: false,\n  };\n\n  state = {\n    activeInput: 0,\n  };\n\n  getOtpValue = () => (this.props.value ? this.props.value.toString().split('') : []);\n\n  getPlaceholderValue = () => {\n    const { placeholder, numInputs } = this.props;\n\n    if (typeof placeholder === 'string') {\n      if (placeholder.length === numInputs) {\n        return placeholder;\n      }\n\n      if (placeholder.length > 0) {\n        console.error('Length of the placeholder should be equal to the number of inputs.');\n      }\n    }\n  };\n\n  // Helper to return OTP from input\n  handleOtpChange = (otp) => {\n    const { onChange } = this.props;\n    const otpValue = otp.join('');\n\n    onChange(otpValue);\n  };\n\n  isInputValueValid = (value) => {\n    const isTypeValid = this.props.isInputNum ? !isNaN(parseInt(value, 10)) : typeof value === 'string';\n\n    return isTypeValid && value.trim().length === 1;\n  };\n\n  // Focus on input by index\n  focusInput = (input) => {\n    const { numInputs } = this.props;\n    const activeInput = Math.max(Math.min(numInputs - 1, input), 0);\n\n    this.setState({ activeInput });\n  };\n\n  // Focus on next input\n  focusNextInput = () => {\n    const { activeInput } = this.state;\n    this.focusInput(activeInput + 1);\n  };\n\n  // Focus on previous input\n  focusPrevInput = () => {\n    const { activeInput } = this.state;\n    this.focusInput(activeInput - 1);\n  };\n\n  // Change OTP value at focused input\n  changeCodeAtFocus = (value) => {\n    const { activeInput } = this.state;\n    const otp = this.getOtpValue();\n    otp[activeInput] = value[0];\n\n    this.handleOtpChange(otp);\n  };\n\n  // Handle pasted OTP\n  handleOnPaste = (e) => {\n    e.preventDefault();\n\n    const { activeInput } = this.state;\n    const { numInputs, isDisabled } = this.props;\n\n    if (isDisabled) {\n      return;\n    }\n\n    const otp = this.getOtpValue();\n    let nextActiveInput = activeInput;\n\n    // Get pastedData in an array of max size (num of inputs - current position)\n    const pastedData = e.clipboardData\n      .getData('text/plain')\n      .slice(0, numInputs - activeInput)\n      .split('');\n\n    // Paste data from focused input onwards\n    for (let pos = 0; pos < numInputs; ++pos) {\n      if (pos >= activeInput && pastedData.length > 0) {\n        otp[pos] = pastedData.shift();\n        nextActiveInput++;\n      }\n    }\n\n    this.setState({ activeInput: nextActiveInput }, () => {\n      this.focusInput(nextActiveInput);\n      this.handleOtpChange(otp);\n    });\n  };\n\n  handleOnChange = (e) => {\n    const { value } = e.target;\n\n    if (this.isInputValueValid(value)) {\n      this.changeCodeAtFocus(value);\n    }\n  };\n\n  // Handle cases of backspace, delete, left arrow, right arrow, space\n  handleOnKeyDown = (e) => {\n    if (e.keyCode === BACKSPACE || e.key === 'Backspace') {\n      e.preventDefault();\n      this.changeCodeAtFocus('');\n      this.focusPrevInput();\n    } else if (e.keyCode === DELETE || e.key === 'Delete') {\n      e.preventDefault();\n      this.changeCodeAtFocus('');\n    } else if (e.keyCode === LEFT_ARROW || e.key === 'ArrowLeft') {\n      e.preventDefault();\n      this.focusPrevInput();\n    } else if (e.keyCode === RIGHT_ARROW || e.key === 'ArrowRight') {\n      e.preventDefault();\n      this.focusNextInput();\n    } else if (e.keyCode === SPACEBAR || e.key === ' ' || e.key === 'Spacebar' || e.key === 'Space') {\n      e.preventDefault();\n    }\n  };\n\n  // The content may not have changed, but some input took place hence change the focus\n  handleOnInput = (e) => {\n    if (this.isInputValueValid(e.target.value)) {\n      this.focusNextInput();\n    } else {\n      // This is a workaround for dealing with keyCode \"229 Unidentified\" on Android.\n\n      if (!this.props.isInputNum) {\n        const { nativeEvent } = e;\n\n        if (nativeEvent.data === null && nativeEvent.inputType === 'deleteContentBackward') {\n          e.preventDefault();\n          this.changeCodeAtFocus('');\n          this.focusPrevInput();\n        }\n      }\n    }\n  };\n\n  renderInputs = () => {\n    const { activeInput } = this.state;\n    const {\n      numInputs,\n      inputStyle,\n      focusStyle,\n      separator,\n      isDisabled,\n      disabledStyle,\n      hasErrored,\n      errorStyle,\n      shouldAutoFocus,\n      isInputNum,\n      isInputSecure,\n      className,\n    } = this.props;\n\n    const inputs = [];\n    const otp = this.getOtpValue();\n    const placeholder = this.getPlaceholderValue();\n    const dataCy = this.props['data-cy'];\n    const dataTestId = this.props['data-testid'];\n\n    for (let i = 0; i < numInputs; i++) {\n      inputs.push(\n        <SingleOtpInput\n          placeholder={placeholder && placeholder[i]}\n          key={i}\n          index={i}\n          focus={activeInput === i}\n          value={otp && otp[i]}\n          onChange={this.handleOnChange}\n          onKeyDown={this.handleOnKeyDown}\n          onInput={this.handleOnInput}\n          onPaste={this.handleOnPaste}\n          onFocus={(e) => {\n            this.setState({ activeInput: i });\n            e.target.select();\n          }}\n          onBlur={() => this.setState({ activeInput: -1 })}\n          separator={separator}\n          inputStyle={inputStyle}\n          focusStyle={focusStyle}\n          isLastChild={i === numInputs - 1}\n          isDisabled={isDisabled}\n          disabledStyle={disabledStyle}\n          hasErrored={hasErrored}\n          errorStyle={errorStyle}\n          shouldAutoFocus={shouldAutoFocus}\n          isInputNum={isInputNum}\n          isInputSecure={isInputSecure}\n          className={className}\n          data-cy={dataCy && `${dataCy}-${i}`}\n          data-testid={dataTestId && `${dataTestId}-${i}`}\n        />\n      );\n    }\n\n    return inputs;\n  };\n\n  render() {\n    const { containerStyle } = this.props;\n\n    return (\n      <div\n        style={Object.assign({ display: 'flex' }, isStyleObject(containerStyle) && containerStyle)}\n        className={!isStyleObject(containerStyle) ? containerStyle : ''}\n      >\n        {this.renderInputs()}\n      </div>\n    );\n  }\n}\n\nexport default OtpInput;","import React from \"react\";\nimport OtpInput from \"../lib/react-otp-input\";\nimport Text from \"../atoms/Text\";\n\nconst OtpComponent = ({ onChange, otpValue, length, errorMessage }) => {\n  return (\n    <div className=\"otp\">\n      <OtpInput\n        isInputNum={true}\n        value={otpValue}\n        onChange={(otp) => {\n          onChange(otp);\n        }}\n        numInputs={length}\n        hasErrored={errorMessage?.length > 0}\n        placeholder={false}\n        containerStyle={{\n          fontSize: \"16px\",\n          color: \"black\",\n        }}\n        inputStyle={{\n          width: 42,\n          height: 48,\n          border: \"1px solid #E5E5EB\",\n          marginRight: 16,\n          borderRadius: \"7px\",\n          fontWeight: 400,\n          fontSize: \"18px\",\n          lineHeight: \"28px\",\n        }}\n        focusStyle={{\n          outline: \"none\",\n          border: \"1px solid #9C9CAF\",\n          color: \"#14142B\",\n        }}\n        errorStyle={{\n          border: \"1px solid #E64C4C\",\n          color: \"#E64C4C\",\n        }}\n        shouldAutoFocus={true}\n      />\n      {errorMessage && (\n        <Text className=\"text-xs font-light text-error mt-1\">\n          {errorMessage}\n        </Text>\n      )}\n    </div>\n  );\n};\n\nexport default OtpComponent;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport Heading from \"../atoms/Heading\";\nimport Text from \"../atoms/Text\";\nimport Button from \"../atoms/Button\";\nimport OtpComponent from \"./OtpComponent\";\nimport { EditOutlined } from \"@ant-design/icons\";\n\nconst OtpScreen = ({\n  handleLogin,\n  loginDetails,\n  editMobile,\n  resendOtp,\n  error,\n}) => {\n  const [otp, setOtp] = useState(\"\");\n\n  //timer logic\n  const [timer, setTimer] = useState(30);\n  const timeOutCallback = useCallback(\n    () => setTimer((currTimer) => currTimer - 1),\n    []\n  );\n  // useEffect(() => {\n  //   timer > 0 && setTimeout(timeOutCallback, 1000);\n  // }, [timer, timeOutCallback]);\n\n  const resetTimer = function () {\n    if (!timer) {\n      setTimer(30);\n    }\n  };\n\n  //events\n  const onClickLogin = (event) => {\n    event.preventDefault();\n    handleLogin(otp);\n  };\n  const handelResendOtp = () => {\n    resetTimer();\n    resendOtp();\n  };\n  return (\n    <div className=\"md:min-h-screen bg-white flex items-center px-6 py-14 lg:pl-20 lg:pr-30\">\n      <form onSubmit={onClickLogin}>\n        <Heading type=\"h4\" className=\"mb-2 md:mb-8 font-medium\">\n          Enter Your PIN {\" \"}\n          <span className=\"font-bold\">{`${loginDetails.mobileNumber}`}</span>\n          <span className=\"ml-1\">\n            <EditOutlined onClick={editMobile} />\n          </span>\n        </Heading>\n        {/* <div className=\"mb-8 md:mb-9\">\n          <Text>\n            We have just sent verification code to{\" \"}\n            <span className=\"font-bold\">{`${loginDetails.mobileNumber}`}</span>\n            <span className=\"ml-1\">\n              <EditOutlined onClick={editMobile} />\n            </span>\n          </Text>\n        </div> */}\n        <OtpComponent\n          onChange={setOtp}\n          otpValue={otp}\n          length={4}\n          errorMessage={error}\n        />\n        {timer > 0 && (\n          <Text className=\"my-8 md:my-11 text-sm text-gray-600 font-light\">\n            {/* Resend OTP in{\" \"}\n            <span className=\"text-gray-900 font-bold\">{timer}s</span> */}\n          </Text>\n        )}\n        {timer == 0 && (\n          <div onClick={handelResendOtp}>\n            <Text className=\"text-primary-900 my-8 md:my-11 cursor-pointer\">\n              Send the code again\n            </Text>\n          </div>\n        )}\n\n        <Button\n          variant=\"primaryBtn\"\n          fontWeight=\"font-bold\"\n          btnClass=\"w-full\"\n          disabled={otp.length != 4}\n          type=\"submit\"\n        >\n          Submit\n        </Button>\n      </form>\n    </div>\n  );\n};\nexport default OtpScreen;\n\n","import React, { useState } from \"react\";\nimport { setAuth, userLogin, userSession } from \"../api\";\nimport LoginContent from \"./loginContent\";\nimport LoginForm from \"./loginForm\";\nimport OtpScreen from \"./otpScreen\";\n\nconst LoginTemplate = ({}) => {\n\n  const [apiError, setApiError] = useState(null);\n  const [loginDetails, setLoginDetails] = useState({\n    step: 1,\n    mobileNumber: \"\"\n  });\n  \n  const handleGetOTP = async (data) => {\n    const res = await userLogin(data.mobileNumber);\n    if (res.data.status) {\n      setLoginDetails({\n        step: 2,\n        mobileNumber: data.mobileNumber\n      });\n      setApiError([]);\n    } else {\n      setApiError(res.data.message);\n    }\n  };\n\n  const handleLogin = async (otp) => {\n    if (otp.length == 4) {\n      const res = await userSession(\n        loginDetails.mobileNumber,\n        otp,\n        loginDetails.countryCode\n      );\n      console.log(res)\n      if (res.data.status) {\n        setAuth({\n          id: res.data.entity.id,\n          token: res.data.entity.token\n        });\n        window.location.reload(false);\n      } else {\n        setApiError(res.data.message);\n      }\n    }\n  };\n\n  const resendOtp = async () => {\n    await userLogin(loginDetails.mobileNumber);\n  };\n\n  const editMobile = () => {\n    setApiError([]);\n    setLoginDetails((prevState) => {\n      return { ...prevState, step: 1 };\n    });\n  };\n\n  const renderSwitch = () => {\n    switch (loginDetails.step) {\n      case 1:\n        return (\n          <LoginForm\n            onSubmit={handleGetOTP}\n            loginDetails={loginDetails}\n            apierror={apiError}\n            defaultValues={{ mobileNumber: loginDetails.mobileNumber }}\n          />\n        );\n      case 2:\n        return (\n          <OtpScreen\n            handleLogin={handleLogin}\n            loginDetails={loginDetails}\n            editMobile={editMobile}\n            resendOtp={resendOtp}\n            error={apiError}\n          />\n        );\n    }\n  };\n  return (\n    <div className=\"flex flex-wrap md:flex-nowrap\">\n      <div className=\"w-full md:w-55/100 shrink-0\">\n        <LoginContent />\n      </div>\n      <div className=\"w-full md:w-45/100\">{renderSwitch()}</div>\n    </div>\n  );\n};\nexport default LoginTemplate;\n","const FundData = [\n    {\n        label : \"Company\",\n        name: 'companyName',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Division\",\n        name: 'division',\n        type: 'input',\n        inputType: 'text'\n    },\n    {\n        label : \"Total Collection\",\n        name: 'toatalCollection',\n        inputType: 'number',\n        list: \"customerType\"\n    },\n    {\n        label : \"Total Payment\",\n        name: 'toatlPayment',\n        inputType: 'number',\n        list: \"customerType\"\n    },\n    {\n        label : \"Fund Available\",\n        name: 'fundAvailable',\n        inputType: 'number',\n        list: \"customerType\"\n    }\n];\n\nexport default FundData;","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Pagination } from 'antd';\nimport { getFundsReports } from '../api';\nimport moment from 'moment';\nimport FundData from '../data/FundData';\n\nconst { Title } = Typography;\n\nconst FundReport = ({ page }) => {\n    const [asOnReports, setAsOnReports] = useState(null);\n    const [monthReports, setMonthReports] = useState(null);\n    const [date, setDate] = useState(moment().format('YYYY-MM-DD'));\n    const [month, setMonth] = useState(moment().format('YYYY-MM'));\n\n    const getData = (data, reportType) => {\n        const  dataMap = {};\n        for (let index = 0; index < data.length; index++) {\n            const element = data[index];\n            \n            if(!dataMap[element.company_id]){\n                dataMap[element.company_id] = {\n                    id: element.company_id,\n                    companyName: element.name,\n                    division: element.division,\n                    fundAvailable: 0\n                };\n            }\n            const obj_ = dataMap[element.company_id];\n            if(element.type == 'receipts'){\n                obj_.toatalCollection = reportType == 'date' ? element.total_amount_for_date : element.total_amount_for_month_and_year;\n            }\n            if(element.type == 'payments'){\n                obj_.toatlPayment = reportType == 'date' ? element.total_amount_for_date : element.total_amount_for_month_and_year;\n            }\n        }\n\n        return Object.values(dataMap);\n    }\n\n    const fetchData = async (reportType) => {\n        const response = await getFundsReports(reportType, date, month.split('-')[1], month.split('-')[0]);\n        \n        console.log(response)\n        const data = response.data?.entity;\n        if(reportType == 'date'){\n            setAsOnReports(Object.values(getData(data, reportType)));\n        }\n        else{\n            setMonthReports(Object.values(getData(data, reportType)));\n        }\n        \n    }\n\n    useEffect(() => {\n        fetchData('date');\n    },[date]);\n\n    useEffect(() => {\n        fetchData('month');\n    },[month]);\n\n\n    const getRender = (column) => {\n        if(column.inputType === 'number'){\n            return {\n                render: (number, data) => {\n                    return (\n                        <div>\n                            { number ? number.toLocaleString('en-IN') : number } \n                        </div>\n                    )\n                } \n            }\n        }\n        return {};\n    }\n\n    const fieldData = FundData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {column.label}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px',\n        ...getRender(column)\n    }));\n\n\n    return (\n        <div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                    As on {<input type='date' onChange={(e) => setDate(e.target.value)} value={date}/>}\n                </Title>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={asOnReports} \n                            columns={columns}\n                            bordered\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                    Month Report {<input type='month' onChange={(e) => setMonth(e.target.value)} value={month}/>} \n                </Title>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={monthReports} \n                            columns={columns}\n                            bordered\n                            pagination={false}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </div>\n    );\n};\n\nexport default FundReport;\n\n","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport { getAllMilkCategories, getInvoiceById } from '../../api'; \nimport moment from 'moment';\nimport EditableTable from '../common/EditableTable';\n\nconst { Title } = Typography;\n\n\nconst InvoiceDetailsModal = ({ visible , setVisible , invoiceId }) => {\n    const [invoiceDetails, setInvoiceDetails] = useState({\n        transactions: []\n    });\n    const [milk, setMilks] = useState({});\n\n    const fetchInvoicesDetails = async (invoiceId) => {\n        const response = await getInvoiceById(invoiceId);\n        console.log(response);\n\n        const transactions = response?.data?.entity.transactions.map((element) => {\n            const total  = element.rate * element.quantity;\n            return ({\n                itemCode: element.item.code,\n                categoryName: element.item.name,\n                rate: element.rate,\n                quantity: element.quantity,\n                total: element.total\n            })\n        })\n\n        setInvoiceDetails({ ...response?.data?.entity, transactions});\n    }\n\n    useEffect(async () => {\n        console.log('calling', invoiceId);\n        if(invoiceId){\n            await fetchInvoicesDetails(invoiceId);\n        }\n    }, [invoiceId]);\n\n    return (\n        <>\n        <Modal\n            title={`Invoice Details`}\n            visible={visible}\n            width={\"50%\"}\n            style={{ top: 75 }}\n            keyboard={false}\n            onCancel={() => setVisible(false)}\n            footer={[]}\n        >\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Row>\n                    <Col span={18}>\n                        <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                            Customer Name : {invoiceDetails?.customer?.name}\n                        </Title>\n                    </Col>\n                    <Col span={6}>\n                        <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                            Dated : { moment(invoiceDetails?.invoiceDate).format('DD-MM-YYYY') }\n                        </Title>\n                    </Col>\n                    <Col span={12}>\n                        <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                            Invoice Number : {invoiceDetails?.invoiceNumber}\n                        </Title>\n                    </Col>\n                </Row>\n                <Row>\n                    <Col  span={24}>\n                        <EditableTable\n                            customerData={invoiceDetails && invoiceDetails.customerId && invoiceDetails?.customer}\n                            transactions={invoiceDetails && invoiceDetails?.transactions }\n                            milk={{}}\n                            notEditable={true}\n                            invoiceDetails={invoiceDetails}\n                        />\n                    </Col>\n                </Row>\n            </div>\n                   \n        </Modal>\n        </>\n    );\n};\n\nexport default InvoiceDetailsModal;","import { Modal, Input, Select, DatePicker, Button } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { getCompanies, getCustomers } from '../../api';\nimport { getDateWithTime } from '../../util/util';\nimport moment from 'moment';\n\nconst getDates = (dates) => {\n  let fromDate = null;\n  let toDate = null;\n  if (dates.length > 0) {\n    fromDate = getDateWithTime(dates[0], [0, 0, 0]);\n    toDate = getDateWithTime(dates[1], [23, 59, 59]);\n  }\n\n  return {\n    fromDate,\n    toDate\n  };\n};\n\nconst { RangePicker } = DatePicker;\nconst FilterModal = ({ visible, onOk, onCancel, page, filters }) => {\n  const [dateRange, setDateRange] = useState( filters.dateRange?.fromDate ? [moment( filters.dateRange.fromDate), moment( filters.dateRange.toDate)] : []);\n  const [companyIds, setComapnyIds] = useState(filters.companyIds ? filters.companyIds : []);\n  const [customerIds, setCustomerIds] = useState(filters.customerIds ? filters.customerIds : []);\n\n  const handleOk = () => {\n    onOk({ \n      dateRange: getDates(dateRange),\n      companyIds,\n      customerIds\n    });\n  };\n\n  const [divisions, setDivisions] = useState([]);\n  const [customers, setCustomers] = useState([]);\n\n  const getOptions = (list) => list.map((option, index) => <Option key={index} value={option.value}>{option.label}</Option>);\n\n  const fetchCompanies = async () => {\n    const res = await getCompanies();\n    // console.log('getCompanies', res);\n    setDivisions(\n      res.data.entity?.rows.map((company) => ({\n        value: company.id,\n        label: `${company.division} - ${company.name}`\n      }))\n    )\n  }\n  const fetchCustomers = async () => {\n    const customerType = page == 'sales' || page == 'receipts' ? 'customer' : 'vendor';\n    const res = await getCustomers(customerType);\n    // console.log('getCustomers', res);\n    setCustomers(\n      res.data.entity?.rows.map((customer) => ({\n        value: customer.id,\n        label: `${customer.name}`\n      }))\n    )\n  }\n  useEffect(()=> {\n    if(visible){\n      fetchCompanies();\n      fetchCustomers();\n    }\n    \n  } , [visible]);\n\n  const onClear = () => {\n    setDateRange([]);\n    setComapnyIds([]);\n    setCustomerIds([]);\n    // onCancel();\n  }\n\n  return (\n    <Modal\n      title=\"Filter\"\n      visible={visible}\n      onOk={handleOk}\n      onCancel={onCancel}\n      footer={[\n        <Button key=\"cancel\" onClick={() => onClear()}>\n            Clear Filter\n        </Button>,\n        <Button key=\"save\" type=\"primary\" onClick={() => handleOk()}>\n            Apply Filter\n        </Button>,\n        ]}\n    >\n      <label>{page == 'receipts' ? 'Receipt' : page == 'payments' ? 'Payment' : 'Invoice'} Date Range</label>\n      <RangePicker\n        style={{ width: '100%'}}\n        dateRender={(current) => {\n            const style = {};\n\n            if (current.date() === 1) {\n                style.border = '1px solid #1890ff';\n                style.borderRadius = '50%';\n            }\n\n            return (\n                <div className=\"ant-picker-cell-inner\" style={style}>\n                    {current.date()}\n                </div>\n            );\n        }}\n        onChange={(value) => setDateRange(value)}\n        value= {dateRange} \n        />\n      <br />\n      <br />\n      <label>Division</label>\n      <Select\n        placeholder=\"Divisions\"\n        allowClear\n        style={{ width: '100%'}}\n        value={companyIds}\n        onChange={setComapnyIds}\n        mode=\"multiple\"\n        filterOption={(input, option) =>\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n        filterSort={(optionA, optionB) =>\n            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n        }\n      >\n         {getOptions(divisions)}\n      </Select>\n      <br />\n      <br />\n      <label>{page == 'sales' || page == 'receipts' ? 'Customers' : 'Vendors'}</label>\n      <Select\n        placeholder=\"Customers\"\n        value={customerIds}\n        allowClear\n        style={{ width: '100%'}}\n        onChange={setCustomerIds}\n        mode=\"multiple\"\n        filterOption={(input, option) =>\n          option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n        }\n        filterSort={(optionA, optionB) =>\n            optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n        }\n      >\n        {getOptions(customers)}\n      </Select>\n    </Modal>\n  );\n};\n\nexport default FilterModal;\n","import { Tag } from 'antd';\n\n\nconst SelectedFilters = ({ filters, onRemoveFilter, page }) => {\n    let show = false;\n    if(Object.keys(filters).length > 0){\n        show = true;\n    }\n    const nameMap = {\n        dateRange: { \n            label: 'Date Range',\n            checkFunction: (data) => data.dateRange?.fromDate \n        },\n        companyIds: { \n            label: 'Divisions',\n            checkFunction: (data) => data.companyIds?.length > 0 \n        },\n        customerIds: { \n            label: 'Customers',\n            checkFunction: (data) => data.customerIds?.length > 0 \n        }\n    }\n\n    const handleClose = (key) => {\n        onRemoveFilter(key);\n    };\n    return (\n        <>\n        { show && \n            <div className='mt-5'>\n                {\n                    Object.keys(filters).filter((key) => nameMap[key].checkFunction(filters)).map((key) => (\n                        <Tag \n                            color=\"processing\"\n                            closable\n                            onClose={() => handleClose(key)} \n                        >\n                            {nameMap[key].label}\n                        </Tag>\n                    ))\n                }\n            </div>\n        }\n        </>\n    );\n};\n\nexport default SelectedFilters;","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button, Pagination, Input } from 'antd';\nimport InvoiceDetailsModal from './Modal/InvoiceDetailModal';\nimport Search from 'antd/lib/transfer/search';\nimport FilterModal from './Modal/FilterModal';\nimport SelectedFilters from './Modal/SelectedFilters';\nimport { deleteApiFn, getApiFn, getFieldData, getPageName, getTitle, mappingData, sweetalertMessage, sweetalertOkCancel, sweetalertValidate } from '../util/util';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport moment from 'moment';\n\nconst { Title } = Typography;\n\nconst Invoices = ({ page, reload, setEditData, setReload }) => {\n\n    const [invoices, setInvoices] = useState(null);\n    const [visibleID, setVisibleID] = useState(false);\n    const [selectedInvoiceId, setSelectedInvoiceId] = useState(null);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(20);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n    const [filter, setFilter] = useState({});\n    const [visibleFilter, setVisibleFilter] = useState(false);\n\n    const fetchInvoices = async () => {\n        const getApi = getApiFn(page); \n        const response = await getApi(page, search, (currentPage - 1) * pageSize, pageSize , JSON.stringify(filter));\n        \n        console.log('response', response);\n        setInvoices(response?.data?.entity.rows.map((data) => mappingData(page, data)));\n        setTotal(response?.data?.entity.count);\n    }\n\n    useEffect(() => {\n        fetchInvoices();\n    },[page, currentPage, pageSize, reload, search, filter]);\n\n    const openInvoiceDetail = (invoiceId) => {\n        setSelectedInvoiceId(invoiceId);\n        setVisibleID(true);  \n    }\n\n    const onEdit = (data) => {\n        setEditData({...data})\n    }\n\n    const  onDelete = async (data) => {\n        sweetalertOkCancel(\n            'Are you sure you want to delete ?',\n            async () => {\n                const deleteApi = deleteApiFn(page);\n                const response = await deleteApi(data.id);\n                if(response?.data?.status){\n                    sweetalertMessage('Succesfully Deleted')\n                }\n                else{\n                    console.log('err', response)\n                    sweetalertValidate('OOPS!! Something went wrong')\n                }\n                setReload(!reload);\n            },\n            () => {}\n        )\n    }\n\n    const getRender = (column, page) => {\n        return {\n            render: (value, data) => {\n                if(column.name == 'invoiceNumber'){\n                    const invoiceId =  page == 'receipts' || page == 'payments' ? data.invoice?.id : data.id;\n                    return (\n                        <div>\n                            <a onClick={() => openInvoiceDetail(invoiceId)} className='underline text-blue-900'>\n                            { value }\n                            </a>\n                        </div>\n                    )\n                }\n                if(column.inputType === 'number'){\n                    return (\n                        <div>\n                            { value ? value.toLocaleString('en-IN') : value } \n                        </div>\n                    )\n                        \n                }\n                if(column.inputType === 'date'){\n                    return (\n                        <div>\n                            { value ? moment(value).format('DD-MM-YYYY') : null } \n                        </div>\n                    )\n                        \n                }\n\n                if(column.name === 'companyId'){\n                    return `${data?.company?.division} - ${data?.company?.name}` \n                }\n\n                if(column.name === 'groupId'){\n                    return `${data?.group?.name}` \n                }\n                return value\n            }\n        };\n    }\n    const fieldData = getFieldData(page); \n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {getTitle(column, page)}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px',\n        ...getRender(column, page)\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: '100px',\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n      };\n    \n      const handlePageSizeChange = (current, size) => {\n        setPageSize(size);\n        setCurrentPage(1);\n      };\n\n    \n    const initpageSizeOptions = [10, 20, 50, 100];\n    const pageSizeOptions = [];\n    while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n        pageSizeOptions.push(initpageSizeOptions[0] + '');\n        initpageSizeOptions.shift();\n    }\n    if(total > 10) pageSizeOptions.push( total + '');\n\n    const onApplyFilter = (filterData) => {\n        setFilter(filterData);\n        setVisibleFilter(false);\n    }\n\n    const onRemoveFilter = (key) => {\n        setFilter({\n            ...filter,\n            [key]: null\n        })\n    }\n\n    return (\n        <div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >\n                    {getPageName(page)}\n                </Title>\n                <div className='mb-2'>\n                    <Row className=\"w-full\">\n                        <Col span={12}>\n                            <Input\n                                placeholder=\"Search...\"\n                                value={search}\n                                onChange={e => setSearch(e.target.value)}\n                            />\n                        </Col>\n                        <Col span={3} className='ml-5'>\n                            <Button onClick={() => setVisibleFilter(!visibleFilter)} >\n                                Filter\n                            </Button>\n                        </Col>\n                        <Col span={24}>\n                            <SelectedFilters filters={filter} onRemoveFilter={onRemoveFilter}/>\n                        </Col>\n                    </Row>\n                </div>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={invoices} \n                            columns={columns}\n                            bordered\n                            pagination={{ \n                                position: ['bottomRight', 'topRight'], \n                                pageSizeOptions,\n                                current: currentPage,\n                                pageSize: pageSize,\n                                onChange: handlePageChange,\n                                onShowSizeChange: handlePageSizeChange,\n                                total,\n                                showSizeChanger: true\n                             }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n                <InvoiceDetailsModal visible={visibleID} setVisible={setVisibleID} invoiceId={selectedInvoiceId} />\n                {visibleFilter &&\n                    <FilterModal\n                        visible={visibleFilter}\n                        onCancel={() => setVisibleFilter(false)}\n                        onOk={(data) => onApplyFilter(data)}\n                        page={page}\n                        filters={filter}\n                    />\n                }\n            </div>\n        </div>\n    );\n};\n\nexport default Invoices;\n","import { Table } from 'antd';\nimport { useEffect } from 'react';\n\nconst ListValidationErrors = ({\n    tableData, invalidHeader, setHasErrors, setRecord, record\n}) => {\n\n    const columns = [\n    {\n        title:  'ROW INDEX',\n        dataIndex: \"index\",\n        key: \"index\",\n        width: '150px',\n        render: (index) => (\n            <div className='flex flex-col' key={index + 2}>\n                <label className='font-semibold' key={index + 2}>{index + 2}</label>\n            </div>\n        ),\n    },\n    {\n        title:  'REASON',\n        dataIndex: \"reason\",\n        key: \"reason\",\n        render: (reason, data) => {\n            const convertToUl = (reason).map((item, idx) => <li key={idx}>{item}</li>);\n\n            return (\n                <ul key={data.index + 2} >{convertToUl}</ul>\n            );\n        }\n    }];\n    const processReason = () => {\n        let count = 0;\n        setRecord(count);\n        tableData.map((item) => {\n            if (item.reason.length) { count += 1; }\n        });\n        setRecord(count);\n        if ((!count) && !invalidHeader.length) setHasErrors(false);\n    };\n\n    useEffect(() => {\n        processReason();\n    }, [record]);\n\n    return (\n        <div >\n            <div className='flex-col pb-5'>\n                <label className=\"font text-md\">The following data is invalid. Please correct them and upload again.</label>\n                <ul className='pl-2 text-red-800' >\n                    {invalidHeader.length ? invalidHeader.map((item, idx) => <li key={idx}>Invalid Header : {item.invalidColumn}</li>) : ''}\n                </ul>\n                <label className=\"font text-md\">Correct the errors and upload again.</label>\n\n            </div>\n            <Table\n                dataSource={tableData}\n                columns={columns}\n                bordered\n                pagination={ {}}\n            />\n\n        </div>\n    );\n};\n\nexport default ListValidationErrors;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Card = ({\n  cardClass = \"\",\n  cardWidth = \"\",\n  cardBg = \"bg-white\",\n  cardBorder = \"border\",\n  cardBorderColor = \"border-gray-200\",\n  cardRadius = \"rounded-2xl\",\n  cardPadding = \"\",\n  cardShadow = \"\",\n  children,\n  cardHeight = \"\",\n  onClick,\n}) => {\n  return (\n    <div\n      className={`${cardWidth} ${cardHeight} ${cardBg} ${cardBorder} ${cardBorderColor} ${cardRadius} ${cardPadding} ${cardShadow} ${cardClass} `}\n      onClick={onClick}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n\nCard.propTypes = {\n  cardClass: PropTypes.string,\n  cardWidth: PropTypes.string,\n  cardBg: PropTypes.string,\n  cardBorder: PropTypes.string,\n  cardBorderColor: PropTypes.string,\n  cardRadius: PropTypes.string,\n  cardPadding: PropTypes.string,\n  cardShadow: PropTypes.string,\n};\n","import { usePapaParse } from 'react-papaparse';\nimport Button from '../../atoms/Button';\n\nconst ProcessCsvStructure = ({\n    acceptedFile, onValidate, resetUploadedCsv, setCsvArray, onCancel, setCsvErrors, setHasErrors, dataKeysMap, validateButtonRef\n}) => {\n    const { readString } = usePapaParse();\n\n    const keysMap = dataKeysMap;\n\n    const emptyUploadedCsv = (onSuccess) => {\n        if (acceptedFile === null) {\n            alert('Error !! Empty Csv file upload!');\n            resetUploadedCsv();\n            return [];\n        }\n        onSuccess();\n    };\n\n    const renameKeys = (keysMap, readCsvData) => (readCsvData.map((item) => (Object.keys(item).reduce((acc, key) => ({\n        ...acc,\n        ...{ [keysMap[key] || key]: item[key] }\n    }), {}))));\n\n    const validateFieldNames = (readCsvData) => {\n        if (readCsvData.length === 0 || (readCsvData.length > 0 && Object.keys(readCsvData[0]).length === 0)) {\n            alert('Error!! Empty Csv file upload!');\n            return null;\n        }\n\n        const invalidHeaders = [];\n        let newCsv = [];\n        Object.keys(readCsvData[0]).forEach((item) => {\n            if (!keysMap[item]) invalidHeaders.push({ invalidColumn: item });\n        });\n\n        if (invalidHeaders.length) {\n            console.log('invalidHeaders', invalidHeaders)\n            // alert('Error!! Invalid Headers in Csv file!');\n        } else {\n            newCsv = renameKeys(keysMap, readCsvData);\n            setCsvArray(newCsv);\n        }\n\n        return ({ newCsv, invalidHeaders });\n    };\n\n    const handleReadString = () => {\n        setCsvArray(null);\n        setCsvErrors([]);\n        setHasErrors(false);\n\n        emptyUploadedCsv(() => {\n            console.log('acceptedFile', acceptedFile)\n            readString(acceptedFile, {\n                worker: true,\n                header: true,\n                skipEmptyLines: true,\n                complete: (results) => {\n                    const handleCsvEmpty = validateFieldNames(results.data);\n                    console.log('results.data', results.data);\n                    if (handleCsvEmpty) {\n                        const { newCsv, invalidHeaders } = { ...handleCsvEmpty };\n                        onValidate({ newCsv, invalidHeaders });\n                    } else {\n                        onCancel();\n                    }\n                }\n            });\n        });\n    };\n    \n    return (\n        <>\n            <div className=\"flex justify-end items-center mt-5\">\n                <Button\n                    type=\"button\"\n                    variant=\"outlineBtn\"\n                    btnClass=\"text-sm font-normal py-3 px-6\"\n                    onClick={() => onCancel()}\n                >\n                    Cancel\n                </Button>\n                <Button\n                    type=\"submit\"\n                    variant=\"primaryBtn\"\n                    btnClass=\"text-sm font-normal ml-2 py-3 px-8\"\n                    onClick={() => handleReadString()}\n                >\n                    Save\n                </Button>\n            </div>\n        </>\n    );\n};\nexport default ProcessCsvStructure;\n","import { DeleteOutlined, FileProtectOutlined } from '@ant-design/icons';\nimport React, { useRef, useState } from 'react';\nimport { useCSVReader } from 'react-papaparse';\nimport Text from '../../atoms/Text';\nimport ProcessCsvStructure from './ProcessCsvStructure';\n\nconst CSVComponent = ({\n    validateBulkCreation,\n    onCancel,\n    hasErrors,\n    setHasErrors,\n    csvErrors,\n    setCsvErrors,\n    csvArray,\n    setCsvArray,\n    validateButtonRef,\n    invalidHeader,\n    setInvalidHeader,\n    record,\n    setRecord,\n    dataKeysMap\n}) => {\n    const { CSVReader } = useCSVReader();\n    const buttonRefCancel = React.useRef();\n   \n    const [csvFileData, setCsvFileData] = useState(null);\n\n    const onValidate = async ({ newCsv, invalidHeaders }) => {\n        setRecord(false);\n        //setInvalidHeader(invalidHeaders);\n\n        if (!newCsv) {\n            resetUploadedCsv();\n        }\n\n        validateBulkCreation(newCsv, invalidHeaders);\n    };\n\n    const resetUploadedCsv = () => {\n        onCancel();\n        buttonRefCancel.current?.click();\n    };\n    return (\n        <>\n            <div className='' >\n                <CSVReader onUploadAccepted={(results) => {\n                    setCsvFileData(results);\n                    setHasErrors(false);\n                    setCsvArray(null);\n                }} >\n                    {({\n                        getRootProps,\n                        acceptedFile,\n                        ProgressBar,\n                        getRemoveFileProps\n                    }) => {\n                        const RemoveFile = (\n                            <div className=\"absolute group-hover:flex hidden w-53.5 h-25  top-0 left-0 items-center justify-center before:w-full before:h-full before:left-0 before:bg-black before:opacity-70\">\n                              <div ref={buttonRefCancel} className=\"absolute cursor-pointer \" {...getRemoveFileProps()}>\n                                <DeleteOutlined />\n                              </div>\n                            </div>\n                          );\n                        return (\n                        <>\n                            <div className={`relative w-53.5 h-25 mb-2 cursor-pointer`}>\n                                <div {...getRootProps()}>\n                                    <input\n                                    className=\"shadow hidden appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n                                    />\n\n                                    <div\n                                    className={`p-2 border border-dashed bg-gray-100 border-gray-300 w-53.5 h-25 flex items-center justify-center`}\n                                    >\n                                    {!acceptedFile && (\n                                        <div className=\"text-center\">\n                                        <FileProtectOutlined />\n                                        <Text>\n                                            Drag the file or <span className=\"text-info \">Browse</span>\n                                        </Text>\n                                        </div>\n                                    )}\n                                    {acceptedFile && <div\n                                            key={acceptedFile.name}\n                                            className=\"relative w-53.5 h-25 align-middle mb-6 group flex items-center justify-center\"\n                                        >\n                                            {acceptedFile.name}\n                                            {RemoveFile}\n                                        </div>\n                                    }\n                                    </div>\n                                </div>\n                            </div>\n                            <ProcessCsvStructure\n                                csvFileData={csvFileData}\n                                acceptedFile={acceptedFile}\n                                onValidate={onValidate}\n                                getRemoveFileProps={getRemoveFileProps} \n                                resetUploadedCsv={resetUploadedCsv}\n                                setCsvArray={setCsvArray}\n                                setInvalidHeader={setInvalidHeader}\n                                onCancel={onCancel}\n                                setCsvErrors={setCsvErrors}\n                                setHasErrors={setHasErrors}\n                                dataKeysMap={dataKeysMap}\n                                validateButtonRef={validateButtonRef}\n                            />\n\n                            <div className='pb-5'>\n                                {(csvArray) && (\n                                    (hasErrors\n                                        ? (<label className=\"font text-md text-red-800 \">\n                                            {record} records needs correction. </label>)\n                                        : (<label className=\"font text-md \"> All records are valid. </label>)\n                                    ))}\n                            </div>\n                        </>\n                    )}}\n                </CSVReader>\n                </div>\n        </>\n    );\n};\n\nexport default CSVComponent;\n","import moment from \"moment\";\nimport { useCSVDownloader } from \"react-papaparse\";\n\nexport default function DownloadCsv({\n  sampleData,\n  fileName,\n  children,\n  page\n}) {\n  const { CSVDownloader, Type } = useCSVDownloader();\n  const getFileName = () => `${page}-sample-file`;\n\n  return (\n    <CSVDownloader\n      variant=\"Link\"\n      type={Type.Button}\n      filename={getFileName()}\n      bom={true}\n      config={{\n        delimiter: \",\",\n      }}\n      data={sampleData}\n    >\n      {children}\n    </CSVDownloader>\n  );\n}\n","import PropTypes from \"prop-types\";\nimport Heading from \"../atoms/Heading\";\nimport Text from \"../atoms/Text\";\n\nconst IconWithHeading = ({\n  headingChildren,\n  textChildren,\n  getIcon,\n  onIconClick,\n  headingStyle = \"\",\n}) => {\n  const myLoader = ({ src }) => src;\n  return (\n    <div\n      className={`flex items-center ${onIconClick ? \"cursor-pointer\" : \"\"}`}\n      onClick={onIconClick}\n    >\n      <div className=\"flex shrink-0 mr-2\">\n        {getIcon()}\n      </div>\n      <div>\n        <Heading type=\"h4\" className={`leading-8 ${headingStyle}`}>\n          {headingChildren}\n        </Heading>\n        {textChildren && (\n          <Text className={`text-sm font-light text-gray-500`}>\n            {textChildren}\n          </Text>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default IconWithHeading;\nIconWithHeading.propTypes = {\n  iconUrl: PropTypes.string,\n  iconAlt: PropTypes.string,\n  iconWidth: PropTypes.number,\n  iconHeight: PropTypes.number,\n  headingChildren: PropTypes.string,\n  textChildren: PropTypes.string,\n  onIconClick: PropTypes.func,\n};\n","import ListValidationErrors from \"./CSVComponent/ListValidationErrors\";\nimport Card from \"../atoms/Card\";\nimport InputLabel from \"../atoms/InputLabel\";\nimport Text from \"../atoms/Text\";\nimport CSVComponent from \"./CSVComponent/CSVComponent\";\nimport DownloadCsv from \"./CSVComponent/DownloadCsv\";\nimport IconWithHeading from \"../molecules/IconWithHeading\";\nimport { GlobalOutlined } from \"@ant-design/icons\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { createReceiptsInBulk, createSalesInBulk } from \"../api\";\nimport { sweetalertMessage, sweetalertValidate } from \"../util/util\";\n\nconst BulkUploadForm = ({ page, setReload }) => {\n\n    const [csvArray, setCsvArray] = useState(null);\n    const [csvErrors, setCsvErrors] = useState([]);\n    const [hasErrors, setHasErrors] = useState(false);\n    const [invalidHeader, setInvalidHeader] = useState([]);\n    const [record, setRecord] = useState(null);\n\n    const [validatedData, setValidatedData] = useState(false);\n\n    const validateButtonRef = useRef(null);\n\n    useEffect(() => {\n      onCancel();\n  }, [page]);\n  \n    useEffect(() => {\n        setHasErrors(true);\n    }, [csvErrors]);\n\n    const onCancel = () => {\n        setValidatedData(false)\n        setCsvArray(null);\n        setCsvErrors([]);\n        setHasErrors(false);\n        setInvalidHeader([]);\n        setRecord(null);\n    };\n\n    const handleBulkCreation = async (csvData) => {\n      console.log(csvData, 'csvData')\n        const createApi = page == 'receipts' || page == 'payments'? createReceiptsInBulk : createSalesInBulk;\n        const res = await createApi(csvData, page);\n        console.log(res, 'res')\n        if (res.data.status) {\n           if(res.data.entity.csvErrorArray){\n            setCsvErrors(res.data.entity.csvErrorArray);\n           }\n           else{\n            setCsvErrors([]);\n            setReload(true);\n            sweetalertMessage('Succesfully Uploaded')\n           }\n        } else {\n          sweetalertValidate('OOPS!! Something went wrong')\n        }\n           \n    };\n\n    const validateBulkCreation = async (csvData, invalidHeaders) => {\n        if (invalidHeaders.length > 0) {\n            setInvalidHeader(invalidHeaders);\n        } else {\n            handleBulkCreation(csvData)\n        }\n    };\n\n    const dataKeysMap = getDataKeysMap(page);\n   \n  return (\n    <div className=\"scr\">\n      <Card cardClass=\"mt-6 mb-4 flex\" cardPadding=\"px-6\">\n        <div className=\"w-2/5 py-8\">\n          <IconWithHeading\n            getIcon={() => <GlobalOutlined style={{ fontSize: '450%'}} />}\n            headingChildren=\"Bulk Upload\"\n            textChildren=\"Upload the required file\"\n          />\n          <Text className=\"pl-14 pt-4\">\n            To download a sample <b>{page}</b> file{\" \"}\n            <DownloadCsv\n              page={page}\n              sampleData={[dataKeysMap]}\n              fileName={'sample-file'}\n              children={\n                <div\n                  variant=\"Link\"\n                  className=\"text-primary-500 font-semibold text-sm mt-2\"\n                >\n                  Click here\n                </div>\n              }\n            />\n          </Text>\n        </div>\n        <div className=\"w-3/5 pl-25 py-8 mt-12\">\n          <div>\n            <InputLabel fontWeight=\"font-normal\">Upload File</InputLabel>\n            <CSVComponent\n              validateBulkCreation={validateBulkCreation}\n              handleBulkCreation={handleBulkCreation}\n              hasErrors={hasErrors}\n              setHasErrors={setHasErrors}\n              csvErrors={csvErrors}\n              setCsvErrors={setCsvErrors}\n              csvArray={csvArray}\n              setCsvArray={setCsvArray}\n              onCancel={onCancel}\n              validateButtonRef={validateButtonRef}\n              invalidHeader={invalidHeader}\n              setInvalidHeader={setInvalidHeader}\n              record={record}\n              setRecord={setRecord}\n              dataKeysMap={dataKeysMap}\n            />\n          </div>\n        </div>\n      </Card>\n\n      {hasErrors && (\n        <Card cardClass=\"mt-6 mb-4 flex\" cardPadding=\"px-6\">\n          <div className=\"w-full\">\n            <ListValidationErrors\n              tableData={csvErrors}\n              invalidHeader={invalidHeader}\n              setHasErrors={setHasErrors}\n              hasErrors={hasErrors}\n              setRecord={setRecord}\n              record={record}\n            />\n          </div>\n        </Card>\n      )}\n\n      {/* <Invoices page={page} reload={reload}/> */}\n    </div>\n  );\n};\n\nexport default BulkUploadForm;\n\nconst getDataKeysMap = (page) => {\n  if(page == 'sales'){\n    return {\n      'COMPANY': 'companyName',\n      'DIVISION': 'division',\n      'CUSTOMER NAME': 'customerName',\n      'CUSTOMER CODE': 'customerCode',\n      'GST NUMBER': 'gstNumber',\n      'DATE': 'invoiceDate',\n      'INVOICE NUMBER': 'invoiceNumber',\n      'QUANTITY': 'quantity',\n      'UOM': 'uom',\n      'ITEM CODE': 'itemCode',\n      'ITEM NAME': 'itemName',\n      \"ITEM VALUE\": 'itemValue',\n      \"LABOUR CHARGES\": \"labourCharges\",\n      \"CLAIM AMOUNT\": \"claimAmount\",\n      \"TAXABLE VALUE\": \"taxableAmount\",\n      \"IGST\": \"igst\",\n      \"CGST\": \"cgst\",\n      \"SGST\": \"sgst\",\n      \"CESS\": \"cess\",\n      \"ROUND OFF\": \"roundOff\",\n      \"TCS\": \"tcs\",\n      \"TOTAL VALUE\": \"totalValue\"\n    }\n  }\n\n  if(page == 'purchase'){\n    return {\n      'COMPANY': 'companyName',\n      'DIVISION': 'division',\n      'VENDOR NAME': 'customerName',\n      'VENDOR CODE': 'customerCode',\n      'GST NUMBER': 'gstNumber',\n      'DATE': 'invoiceDate',\n      'INVOICE NUMBER': 'invoiceNumber',\n      'QUANTITY': 'quantity',\n      'UOM': 'uom',\n      'ITEM CODE': 'itemCode',\n      'ITEM NAME': 'itemName',\n      \"ITEM VALUE\": 'itemValue',\n      \"LABOUR CHARGES\": \"labourCharges\",\n      \"CLAIM AMOUNT\": \"claimAmount\",\n      \"TAXABLE VALUE\": \"taxableAmount\",\n      \"IGST\": \"igst\",\n      \"CGST\": \"cgst\",\n      \"SGST\": \"sgst\",\n      \"CESS\": \"cess\",\n      \"ROUND OFF\": \"roundOff\",\n      \"TCS\": \"tcs\",\n      \"TOTAL VALUE\": \"totalValue\"\n    }\n  }\n\n  if(page == 'receipts'){\n    return {\n      'COMPANY': 'companyName',\n      'DIVISION': 'division',\n      'CUSTOMER NAME': 'customerName',\n      'CUSTOMER CODE': 'customerCode',\n      'INVOICE NUMBER': 'invoiceNumber',\n      'NATURE': 'nature',\n      'RECEIPT VIA': 'via',\n      'AMOUNT': \"amount\",\n      'RECEIPT DATE': \"receiptDate\"\n    }\n  }\n  if(page == 'payments'){\n    return {\n      'COMPANY': 'companyName',\n      'DIVISION': 'division',\n      'VENDOR NAME': 'customerName',\n      'VENDOR CODE': 'customerCode',\n      'INVOICE NUMBER': 'invoiceNumber',\n      'NATURE': 'nature',\n      'PAID VIA': 'via',\n      'AMOUNT': \"amount\",\n      'PAYMENT DATE': \"receiptDate\"\n    }\n  }\n\n    if(page == 'journals'){\n      return {\n        'DATE': 'dated',\n        'LEDGER': 'ledgerName',\n        'DR': 'dr',\n        'CR': 'cr',\n        'DESCRIPTION': 'description'\n      }\n  }\n}\n","import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { Button, Form, Input, Popconfirm, Result, Select, Table } from 'antd';\nimport { uuid } from '../../util/util';\n\nconst EditableRow = ({ index, ...props }) => {\n  return (\n      <tr {...props} />\n  );\n};\n\nconst EditableCell = ({\n  title,\n  editable,\n  children,\n  dataIndex,\n  record,\n  handleSave,\n  ledgers,\n  ...restProps\n}) => {\n  \n\n  const onSave = (name, value) => {\n    let newValues = {};\n    if( dataIndex === 'name'){\n        newValues = { name: ledgers[value].name, ledgerId: value, rate: null, ledgerCode: ledgers[value].code };\n    }\n    else{\n        const altValues = dataIndex === 'cr' ? { dr: '' } : { cr: '' }; \n        newValues = { [dataIndex]: value, ...altValues };\n    }\n    handleSave({ ...record, ...newValues });\n  }\n\n    let childNode = children;\n    \n    if (editable) {\n        childNode = record.name != 'Total Amount' ?  ( \n            <>{ dataIndex !== 'name' ? \n                <Input className=\"w-full\" type='number' onChange={(e) => onSave(dataIndex, e.target.value)} value={record[dataIndex]}/> :\n                <Select\n                    placeholder={'Select Items'}\n                    showSearch\n                    optionFilterProp=\"children\"\n                    showArrow={false}\n                    value={record?.ledgerId}\n                    onChange={(value) => onSave(dataIndex, value)}\n                    filterOption={(input, option) =>\n                        option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n                    }\n                    filterSort={(optionA, optionB) =>\n                        optionA.children.toLowerCase().localeCompare(optionB.children.toLowerCase())\n                    }\n                    key={'ledgerId'}\n                    className=\"w-full\"\n                >\n                    { Object.values(ledgers).map((ele,index) => <Option value={ele.id} key={index}>{ ele.name}</Option>) }\n                </Select>\n            }\n        </>) : (\n        <div\n            className=\"editable-cell-value-wrap font-bold\"\n            style={{\n              paddingRight: 24,\n              fontSize: '16px',\n            }}\n        >\n            {children}\n        </div>\n        );\n    }\n\n    return <td {...restProps}>{childNode}</td>;\n};\n\nconst EditTable = ({ columns, setDataSource, dataSource, notEditable, ledgers }) => {\n\n  const handleDelete = (key) => {\n    const newData = dataSource.filter((item) => item.key !== key);\n    setDataSource(newData);\n  };\n\n  if(!notEditable && columns.length <= 3){\n    columns.push({\n      title: 'Action',\n      dataIndex: 'operation',\n      width: '5%',\n      render: (_, record) =>\n       !record.taxRow && (\n          <Popconfirm title=\"Sure to delete?\" onConfirm={() => handleDelete(record.key)}>\n            <a>Delete</a>\n          </Popconfirm>\n        ),\n    })\n  }\n\n  const handleAdd = () => {\n    const newData = {\n      key: uuid(),\n     ...columns.reduce((result, col) => ({ ...Result, [col.dataIndex]: '' }), {})\n    };\n    setDataSource([...dataSource, newData]);\n  };\n\n  const handleSave = (row) => {\n    const newData = [...dataSource];\n    const index = newData.findIndex((item) => row.key === item.key);\n    const item = newData[index];\n    newData.splice(index, 1, { ...item, ...row });\n    setDataSource(newData);\n  };\n\n\n  const components = {\n    body: {\n      row: EditableRow,\n      cell: EditableCell,\n    },\n  };\n  const columnData = columns.map((col) => {\n    return {\n      ...col,\n      onCell: (record, index) => {\n        let __ = {};\n        if (!col.editable) {\n          return __;\n        }\n        \n        return ({\n            record,\n            editable: col.editable,\n            dataIndex: col.dataIndex,\n            title: col.title,\n            handleSave,\n            ledgers,\n            ...__\n          })\n        },\n    };\n  });\n\n  \n  return (\n    <div>\n      { !notEditable ? \n        <Button\n          onClick={handleAdd}\n          type=\"primary\"\n          style={{\n            marginBottom: 16,\n          }}\n        > \n        Add a Ledger\n      </Button> : null }\n      <Table\n        components={components}\n        rowClassName={() => 'editable-row'}\n        bordered\n        dataSource={[...dataSource]}\n        columns={columnData}\n        pagination={false}\n      />\n    </div>\n  );\n};\n\nexport default EditTable;","const JournalFormData = [\n    {\n        label : \"Date\",\n        name: 'dated',\n        type: 'input',\n        inputType: 'date'\n    },\n    {\n        label : \"Description\",\n        name: 'description',\n        type: 'input',\n        inputType: 'text'\n    },\n];\n\nexport default JournalFormData;","import React, { useEffect, useState } from 'react';\nimport { Modal, Button, Row, Col, Table, Typography } from 'antd';\nimport swal from 'sweetalert';\nimport { PlusOutlined, RestOutlined } from '@ant-design/icons';\nimport { createApiFn, getApiFn, sweetalertValidate, uuid } from '../../util/util';\nimport EditTable from '../common/EditTable';\nimport { updateApiFn } from '../../util/util';\nimport moment from 'moment';\nimport JournalFormData from '../../data/JournalFormData';\nimport InputField from '../common/InputField';\n\n\nconst JournalForm = ({ data , callback, setEditData, page }) => {\n\n    const initialData = { \n        dated: moment().format('YYYY-MM-DD'),\n        description: '',\n        ledgers : [] \n    };\n    const [formData, setFormData] = useState(initialData);\n\n    const [ledgers, setLedgers] = useState([]);\n    const fetchLedgers = async () => {\n        const response = await getApiFn('ledgers')('ledgers');\n        setLedgers(response.data.entity?.rows.reduce((result, data) => ({ ...result, [data.id]: data }), {}));\n      }\n\n\n    const onChange = (e) => {\n        setFormData({...formData,[e.target.name]: e.target.value});\n    }\n\n    useEffect(async () => {\n        await fetchLedgers();\n        console.log(data);\n        setFormData({\n            ...data,\n            ledgers: data.journalLedgers.map((journalLedger) => ({\n                id: uuid(),\n                key: uuid(),\n                ledgerId: journalLedger.ledger.id,\n                name: journalLedger.ledger.name,\n                dr: journalLedger.type === 'debit' ?  journalLedger.amount : '',\n                cr: journalLedger.type === 'credit' ?  journalLedger.amount : '',\n            }))\n        });\n    },[data])\n\n\n    const onSubmit = async (close) => {\n        const finalData = {\n            dated: formData.dated,\n            description: formData.description,\n            jounalLedgers: formData.ledgers\n        }\n\n        finalData.jounalLedgers = finalData.jounalLedgers.filter((l) => l.ledgerId); \n        finalData.jounalLedgers = finalData.jounalLedgers.map((l) => ({\n            type: l.dr ? 'debit' : 'credit',\n            amount: l.dr ? l.dr  : (l.cr != '' ? l.cr : 0),\n            ledgerId: l.ledgerId\n        }));\n        const sumData = finalData.jounalLedgers.reduce((result, l) => {\n            if(l.type == 'debit'){\n                result.sumDr += isNaN(parseFloat(l.amount)) ? 0 : parseFloat(l.amount);\n            }\n            if(l.type == 'credit'){\n                result.sumCr += isNaN(parseFloat(l.amount)) ? 0 : parseFloat(l.amount);\n            }\n            return result;\n        }, { sumDr: 0, sumCr: 0 });\n\n        if(finalData.jounalLedgers.length == 0){\n            sweetalertValidate('Please insert atleast one ledger');\n            return;\n        }\n        if(formData.dated == ''){\n            sweetalertValidate('Please select date');\n            return;\n        }\n\n        if(sumData.sumCr !== sumData.sumDr){\n            sweetalertValidate('Sum of Dr columm and Cr Column is not equal.');\n            return;\n        }\n        if(data) {\n            let response = await updateApiFn(page)(data.id, finalData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(`Succesfully updated ${page} details`, \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        else{\n            let response = await createApiFn(page)(finalData);\n            console.log(response);\n            if(response?.data?.status == true){\n                swal(`Succesfully added ${page} details`, \"success\");\n            }\n            else{\n                swal(\"OOPS Something Went wrong\", \"error\");\n            }\n        }\n        reset();\n        callback();\n    }\n\n    const reset = () => {\n        setFormData(initialData);\n        setEditData(null);\n    }\n    const columns = [\n        {\n            title: 'Ledger Name',\n            dataIndex: 'name',\n            width: '40%',\n            editable: true\n        },\n        {\n            title: 'Dr',\n            dataIndex: 'dr',\n            width: '30%',\n            editable: true\n        },\n        {\n            title: 'Cr',\n            dataIndex: 'cr',\n            width: '30%',\n            editable: true\n        },\n    ];\n\n    return (\n        <>\n            <div>\n            <Row>\n                { \n                        JournalFormData.map((field, i) => <InputField\n                            label={field.label}\n                            type={field.inputType} \n                            name={field.name}\n                            onChange={onChange}\n                            key={field.name}\n                            value={formData ? formData[field.name] : ''}\n                            lcol={i == 0 ? 2 : 3}\n                            icol={i == 0 ? 4 : 15}\n                        />\n                        )\n                    }      \n                </Row>\n                <Row>\n                    <Col  span={24}>\n                        <EditTable\n                            columns={columns} \n                            setDataSource={(dataSource) => setFormData({ ...formData, ledgers : dataSource })}\n                            dataSource={(formData && formData.ledgers) || []}\n                            ledgers={ledgers}\n                            notEditable={false}\n                        />\n                    </Col>\n                </Row>\n                <Row>\n                    <Col span={24} className='text-right'>\n                        <Button onClick={() => reset()} className='mr-4' icon={ <RestOutlined />}>\n                            Reset\n                        </Button>\n                        <Button type=\"primary\" onClick={() => onSubmit()} icon={ <PlusOutlined />} >\n                            { data ? 'Edit' : 'Add' } \n                        </Button>\n                    </Col>\n                \n                </Row>\n            </div>\n        </>\n    );\n};\n\nexport default JournalForm;\n","import { Breadcrumb, Typography } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport Reports from './Reports';\nimport Invoices from './Invoices';\nimport BulkUploadForm from './UploadForm';\nimport { CloseCircleOutlined, PlusCircleOutlined, UploadOutlined } from '@ant-design/icons';\nimport Button from '../atoms/Button';\nimport { getPageName, isUploadButton } from '../util/util';\nimport CustomerForm from './Forms/CustomerForm';\nimport InvoiceForm from './Forms/InvoiceForm';\nimport JournalForm from './Forms/JournalForm';\nconst { Title } = Typography;\n\nconst Page = ({ page }) => {\n\n    const [reload, setReload] = useState(false);\n    const [upload, setUpload] = useState(false);\n    const [showAdd, setShowAdd] = useState(false);\n    const [editData, setEditData] = useState(null);\n    useEffect(() => {\n        setUpload(false);\n        setShowAdd(false);\n        setReload(false);\n        setEditData(null);\n    }, [page]);\n\n    const generalForm = ['customer', 'vendor', 'company', 'item', 'groups', 'ledgers', 'receipts', 'payments'];\n    return (\n    <>\n        <Breadcrumb style={{ margin: '16px 0'}} className=\"text-4xl font-bold\">\n            <Breadcrumb.Item>{''}</Breadcrumb.Item>\n        </Breadcrumb>\n        <div className='relative flex'>\n            <Button \n                type=\"secondaryBtn\"\n                variant=\"secondaryBtn\"\n                btnClass=\"text-sm font-normal ml-2 px-3\"\n                onClick={() => setShowAdd(!showAdd)}\n            >\n                {!showAdd ? <PlusCircleOutlined className='mr-2'/> : <CloseCircleOutlined className='mr-2'/>}\n                {!showAdd ? `Add ${getPageName(page)}` : 'Close Form' }\n            </Button>\n            { isUploadButton(page) && <Button \n                type=\"primaryBtn\"\n                variant=\"primaryBtn\"\n                btnClass=\"text-sm font-normal ml-2 px-2\"\n                onClick={() => setUpload(!upload)}\n            >\n                {!upload ? <UploadOutlined className='mr-2'/> : <CloseCircleOutlined className='mr-2'/>}\n                { !upload ? 'Upload' : 'Close Upload'}\n            </Button>\n            }\n        </div>\n        \n        \n        { upload && <BulkUploadForm  page={page} setReload={setReload}/>}\n\n        {showAdd && \n            <div className=\"site-layout-background p-5\" id='form-div'>\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{editData ? 'Edit' : 'Add'} {getPageName(page)}</Title>\n                { (generalForm.includes(page)) && <CustomerForm \n                        data={editData}\n                        callback={() => setReload(!reload)}\n                        setEditData={setEditData}\n                        page={page}\n                    />\n                }\n\n                { (page === 'sales' || page == 'purchase') && <InvoiceForm \n                        data={editData}\n                        callback={() => setReload(!reload)}\n                        setEditData={setEditData}\n                        page={page}\n                    />\n                }\n\n                { (page === 'journals') && <JournalForm \n                        data={editData}\n                        callback={() => setReload(!reload)}\n                        setEditData={setEditData}\n                        page={page}\n                    />\n                }\n            </div> \n        }     \n        <div className='mt-5'>\n            <Invoices\n                page={page}\n                reload={reload}\n                setEditData={(value) => { \n                    setEditData(value);\n                    setShowAdd(true);\n                    setTimeout(() => document.getElementById('form-div').scrollIntoView(), 2);\n                }}\n                setReload={setReload}/>\n        </div>\n        \n    </>   \n    );\n};\n\nexport default Page;","import React, { useState } from 'react';\nimport { Switch, Route, Link } from 'react-router-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport './App.css';\nimport { Avatar, Breadcrumb, Layout, Menu } from 'antd';\nimport { Homepage, LoginTemplate, Navbar } from './components';\nimport { AppstoreOutlined, MailOutlined, NotificationOutlined, UserOutlined } from '@ant-design/icons';\nimport { getAuth, removeAuth } from './api';\nimport FundReport from './components/FundReport';\nimport Page from './components/Page';\nimport Customer from './components/Customer';\n\nconst { Header, Content, Footer, Sider } = Layout;\n\nconst App = () => {\n  const [collapsed, setCollapsed] = useState(false);\n  const auth = getAuth();\n  if(!auth){\n    return (\n      <>\n        <LoginTemplate />\n      </>\n    )\n  }\n\n  const logout = () => {\n    removeAuth(null);\n    window.location.reload(false);\n  }\n\n  return (\n    <Layout className='h-screen'>\n      <Sider collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}>\n        <Navbar collapsed={collapsed} />\n      </Sider>\n      <Layout className=\"site-layout\">\n        <Header\n          className=\"site-layout-background\"\n          style={{\n            padding: 0,\n          }}\n        >\n           <Menu mode=\"horizontal\" style={{ float: 'right', width: 'auto'}}>\n              <Menu.Item key=\"notification\" icon={<NotificationOutlined />}>\n              </Menu.Item>\n              <Menu.Item key=\"mail\" icon={<MailOutlined />}>\n              </Menu.Item>\n              <Menu.SubMenu key=\"profile\" icon={<UserOutlined />}>\n                {/* <Menu.Item key=\"two\" icon={<AppstoreOutlined />}>\n                  Navigation Two\n                </Menu.Item> */}\n                <Menu.Item key=\"logout\" icon={<AppstoreOutlined />} onClick={logout}>\n                  Sign Out\n                </Menu.Item>\n              </Menu.SubMenu>\n            </Menu>\n        </Header>\n        <Content style={{ margin: '0 16px' }} >\n          <div style={{ padding: 10, height: 'calc(100vh - 90px)', overflowY :'auto' }}>\n           <Switch>\n              <Route exact path=\"/\">\n                <FundReport />\n              </Route>\n              <Route exact path=\"/sales-reports\">\n                <Homepage page={'sales'}/>\n              </Route>\n              <Route exact path=\"/purchase-reports\">\n                <Homepage page={'purchase'}/>\n              </Route>\n              <Route exact path=\"/sales\">\n                <Page  page={'sales'} />\n              </Route>\n              <Route exact path=\"/purchases\">\n                <Page  page={'purchase'} />\n              </Route>\n              <Route exact path=\"/receipts\">\n                <Page  page={'receipts'} />\n              </Route>\n              <Route exact path=\"/payments\">\n                <Page  page={'payments'} />\n              </Route>\n              <Route exact path=\"/journals\">\n                <Page  page={'journals'} />\n              </Route>\n              <Route exact path=\"/customers\">\n                <Page page={'customer'}/>\n              </Route>\n              <Route exact path=\"/vendors\">\n                <Page page={'vendor'}/>\n              </Route>\n              <Route exact path=\"/divisions\">\n                <Page page={'company'}/>\n              </Route>\n              <Route exact path=\"/items\">\n                <Page page={'item'}/>\n              </Route>\n              <Route exact path=\"/ledgers\">\n                <Page page={'ledgers'}/>\n              </Route>\n              <Route exact path=\"/groups\">\n                <Page page={'groups'}/>\n              </Route>\n            </Switch>\n          </div>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n};\n\nexport default App;\n","import React, { useEffect, useState } from 'react';\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic, Table, Button } from 'antd';\nimport CustomerForm from './Forms/CustomerForm';\nimport { deleteCustomer, getCustomers } from '../api';\nimport CustomerData from '../data/CustomerData';\nimport { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { getPageName, getTitle, sweetalertMessage, sweetalertValidate } from '../util/util';\n\nconst { Title } = Typography;\n\nconst Customer = ({ page }) => {\n\n    const [customers, setCustomrs] = useState(null);\n    const [editData, setEditData] = useState(null);\n\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pageSize, setPageSize] = useState(10);\n    const [total, setTotal] = useState(0);\n\n    const [search, setSearch] = useState('');\n    const [filter, setFilter] = useState({});\n\n    const fetchCustomers = async () => {\n        const response = await getCustomers(page, search, (currentPage - 1) * pageSize, pageSize);\n        // console.log(response)\n        setCustomrs(response?.data?.entity.rows);\n        setTotal(response?.data?.entity.count);\n    }\n\n    useEffect(() => {\n        fetchCustomers();\n    },[page, currentPage, pageSize, search]);\n\n\n    const onEdit = (data) => {\n        setEditData({...data})\n    }\n\n    const  onDelete = async (data) => {\n        const isConfirm = confirm('Are you sure you want to delete ?')\n        if(isConfirm){\n            const response = await deleteCustomer(data.id);\n            if(response?.data?.status){\n                sweetalertMessage('Succesfully Deleted')\n            }\n            else{\n                sweetalertValidate('OOPS!! Something went wrong')\n            }\n            fetchCustomers();\n        } \n    }\n\n    const fieldData = CustomerData;\n    const columns = fieldData.map((column) => ({\n        title:  ( \n            <Typography.Text ellipsis={true} title={column.label}>\n                {getTitle(column, page)}\n            </Typography.Text>\n        ),\n        dataIndex: column.name,\n        key: column.name,\n        width: '150px',\n        render: (value, data) => {\n            if(column.name === 'companyId'){\n                return `${data.company.division} - ${data.company.name}` \n            }\n            return value\n        }\n    }));\n\n    columns.push({\n        title: 'Action',\n        key: 'operation',\n        width: 10,\n        render: (data) => {\n            return (\n                <div className=\"float-right\">\n                    <Button key={'edit'+data.id} type=\"primary\" onClick={() => onEdit(data)} title=\"Edit\">\n                        <EditOutlined />\n                    </Button>\n                    \n                    <Button key={'delete'+data.id} type=\"secondary\" onClick={() => onDelete(data)} className=\"ml-2\" title=\"Delete\">\n                        <DeleteOutlined />\n                    </Button>\n                </div>\n            );\n        },\n    });\n\n    const initpageSizeOptions = [10, 20, 50, 100];\n    const pageSizeOptions = [];\n    while(initpageSizeOptions.length > 0 && initpageSizeOptions[0] < total ){\n        pageSizeOptions.push(initpageSizeOptions[0] + '');\n        initpageSizeOptions.shift();\n    }\n    if(total > 10) pageSizeOptions.push( total + '');\n\n    const handlePageChange = (page) => {\n        setCurrentPage(page);\n    };\n\n    const handlePageSizeChange = (current, size) => {\n        setPageSize(size);\n        setCurrentPage(1);\n    };\n\n    return (\n        <div>\n            <div className=\"site-layout-background p-5\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{editData ? 'Edit' : 'Add'} {getPageName(page)} { editData ? `(${editData.name})`: '' }</Title>\n                <CustomerForm data={editData} callback={fetchCustomers} setEditData={setEditData}/>\n            </div>\n            <div className=\"site-layout-background p-5 mt-1\">\n                <Title level={3} style={{color: 'rgba(107, 114, 128, var(--tw-text-opacity))'}} className='border-b-2' >{getPageName(page)}</Title>\n                <Row className=\"w-full\">\n                    <Col span={24}>\n                        <Table\n                            dataSource={customers} \n                            columns={columns}\n                            bordered\n                            pagination={{ \n                                position: ['bottomRight', 'topRight'], \n                                pageSizeOptions,\n                                ocurrent: currentPage,\n                                pageSize: pageSize,\n                                onChange: handlePageChange,\n                                onShowSizeChange: handlePageSizeChange,\n                                total,\n                                showSizeChanger: true\n                             }}\n                            rowKey={(record) => record.id + (new Date().getTime() + Math.random() * 10000)}\n                        />\n                    </Col>\n                </Row> \n            </div>\n        </div>\n    );\n};\n\nexport default Customer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}